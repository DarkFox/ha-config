automation:
  - alias: Light Profile Frontend Theme Setter
    id: light_profile_frontend_theme_setter
    initial_state: True
    trigger:
      - platform: homeassistant
        event: start
      - platform: state
        entity_id: input_select.light_profile
      - platform: template
        alias: Set current mode when a browser becomes available
        value_template: >-
          [
            {%- for entity in states.binary_sensor | rejectattr('state', 'eq', 'unavailable') | selectattr('entity_id', 'match', '.+_browser_dark_mode') | list -%}
              "{{ entity.attributes.get('browserID') }}",
            {% endfor -%}
          ]
    variables:
      browser_id: >-
        {{ [trigger.to_state.attributes.browserID] if trigger.platform == 'template' and trigger.to_state.state != 'unavailable' else [] }}
    action:
      - choose:
          - conditions:
              - condition: state
                entity_id: input_select.light_profile
                state:
                  - "Bright"
            sequence:
              action: browser_mod.set_theme
              data:
                dark: light
                browser_id: "{{ browser_id }}"
          - conditions:
              - condition: state
                entity_id: input_select.light_profile
                state:
                  - "Ambient"
                  - "Night"
                  - "Off"
            sequence:
              action: browser_mod.set_theme
              data:
                dark: dark
                browser_id: "{{ browser_id }}"
        default:
          action: browser_mod.set_theme
          data:
            dark: auto
            browser_id: "{{ browser_id }}"

template:
  - binary_sensor:
      - name: Dark Mode
        state: "{{ states('input_select.light_profile') not in ['Bright', 'Default'] }}"
