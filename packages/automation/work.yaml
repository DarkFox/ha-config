binary_sensor:
  - platform: template
    sensors:
      working_from_home:
        value_template: "{{ is_state('calendar.arbejde_arbejder_hjemmefra', 'on') }}"
      on_call:
        value_template: "{{ is_state('calendar.arbejde_vagt', 'on') }}"
      scheduled_at_work:
        value_template: >
          {{
            is_state('calendar.arbejde_pa_rsr', 'on')
            or is_state('calendar.arbejde_pa_rsh', 'on')
          }}
      location_at_work:
        value_template: >
          {{
            is_state('device_tracker.arbejdstelefon', 'RSR')
            or is_state('device_tracker.arbejdstelefon', 'RSH')
          }}
      working:
        value_template: >
          {{
            is_state('binary_sensor.scheduled_at_work', 'on')
            or is_state('binary_sensor.location_at_work', 'on')
            or is_state('binary_sensor.working_from_home', 'on')
            or is_state('binary_sensor.on_call', 'on')
          }}

automation:
  - id: puzzel_state_confirmation
    alias: Puzzel state confirmation
    trigger:
      - platform: state
        entity_id: sensor.puzzel_profil
    condition:
      - condition: template
        value_template: "{{ trigger.from_state.state != 'unknown' }}"
    action:
      - service: notify.telegram_darkfox
        data:
          message: >-
            {% if is_state('sensor.puzzel_profil', 'Logget af') %}
              Logget af Puzzel
            {% else %}
              Logget på Puzzel - {{ states('sensor.puzzel_profil') }}
            {% endif %}

  - id: puzzel_remind_at_work
    initial_state: true
    alias: Remind me to log into puzzel queue
    trigger:
      - platform: state
        entity_id: binary_sensor.working
        to: "on"
        for:
          minutes: 5
    condition:
      - alias: "Not logged into an on call queue"
        condition: template
        value_template: "{{ is_state('sensor.puzzel_profil', 'Logget af') }}"
    action:
      - service: notify.telegram_darkfox
        data:
          message: "Log på Puzzel?"
          data:
            inline_keyboard: >-
              {{ state_attr('sensor.puzzel_status', 'result').profiles | map(attribute='name') | map('regex_replace', '\A(.*)\Z', '\\1:/puzzel_login \\1') | list }}

  - id: puzzel_remind_on_call
    initial_state: true
    alias: Remind me to log into on call queue
    trigger:
      - platform: state
        entity_id: binary_sensor.on_call
        to: "on"
    condition:
      - alias: "Not logged into an on call queue"
        condition: template
        value_template: "{{ not is_state('sensor.puzzel_profil', 'Vagt') }}"
    action:
      - service: notify.telegram_darkfox
        data:
          message: "Skift til vagt køen?"
          data:
            inline_keyboard:
              - "Log på RSR + Vagt:/puzzel_login RSR + Vagt"

  - id: puzzel_remind_log_off
    initial_state: true
    alias: Remind me to log off Puzzel
    trigger:
      - platform: state
        entity_id:
          - binary_sensor.working
          - binary_sensor.on_call
    condition:
      - condition: and
        conditions:
          - condition: state
            entity_id: binary_sensor.working
            state: "off"
          - condition: state
            entity_id: binary_sensor.on_call
            state: "off"
          - condition: state
            entity_id: binary_sensor.puzzel_status
            state: "on"
    action:
      - service: notify.telegram_darkfox
        data:
          message: "Du er stadig logget på Puzzel!"
          data:
            inline_keyboard:
              - "Log af:/puzzel_log_off"

  - id: telegram_bot_log_off_puzzel
    alias: "Telegram bot log off puzzel"
    initial_state: true
    trigger:
      - platform: event
        event_type: telegram_callback
        event_data:
          command: "/puzzel_log_off"
      - platform: event
        event_type: telegram_command
        event_data:
          command: "/puzzel_log_off"
    action:
      - service: telegram_bot.answer_callback_query
        data:
          callback_query_id: "{{ trigger.event.data.id }}"
          message: "Logger af Puzzel..."
      - service: script.puzzel_log_off

  - id: telegram_bot_log_on_puzzel
    alias: "Telegram bot log on Puzzel"
    initial_state: true
    trigger:
      - platform: event
        event_type: telegram_callback
        event_data:
          command: "/puzzel_login"
      - platform: event
        event_type: telegram_command
        event_data:
          command: "/puzzel_login"
    action:
      - service: telegram_bot.answer_callback_query
        data:
          callback_query_id: "{{ trigger.event.data.id }}"
          message: "Logger på {{ trigger.event.data['args'] | join(' ') }}..."
      - service: script.puzzel_log_on
        data:
          queue: "{{ trigger.event.data['args'] | join(' ') }}"

  - id: set_phone_modes
    initial_state: true
    alias: Set Phone Modes
    trigger:
      - platform: state
        entity_id:
          - binary_sensor.working
          - binary_sensor.on_call
          - binary_sensor.puzzel_status
          - sensor.arbejdstelefon_forstyr_ikke_sensoren
          - sensor.arbejdstelefon_ringetilstand
    action:
      - choose:
          - conditions:
              - alias: "Prevent silencing phone when active on Puzzel while on call or at work"
                condition: template
                value_template: >-
                  {{
                    (is_state('binary_sensor.working', 'on') or is_state('binary_sensor.on_call', 'on'))
                    and is_state('binary_sensor.puzzel_status', 'on')
                  }}
            sequence:
              - service: notify.mobile_app_arbejdstelefon
                data:
                  message: "command_ringer_mode"
                  title: normal
              - service: notify.mobile_app_arbejdstelefon
                data:
                  message: "command_dnd"
                  title: "off"
          - conditions:
              - alias: "Silence phone when going off call while sleeping"
                condition: template
                value_template: >-
                  {{
                    is_state('binary_sensor.working', 'off')
                    and is_state('binary_sensor.on_call', 'off')
                    and is_state('input_select.sleep_state', 'sleeping')
                  }}
            sequence:
              - service: notify.mobile_app_arbejdstelefon
                data:
                  message: "command_ringer_mode"
                  title: "vibrate"
              - service: notify.mobile_app_arbejdstelefon
                data:
                  message: "command_dnd"
                  title: "priority_only"
