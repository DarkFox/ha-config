input_boolean:
  force_on_call:

template:
  - sensor:
      - name: Next work start clock
        unique_id: next_work_start_clock
        state: >-
          {% if has_value('calendar.arbejdskalender_arbejde') and 'start_time' in states.calendar.arbejdskalender_arbejde.attributes %}
            {{ state_attr('calendar.arbejdskalender_arbejde', 'start_time').split(' ')[1][:-3] }}
          {% else %}
            unknown
          {% endif %}
      - name: Days to next work
        state: >-
          {% from 'easy_time.jinja' import count_the_days %}
          {% if has_value('calendar.arbejdskalender_arbejde') and 'start_time' in states.calendar.arbejdskalender_arbejde.attributes %}
            {% set start_time = state_attr('calendar.arbejdskalender_arbejde', 'start_time') | as_datetime | as_local %}
            {{ count_the_days(start_time) }}
          {% else %}
            unavailable
          {% endif %}
  - binary_sensor:
      - name: On call today
        state: >-
          {% from 'easy_time.jinja' import count_the_days %}
          {% if has_value('calendar.arbejdskalender_vagt') and 'start_time' in states.calendar.arbejdskalender_vagt.attributes %}
            {% set start_time = state_attr('calendar.arbejdskalender_vagt', 'start_time') | as_datetime | as_local %}
            {{ count_the_days(start_time)|int < 1 }}
          {% else %}
            false
          {% endif %}
      - name: Morning shift
        state: >-
          {% if has_value('calendar.arbejdskalender_arbejde') and 'start_time' in states.calendar.arbejdskalender_arbejde.attributes %}
            {% set start_time = state_attr('calendar.arbejdskalender_arbejde', 'start_time') | as_datetime | as_local %}
            {{ start_time.hour < 12 }}
          {% else %}
            false
          {% endif %}
      - name: Evening shift
        state: >-
          {% if has_value('calendar.arbejdskalender_arbejde') and 'start_time' in states.calendar.arbejdskalender_arbejde.attributes %}
            {% set start_time = state_attr('calendar.arbejdskalender_arbejde', 'start_time') | as_datetime | as_local %}
            {{ start_time.hour > 11 }}
          {% else %}
            false
          {% endif %}

      - name: Working From Home
        state: "{{ is_state('calendar.arbejde_arbejder_hjemmefra', 'on') }}"
      - name: On Call
        state: >-
          {{
            is_state('binary_sensor.scheduled_on_call', 'on')
            or (
              is_state('binary_sensor.puzzel_status', 'on')
              and 'vagt' in (state_attr('binary_sensor.puzzel_status', 'profil')|lower)
            )
          }}
      - name: Scheduled On Call
        state: >-
          {{
            is_state('input_boolean.force_on_call', 'on')
            or is_state('calendar.arbejdskalender_vagt', 'on')
          }}
      - name: Scheduled At Work
        state: >
          {{
            is_state('calendar.arbejdskalender_arbejde', 'on')
          }}
      - name: Location At Work
        state: >
          {{
            is_state('device_tracker.arbejdstelefon', 'RSR')
            or is_state('device_tracker.arbejdstelefon', 'RSH')
          }}
      - name: Working
        state: >
          {{
            is_state('binary_sensor.scheduled_at_work', 'on')
            or is_state('binary_sensor.scheduled_on_call', 'on')
            or is_state('binary_sensor.location_at_work', 'on')
            or is_state('binary_sensor.working_from_home', 'on')
          }}

automation:
  - id: puzzel_remind_on_call
    initial_state: true
    alias: Remind me to log into on call queue
    trigger:
      - platform: state
        entity_id: binary_sensor.scheduled_on_call
        to: "on"
        for:
          minutes: 1
    condition:
      - alias: "Not logged into an on call queue"
        condition: template
        value_template: "{{ not is_state('sensor.puzzel_profil', 'Vagt') }}"
    action:
      - service: notify.telegram_darkfox
        data:
          message: "Skift til vagt køen?"
          data:
            inline_keyboard:
              - "Log på Vagt:/puzzel_login Vagt"

  - id: puzzel_remind_log_off
    initial_state: true
    alias: Remind me to log off Puzzel
    trigger:
      - platform: state
        entity_id:
          - binary_sensor.working
          - binary_sensor.scheduled_on_call
    condition:
      - condition: and
        conditions:
          - condition: state
            entity_id: binary_sensor.working
            state: "off"
          - condition: state
            entity_id: binary_sensor.scheduled_on_call
            state: "off"
          - condition: state
            entity_id: binary_sensor.puzzel_status
            state: "on"
    action:
      - service: notify.telegram_darkfox
        data:
          message: "Du er stadig logget på Puzzel!"
          data:
            inline_keyboard:
              - "Log af:/puzzel_log_off"

  - id: set_work_phone_modes
    initial_state: true
    alias: Set Work Phone Modes
    trigger:
      - platform: state
        entity_id:
          - binary_sensor.working
          - sensor.arbejdstelefon_do_not_disturb_sensor
          - sensor.arbejdstelefon_ringer_mode
    action:
      - choose:
          - conditions:
              - alias: "Prevent silencing phone when on call or at work"
                condition: template
                value_template: >-
                  {{
                    is_state('binary_sensor.working', 'on')
                  }}
            sequence:
              - service: notify.mobile_app_arbejdstelefon
                data:
                  message: "command_ringer_mode"
                  data:
                    command: normal
              - service: notify.mobile_app_arbejdstelefon
                data:
                  message: "command_dnd"
                  data:
                    command: "off"
          - conditions:
              - alias: "Silence phone when going off call/work"
                condition: template
                value_template: >-
                  {{
                    is_state('binary_sensor.working', 'off')
                  }}
            sequence:
              - service: notify.mobile_app_arbejdstelefon
                data:
                  message: "command_ringer_mode"
                  data:
                    command: "vibrate"
              - service: notify.mobile_app_arbejdstelefon
                data:
                  message: "command_dnd"
                  data:
                    command: "priority_only"
