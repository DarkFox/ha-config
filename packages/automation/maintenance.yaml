template:
  - sensor:
      - name: "Low Battery"
        state: >
          {% set v = state_attr('sensor.low_battery', 'entities') %}
          {{ v|length if v else 0 }}
        attributes:
          entities: >
            {% set ns = namespace(ret=[]) %}
            {% set excludes = [
              "sensor\.low_battery",
              ".+_battery_power",
              ".+_battery_state",
              ".+_battery_health",
              ".+_battery_temperature",
              ".+_batteritilstand",
              ".+_batteriets_sundhed",
            ] %}
            {% set exclude_pattern = "({})".format('|'.join(excludes)) %}
            {% set exclude_states = ['unknown'] %}
            {% set include_states = ['on', 'unavailable'] %}

            {% for state in states.sensor if (
                '_batter' in state.entity_id
                or state.attributes.device_class == 'battery'
              )
              and not state.state in exclude_states
              and not (state.entity_id | regex_match(exclude_pattern))
              and state.state | int(0) <= 15
            %}
              {% set ns.ret = ns.ret + [state.entity_id] %}
            {% endfor %}

            {% for state in states.binary_sensor if (
                '_batter' in state.entity_id
                or state.attributes.device_class == 'battery'
              )
              and not state.state in exclude_states
              and not (state.entity_id | regex_match(exclude_pattern))
              and state.state in include_states
            %}
              {% set ns.ret = ns.ret + [state.entity_id] %}
            {% endfor %}

            {{ ns.ret }}

automation:
  - alias: "Low Battery"
    id: "low_battery"
    initial_state: true
    trigger:
      - platform: state
        entity_id: sensor.low_battery
        attribute: entities
        for:
          minutes: 15
      - platform: state
        entity_id: input_select.sleep_state
        to: "awake"
        for:
          minutes: 15
    condition:
      - condition: template
        value_template: "{{ bool((state_attr('sensor.low_battery', 'entities') or []) | length > 0) }}"
      - condition: state
        entity_id: input_select.sleep_state
        state: "awake"
    action:
      - service: notify.telegram_darkfox
        data:
          message: |
            {% set v = (state_attr('sensor.low_battery', 'entities') or []) | map('state_attr', 'friendly_name') | list %}
            {% set n = v|length if v else 0 %}
            {% set e = v|join('\n- ') if v else '' %}
            {% set m = 'Lavt batteri pÃ¥ {} enheder:\n- {}'.format(n, e) %}
            {{ m }}

  - alias: "Transmission Add-on not started"
    id: a0850ced-1cc8-46ce-8421-d3f850094e44
    initial_state: true
    trigger:
      - platform: template
        value_template: "{{ (states('sensor.last_boot') | as_timestamp) > (now() | as_timestamp - 900) }}"
    condition:
      - condition: state
        entity_id: sensor.transmission_status
        state: "unavailable"
    action:
      - service: notify.telegram_darkfox
        data:
          message: "Transmission Add-on not started. The VPN configuration probably broke again."
          data:
            inline_keyboard:
              - "Clean up & restart Transmission:/transmission_cleanup"

  - alias: "Telegram Command Transmission Cleanup"
    id: 68ab7376-1cdb-42a2-903e-7f69105d5653
    initial_state: true
    trigger:
      - platform: event
        event_type: telegram_callback
        event_data:
          data:
            command: "/transmission_cleanup"
      - platform: event
        event_type: telegram_command
        event_data:
          command: "/transmission_cleanup"
    action:
      - service: hassio.addon_stop
        data:
          addon: db21ed7f_transmission_openvpn
      - delay:
          seconds: 30
      - service: shell_command.transmission_cleanup
      - delay:
          seconds: 30
      - service: hassio.addon_restart
        data:
          addon: db21ed7f_transmission_openvpn

shell_command:
  transmission_cleanup: "rm -rf /homeassistant/vpn-configs-contrib"
