template:
  - sensor:
      - name: "Low Battery"
        state: >
          {% set v = state_attr('sensor.low_battery', 'entities') %}
          {{ v|length if v else 0 }}
        attributes:
          entities: >
            {% set ns = namespace(ret=[]) %}
            {% set excludes = [
              "sensor\.low_battery",
              ".+_battery_power",
              ".+_battery_state",
              ".+_battery_health",
              ".+_battery_temperature",
              ".+_batteritilstand",
              ".+_batteriets_sundhed",
              ".+_browser_battery",
              ".+_target_state_of_charge"
            ] %}
            {% set exclude_pattern = "({})".format('|'.join(excludes)) %}
            {% set exclude_states = ['unknown', 'unavailable'] %}
            {% set include_states = ['on'] %}

            {% for state in states.sensor if (
                '_batter' in state.entity_id
                or state.attributes.device_class == 'battery'
              )
              and not state.state in exclude_states
              and not (state.entity_id | regex_match(exclude_pattern))
              and state.state | int(0) <= 15
            %}
              {% set ns.ret = ns.ret + [state.entity_id] %}
            {% endfor %}

            {% for state in states.binary_sensor if (
                '_batter' in state.entity_id
                or state.attributes.device_class == 'battery'
              )
              and not state.state in exclude_states
              and not (state.entity_id | regex_match(exclude_pattern))
              and state.state in include_states
            %}
              {% set ns.ret = ns.ret + [state.entity_id] %}
            {% endfor %}

            {{ ns.ret }}

automation:
  - alias: Notify HA Shutdown
    id: e87622e0-9691-421b-8691-94fdab200eef
    initial_state: true
    trigger:
      platform: homeassistant
      event: shutdown
    action:
      - service: notify.telegram_darkfox
        data:
          message: "Home Assistant er ved at lukke ned!"

  - alias: Notify High Memory Usage
    id: 9b460db9-09da-4b32-8183-7e315bd8d9d6
    initial_state: true
    mode: single
    trigger:
      platform: numeric_state
      entity_id: sensor.system_monitor_memory_use_percent
      above: 85
    variables:
      memory_use: "{{ states('sensor.system_monitor_memory_use_percent') }}"
    action:
      - service: notify.telegram_darkfox
        data:
          message: |
            Hukommelsesforbrug er højt! {{ memory_use }}%
            Top 5 Add-ons:
            {%- set stats = state_attr('sensor.add_ons_stats', 'addon_stats') or {} -%}
            {%- set memory = stats.get('memory', {}) -%}
            {%- for key, value in memory.items() %}
              {{ key }}: {{ value }}%
              {%- if loop.index > 4 -%}
                {%- break -%}
              {%- endif -%}
            {%- endfor -%}
      - delay:
          minutes: 15

  - alias: Notify high CPU Usage
    id: 46d3d0e5-746b-4976-a66b-da481afbe993
    initial_state: true
    mode: single
    trigger:
      platform: numeric_state
      entity_id: sensor.processor_use
      above: 65
    variables:
      cpu_use: "{{ states('sensor.processor_use') }}"
    action:
      - service: notify.telegram_darkfox
        data:
          message: |
            CPU forbrug er højt! {{ cpu_use }}%
            Top 5 Add-ons:
            {%- set stats = state_attr('sensor.add_ons_stats', 'addon_stats') or {} -%}
            {%- set cpu = stats.get('cpu', {}) -%}
            {%- for key, value in cpu.items() %}
              {{ key }}: {{ value }}%
              {%- if loop.index > 4 -%}
                {%- break -%}
              {%- endif -%}
            {%- endfor -%}
      - delay:
          minutes: 15

  - alias: Notify Of New External IP
    id: e86275ad-9c5a-4243-9428-e47f82c03586
    initial_state: true
    trigger:
      platform: state
      entity_id: sensor.external_ip
    condition:
      - condition: template
        value_template: "{{ trigger.from_state and trigger.to_state }}"
      - condition: template
        value_template: "{{ not trigger.from_state.state == 'unknown' }}"
      - condition: template
        value_template: "{{ not trigger.to_state.state == 'unknown' }}"
    action:
      - service: notify.telegram_darkfox
        data:
          message: "Din eksterne IP har ændret sig fra {{ trigger.from_state.state }} til {{ trigger.to_state.state }}"

  - alias: Uncommitted Changes Notification
    id: bc36b25e-030a-4f15-a0e1-65cf739b7c37
    initial_state: true
    trigger:
      - platform: state
        entity_id: binary_sensor.uncommitted_changes
        to: "on"
        for:
          hours: 2
      - platform: state
        entity_id: input_select.sleep_state
        to: "awake"
        for:
          hours: 2
    condition:
      - condition: state
        entity_id: binary_sensor.uncommitted_changes
        state: "on"
        for:
          hours: 2
    action:
      - service: notify.telegram_darkfox
        data:
          message: "Uncommitted changes!"

  - alias: Clear TTS Cache
    id: ac4fb256-a4c2-4a83-ba9c-edf92df19852
    initial_state: true
    trigger:
      platform: time
      at: "04:45:00"
    action:
      - service: chime_tts.clear_cache
        data:
          clear_temp_tts_cache: true
          clear_www_tts_cache: true
          clear_chimes_cache: false
          clear_ha_tts_cache: false

  - alias: "Low Battery"
    id: "low_battery"
    initial_state: true
    trigger:
      - platform: state
        entity_id: sensor.low_battery
        attribute: entities
        for:
          minutes: 15
      - platform: state
        entity_id: input_select.sleep_state
        to: "awake"
        for:
          minutes: 15
    condition:
      - condition: template
        value_template: "{{ bool((state_attr('sensor.low_battery', 'entities') or []) | length > 0) }}"
      - condition: state
        entity_id: input_select.sleep_state
        state: "awake"
    action:
      - service: notify.telegram_darkfox
        data:
          message: |
            {% set v = (state_attr('sensor.low_battery', 'entities') or []) | map('state_attr', 'friendly_name') | list %}
            {% set n = v|length if v else 0 %}
            {% set e = v|join('\n- ') if v else '' %}
            {% set m = 'Lavt batteri på {} enheder:\n- {}'.format(n, e) %}
            {{ m }}

  - alias: "Check for duplicate package names"
    id: f9814b8f-6cd7-42bc-9cf2-138832c4b484
    initial_state: true
    trigger:
      - platform: time_pattern
        hours: "*"
        minutes: "/5"
        seconds: "0"
    action:
      - service: pyscript.find_duplicate_package_names

  - alias: "Notify of duplicate package names"
    id: b606263a-6423-4b66-b0b4-dfbbd0358ff9
    initial_state: true
    trigger:
      - platform: event
        event_type: duplicate_package_names
    condition:
      - condition: template
        value_template: "{{ trigger.event.data.get('duplicates', {})|length > 0 }}"
    action:
      - service: notify.telegram_darkfox
        data:
          message: |
            {%- set duplicates = trigger.event.data.get('duplicates', {}) -%}
            {%- set n = duplicates|length -%}
            Found {{ n }} duplicate package names:
            {%- for name, entities in duplicates.items() %}
              - {{ name }}:
                {%- for entity in entities %}
                  - {{ entity }}
                {%- endfor %}
            {% endfor %}
          data:
            parse_mode: "html"
