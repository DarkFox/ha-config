proximity:
  bil_to_home:
    zone: home
    devices: device_tracker.volkswagen_id_3_geolocation
    unit_of_measurement: m
    tolerance: 100

  # bil_to_rsr:
  #   zone: rsr
  #   devices: device_tracker.volkswagen_id_3_geolocation
  #   unit_of_measurement: m
  #   tolerance: 100
  #   state_characteristic: mean
  #   sampling_size: 20

  bil_to_rsh:
    zone: rsh
    devices: device_tracker.volkswagen_id_3_geolocation
    unit_of_measurement: m
    tolerance: 100

sensor:
  - platform: statistics
    name: proximity_bil_to_rsr_stats
    entity_id: proximity.bil_to_rsr
    state_characteristic: mean
    sampling_size: 20
    max_age:
      minutes: 5

  - platform: statistics
    name: proximity_bil_to_rsh_stats
    entity_id: proximity.bil_to_rsh
    state_characteristic: mean
    sampling_size: 20
    max_age:
      minutes: 5

input_text:
  car_charging_type:
  car_charging_started:

template:
  - sensor:
      - name: "Car Distance to Martin"
        state: "{{ distance('device_tracker.volkswagen_id_3_geolocation', 'person.martin') }}"
        device_class: distance
        unit_of_measurement: km
      - name: "Car Charging Idle Fee Starting At"
        state: >-
          {%
            if is_state('sensor.id3_plug_connection_state', 'connected')
            and not is_state('input_text.car_charging_type', '')
            and states('device_tracker.volkswagen_id_3_geolocation') in ['not_home', 'RSH', 'RSR']
          %}
            {% set car_charging_started = states('input_text.car_charging_started')|int %}
            {% set charge_type = states('input_text.car_charging_type') %}
            {% if car_charging_started|as_datetime %}
              {% if charge_type == 'ac' %}
                {% set fee_start_time = (car_charging_started + (180*60))|as_datetime|as_local %}
                {% if (fee_start_time.strftime('%H:%M') > '21:00') %}
                  {% set fee_start_time = (as_timestamp(fee_start_time) + (1*24*3600)) | timestamp_custom("%Y-%m-%d 09:00:00", True)|as_datetime|as_local %}
                {% elif (fee_start_time.strftime('%H:%M') < '09:00') %}
                  {% set fee_start_time = as_timestamp(fee_start_time) | timestamp_custom("%Y-%m-%d 09:00:00", True)|as_datetime|as_local %}
                {% endif %}
                {{ fee_start_time }}
              {% else %}
                {{ (car_charging_started + (90*60))|as_datetime|as_local }}
              {% endif %}
            {% endif %}
          {% endif %}
        device_class: timestamp

      - name: "Car Charging Idle Fee Starting In"
        state: >-
          {{ ((states('sensor.car_charging_idle_fee_starting_at')|as_timestamp - now().timestamp())/60)|int }}
        device_class: duration
        unit_of_measurement: minutes

      - name: "Car Charging Complete or Idle Fee Time"
        state: >-
          {%- set ct = (states('sensor.id3_remaining_charging_time') if is_state('binary_sensor.car_charging_done_before_idle_fee', 'on') else states('sensor.car_charging_idle_fee_starting_in'))|int -%}
          {% if ct > 60 %}{{ ct // 60 }}:{{ '{:0>2d}'.format(ct%60) }}{% else %}{{ct}}{% endif %}
        device_class: duration

  - binary_sensor:
      - name: "Car charging done before idle fee"
        state: "{{ states('sensor.id3_remaining_charging_time') < states('sensor.car_charging_idle_fee_starting_in') }}"
        attributes:
          icon: mdi:car-clock
      - name: "In Car"
        state: "{{'VW Fox' in (state_attr('sensor.darkphone_bluetooth_connection', 'connected_paired_devices')|join(', ')) }}"
      - name: At Work Soon
        state: "{{ states('proximity.bil_to_rsh')|float < 2000 }}"
      - name: ID3 Locked
        state: >-
          {{
            is_state('sensor.id3_door_front_left_lock_status', 'unlocked')
            or is_state('sensor.id3_door_front_right_lock_status', 'unlocked')
            or is_state('sensor.id3_door_rear_left_lock_status', 'unlocked')
            or is_state('sensor.id3_door_rear_right_lock_status', 'unlocked')
            or is_state('sensor.id3_trunk_lock_status', 'unlocked')
          }}
        device_class: lock

automation:
  - id: alert_car_unlocked
    alias: Alert car unlocked
    trigger:
      - platform: numeric_state
        entity_id: sensor.car_distance_to_martin
        above: 0.1
        for:
          seconds: 30
      - platform: state
        entity_id: binary_sensor.id3_locked
        to: "on"
        for:
          minutes: 5
    condition:
      - alias: "Car unlocked"
        condition: state
        entity_id: binary_sensor.id3_locked
        state: "on"
      - alias: "Car parked"
        condition: state
        entity_id: binary_sensor.volkswagen_id_3_ignition
        state: "off"
    action:
      - service: script.notify_everywhere
        data:
          message: Bilen er ikke låst!
          severity: 2

  - id: climatise_car_for_upcoming_drive
    alias: climatise_car_for_upcoming_drive
    trigger:
      - platform: state
        entity_id:
          - binary_sensor.commute_soon
          - binary_sensor.martin_next_scheduled_destination_leave_soon
        from: "off"
        to: "on"
        for:
          minutes: 25
    condition:
      - alias: "If at home"
        condition: state
        entity_id: person.martin
        state: "home"
    action:
      - alias: "Climatise car"
        service: switch.turn_on
        target:
          entity_id: switch.id3_climatisation

  - id: time_to_leave_notification
    alias: time_to_leave_notification
    initial_state: true
    mode: single
    trigger:
      - platform: numeric_state
        entity_id:
          - sensor.car_commute_leave_in
          - sensor.next_scheduled_leave_in
        below: 31
      - platform: numeric_state
        entity_id:
          - sensor.car_commute_leave_in
          - sensor.next_scheduled_leave_in
        below: 16
      - platform: numeric_state
        entity_id:
          - sensor.car_commute_leave_in
          - sensor.next_scheduled_leave_in
        below: 6
      - platform: numeric_state
        entity_id:
          - sensor.car_commute_leave_in
          - sensor.next_scheduled_leave_in
        below: 1
    condition:
      - alias: "If at home"
        condition: state
        entity_id: person.martin
        state: "home"
    action:
      - service: script.notify_everywhere
        data:
          message: >-
            {% if trigger.to_state.state|int(-1) == 0 %}
              Tid til at tage afsted.
            {% else %}
              Tag afsted om {{ trigger.to_state.state|int(-1) }} minutter.
            {% endif %}

  - id: climatise_car_for_commute_from_work
    alias: climatise_car_for_commute_from_work
    trigger:
      - platform: state
        entity_id: binary_sensor.going_home_soon
        from: "off"
        to: "on"
    condition:
      - alias: "If at work"
        condition: state
        entity_id: person.martin
        state: RSH
    action:
      - alias: "Climatise car"
        service: switch.turn_on
        target:
          entity_id: switch.id3_climatisation

  - id: set_car_charging_started_time
    alias: Set Car Charging Started Time
    trigger:
      - platform: state
        entity_id: sensor.id3_plug_connection_state
        from: "disconnected"
        to: "connected"
    action:
      - alias: "Set Car Charging Started to now"
        service: input_text.set_value
        target:
          entity_id: input_text.car_charging_started
        data:
          value: "{{ now().timestamp()|int }}"

  - id: set_car_charging_type
    alias: Set Car Charging Type
    trigger:
      - platform: state
        entity_id: sensor.id3_charge_type
        from: "invalid"
        to:
          - ac
          - dc
    action:
      - alias: "Set latest charge type"
        service: input_text.set_value
        target:
          entity_id: input_text.car_charging_type
        data:
          value: "{{ trigger.to_state.state }}"

  - id: clear_car_charging_started_time
    alias: Clear Car Charging Started Time
    trigger:
      - platform: state
        entity_id: sensor.id3_plug_connection_state
        to: "disconnected"
    action:
      - alias: "Clear charge type"
        service: input_text.set_value
        target:
          entity_id: input_text.car_charging_type
        data:
          value: ""
      - alias: "Clear Car Charging Started to now"
        service: input_text.set_value
        target:
          entity_id: input_text.car_charging_started
        data:
          value: ""

  - alias: notify_car_charging
    id: notify_car_charging
    initial_state: true
    trigger:
      - platform: state
        entity_id: sensor.id3_remaining_charging_time
        not_from: "unavailable"
    condition:
      - alias: "Estimated charging time remaining changed by more than 5 minutes"
        condition: template
        value_template: >-
          {%- set from_time = trigger.from_state.state|int(0) -%}
          {%- set to_time = trigger.to_state.state|int(0) -%}
          {{ (from_time - to_time > 5 or to_time - from_time > 5) }}
    action:
      - service: notify.telegram_darkfox
        data:
          message: >
            Bilen lader op fra {{ states('sensor.id3_state_of_charge') }}% til {{ states('sensor.id3_target_state_of_charge') }}%.

            Færdig ca. kl. {{ states('sensor.id3_charging_complete_at')|as_timestamp|timestamp_custom('%H:%M', True) }}.

  - alias: notify_15_minutes_till_car_charged
    id: notify_15_minutes_till_car_charged
    initial_state: true
    trigger:
      - platform: numeric_state
        entity_id: sensor.id3_remaining_charging_time
        below: 16
    condition:
      - condition: state
        entity_id: sensor.id3_charging_state
        state: "charging"
    action:
      - service: notify.telegram_darkfox
        data:
          message: >-
            Bilen er ladt op til {{ states('sensor.id3_state_of_charge') }}/{{ states('sensor.id3_target_state_of_charge') }}%.
            Færdig om {{ states('sensor.id3_remaining_charging_time') }} minutter.

  - alias: notify_idle_fee_time
    id: notify_idle_fee_time
    initial_state: true
    trigger:
      - platform: state
        entity_id: sensor.car_charging_idle_fee_starting_at
    action:
      - delay:
          seconds: 1
      - service: notify.telegram_darkfox
        data:
          message: >-
            Blokeringsgebyr starter kl. {{ states('sensor.car_charging_idle_fee_starting_at')|as_timestamp|timestamp_custom('%H:%M', True) }}.
            {{ 'Opladning bliver ikke færdig inden.' if is_state('binary_sensor.car_charging_done_before_idle_fee', 'off') }}

  - id: warn_charger_idle_fees
    alias: warn_charger_idle_fees
    initial_state: true
    mode: restart
    trigger:
      - platform: numeric_state
        entity_id: sensor.car_charging_idle_fee_starting_in
        below: 16
    action:
      - service: notify.telegram_darkfox
        data:
          message: Blokeringsgebyr starter om {{ states('sensor.car_charging_idle_fee_starting_in') }} minutter!
      - wait_template: "{{ is_state('sensor.car_charging_idle_fee_starting_in', '') }}"
        timeout:
          minutes: "{{ states('sensor.car_charging_idle_fee_starting_in')|int }}"
      - condition: "{{ not wait.completed }}"
      - service: notify.telegram_darkfox
        data:
          message: Blokeringsgebyr starter nu!

  - alias: notify_car_charged
    id: notify_car_charged
    initial_state: true
    trigger:
      - platform: state
        entity_id: sensor.id3_charging_state
        from: "charging"
    condition:
      - condition: not
        conditions:
          - condition: state
            entity_id: sensor.id3_charging_state
            state: "unavailable"
    action:
      - service: notify.telegram_darkfox
        data:
          message: "Oplading afsluttet. Bilen er ladt op til {{ states('sensor.id3_state_of_charge') }}%."

  - alias: notify_car_climatising
    id: notify_car_climatising
    trigger:
      - platform: state
        entity_id: binary_sensor.id3_climatising
        to: "on"
    condition:
      - condition: numeric_state
        entity_id: sensor.id3_remaining_climatisation_time
        above: 6
    action:
      - service: notify.telegram_darkfox
        data:
          message: "Klimatiserer bilen til {{ states('sensor.id3_target_temperature') }}°. {{ states('sensor.id3_remaining_climatisation_time') }} minutter tilbage."
          data:
            inline_keyboard:
              - "Stop klimatisering:/car_climatisation_off"
      - service: automation.turn_on
        target:
          entity_id: automation.notify_car_climatisation_end

  - alias: notify_car_climatisation_end
    id: notify_car_climatisation_end
    initial_state: false
    trigger:
      - platform: state
        entity_id: binary_sensor.id3_climatising
        to: "off"
    action:
      - service: notify.telegram_darkfox
        data:
          message: "Klimatisering afsluttet."
      - service: automation.turn_off
        target:
          entity_id: automation.notify_car_climatisation_end

  - alias: notify_chargers_available_work
    id: notify_chargers_available_work
    trigger:
      - platform: state
        entity_id: binary_sensor.at_work_soon
        to: "on"
    condition:
      - condition: or
        conditions:
          - alias: "Commuting to work"
            condition: state
            entity_id: binary_sensor.commute_soon
            state: "on"
          - alias: "Late to work :P"
            condition: state
            entity_id: binary_sensor.scheduled_at_work
            state: "on"
      - alias: "Car not plugged in"
        condition: state
        entity_id: sensor.id3_plug_connection_state
        state: "disconnected"
      - alias: "Car needs charging"
        condition: numeric_state
        entity_id: sensor.id3_state_of_charge
        below: 50
    action:
      - service: automation.trigger
        target:
          entity_id: automation.car_chargers_rsh

  - id: car_menu
    initial_state: true
    alias: Bil Menu
    trigger:
      - platform: event
        event_type: telegram_callback
        event_data:
          command: "/bil"
      - platform: event
        event_type: telegram_command
        event_data:
          command: "/bil"
    action:
      - service: notify.telegram_darkfox
        data:
          message: >
            {% if is_state('sensor.id3_charging_state', 'charging') -%}
              Opladning startet. Bilen lader op til {{ states('sensor.id3_target_state_of_charge') }}%.
              Færdig ca. {{ states('sensor.id3_charging_complete_at') }}
            {%- else -%}
              Oplading afsluttet. Bilen er ladt op til {{ states('sensor.id3_state_of_charge') }}%.
            {%- endif %}
            {%- if states('sensor.id3_remaining_climatisation_time')|int > 0 -%}
              Klimatiserer bilen til {{ states('sensor.id3_target_temperature') }}°. {{ states('sensor.id3_remaining_climatisation_time') }} minutter tilbage.
            {%- else -%}
              Klimatisering afsluttet.
            {%- endif -%}
      - service: notify.telegram_darkfox
        data:
          message: "Menu:"
          data:
            inline_keyboard:
              - "Klimatisering:/car_climatisation, Opladning:/car_charging"

  - id: car_climatisation_menu
    initial_state: true
    alias: Bil Klimatisering Menu
    trigger:
      - platform: event
        event_type: telegram_callback
        event_data:
          command: "/car_climatisation"
      - platform: event
        event_type: telegram_command
        event_data:
          command: "/car_climatisation"
    variables:
      temp: "{{ states('sensor.id3_target_temperature')|int }}"
    action:
      - service: notify.telegram_darkfox
        data:
          message: "Klimatisering Menu"
          data:
            inline_keyboard:
              - "{{ 'Stop klimatisering:/car_climatisation_off' if states('sensor.id3_remaining_climatisation_time')|int > 0 else 'Klimatiser nu:/car_climatisation_on' }}"
              - "{{ '[18°]' if temp == 18 else '18°' }}:/car_climatisation_set 18, {{ '[19°]' if temp == 19 else '19°' }}:/car_climatisation_set 19, {{ '[20°]' if temp == 20 else '20°' }}:/car_climatisation_set 20"
              - "{{ '[21°]' if temp == 21 else '21°' }}:/car_climatisation_set 21, {{ '[22°]' if temp == 22 else '22°' }}:/car_climatisation_set 22, {{ '[23°]' if temp == 23 else '23°' }}:/car_climatisation_set 23"

  - id: car_climatisation_set
    initial_state: true
    alias: Bil Klimatisering Sæt temperatur
    trigger:
      - platform: event
        event_type: telegram_callback
        event_data:
          command: "/car_climatisation_set"
      - platform: event
        event_type: telegram_command
        event_data:
          command: "/car_climatisation_set"
    action:
      - service: number.set_value
        target:
          entity_id: number.id3_target_climate_temperature
        data:
          temperature: "{{ trigger.event.data['args'][0] }}"
      - service: notify.telegram_darkfox
        data:
          message: >-
            Temperatur sat til {{ trigger.event.data['args'][0] }}°.

  - id: car_climatisation_on
    initial_state: true
    alias: Bil Klimatisering Tænd
    trigger:
      - platform: event
        event_type: telegram_callback
        event_data:
          command: "/car_climatisation_on"
      - platform: event
        event_type: telegram_command
        event_data:
          command: "/car_climatisation_on"
    action:
      - service: switch.turn_on
        target:
          entity_id: switch.id3_climatisation

  - id: car_climatisation_off
    initial_state: true
    alias: Bil Klimatisering Stop
    trigger:
      - platform: event
        event_type: telegram_callback
        event_data:
          command: "/car_climatisation_off"
      - platform: event
        event_type: telegram_command
        event_data:
          command: "/car_climatisation_off"
    action:
      - service: switch.turn_off
        target:
          entity_id: switch.id3_climatisation

  - id: car_charging_menu
    initial_state: true
    alias: Bil Opladning Menu
    trigger:
      - platform: event
        event_type: telegram_callback
        event_data:
          command: "/car_charging"
      - platform: event
        event_type: telegram_command
        event_data:
          command: "/car_charging"
    action:
      - service: notify.telegram_darkfox
        data:
          message: "Opladning Menu"
          data:
            inline_keyboard:
              - "{{ 'Stop opladning:/car_charging_off' if is_state('sensor.id3_charging_state', 'charging') else 'Start opladning:/car_charging_on' }}"
              - "50%:/car_charging_set 50, 60%:/car_charging_set 60, 70%:/car_charging_set 70, 80%:/car_charging_set 80, 90%:/car_charging_set 90, 100%:/car_charging_set 100"
              - "Ladere RSH:/chargers_rsh, Ladere RSR:/chargers_rsr"

  - id: car_chargers_rsh
    initial_state: true
    alias: car_chargers_rsh
    trigger:
      - platform: event
        event_type: telegram_callback
        event_data:
          command: "/chargers_rsh"
      - platform: event
        event_type: telegram_command
        event_data:
          command: "/chargers_rsh"
    action:
      - choose:
          - conditions:
              - condition: numeric_state
                entity_id: sensor.rsh_p2_eon_ladere
                above: 1
            sequence:
              - service: notify.telegram_darkfox
                data:
                  message: "Der er {{ states('sensor.rsh_p2_eon_ladere') }} Eon ladestationer ledige i P2."
          - conditions:
              - condition: numeric_state
                entity_id: sensor.rsh_p2_clever_ladere
                above: 0
            sequence:
              - service: notify.telegram_darkfox
                data:
                  message: "Der er {{ states('sensor.rsh_p2_clever_ladere') }} Clever ladestationer ledige i P2."
          - conditions:
              - condition: numeric_state
                entity_id: sensor.rsh_p4_spirii_ladere
                above: 0
            sequence:
              - service: notify.telegram_darkfox
                data:
                  message: "Der er {{ states('sensor.rsh_p4_spirii_ladere') }} Spirii ladestationer ledige på P4."
          - conditions:
              - condition: numeric_state
                entity_id: sensor.rsh_p4_eon_ladere
                above: 0
            sequence:
              - service: notify.telegram_darkfox
                data:
                  message: "Der er {{ states('sensor.rsh_p4_eon_ladere') }} Eon ladestationer ledige på P4."
          - conditions:
              - condition: numeric_state
                entity_id: sensor.rsh_p7_spirii_ladere
                above: 1
            sequence:
              - service: notify.telegram_darkfox
                data:
                  message: "Der er {{ states('sensor.rsh_p7_spirii_ladere') }} Spirii ladestationer ledige på P7."

  - id: car_chargers_rsr
    initial_state: true
    alias: car_chargers_rsr
    trigger:
      - platform: event
        event_type: telegram_callback
        event_data:
          command: "/chargers_rsr"
      - platform: event
        event_type: telegram_command
        event_data:
          command: "/chargers_rsr"
    action:
      - choose:
          - conditions:
              - condition: numeric_state
                entity_id: sensor.rsr_p_hus_spirii_ladere
                above: 1 # One spot likely taken by car charging from Clever charger
            sequence:
              - service: notify.telegram_darkfox
                data:
                  message: "Der er {{ states('sensor.rsr_p_hus_spirii_ladere') }} Spirii ladestationer ledige i P-Huset."
          - conditions:
              - condition: numeric_state
                entity_id: sensor.rsr_p_hus_clever_ladere
                above: 1 # One spot reserved for carshare
            sequence:
              - service: notify.telegram_darkfox
                data:
                  message: "Der er {{ states('sensor.rsr_p_hus_clever_ladere') }} Clever ladestationer ledige i P-Huset."
          - conditions:
              - condition: numeric_state
                entity_id: sensor.rsr_hovedindgang_spirii_ladere
                above: 0
            sequence:
              - service: notify.telegram_darkfox
                data:
                  message: "Der er {{ states('sensor.rsr_hovedindgang_spirii_ladere') }} Spirii ladestationer ledige ved hovedindgangen."
          - conditions:
              - condition: numeric_state
                entity_id: sensor.rsr_patienthotel_clever_ladere
                above: 0
            sequence:
              - service: notify.telegram_darkfox
                data:
                  message: "Der er {{ states('sensor.rsr_patienthotel_clever_ladere') }} ladestationer ledige ved patienthotellet."
          - conditions:
              - condition: numeric_state
                entity_id: sensor.rsr_hovedindgang_clever_ladere
                above: 0
            sequence:
              - service: notify.telegram_darkfox
                data:
                  message: "Der er {{ states('sensor.rsr_hovedindgang_clever_ladere') }} Clever ladestationer ledige ved hovedindgangen."
          - conditions:
              - condition: numeric_state
                entity_id: sensor.rsr_hovedindgang_eon_ladere
                above: 0
            sequence:
              - service: notify.telegram_darkfox
                data:
                  message: "Der er {{ states('sensor.rsr_hovedindgang_eon_ladere') }} Eon ladestationer ledige ved hovedindgangen."
          - conditions:
              - condition: numeric_state
                entity_id: sensor.rsr_nordflojen_eon_ladere
                above: 0
            sequence:
              - service: notify.telegram_darkfox
                data:
                  message: "Der er {{ states('sensor.rsr_nordflojen_eon_ladere') }} Eon ladestationer ledige ved nordfløjen."
          - conditions:
              - condition: numeric_state
                entity_id: sensor.rsr_blegdamsvej_spirii_ladere
                above: 0
            sequence:
              - service: notify.telegram_darkfox
                data:
                  message: "Der er {{ states('sensor.rsr_blegdamsvej_spirii_ladere') }} Spirii ladestationer ledige på den anden side af Blegdamsvej."
