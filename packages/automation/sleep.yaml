input_datetime:
  fallback_wake_up_time:
    name: Standard opvågningstid
    has_date: false
    has_time: true

input_select:
  sleep_state:
    icon: mdi:sleep
    options:
      - awake
      - bedtime
      - in bed
      - sleeping
      - paused
      - smart wake
      - alarm
      - snoozing
      - waking

script:
  morning_briefing:
    alias: Morning Briefing
    sequence:
      - service: homeassistant.update_entity
        data:
          entity_id: sensor.tts_greeting
      - service: tts.google_cloud_say
        data_template:
          entity_id: "{{ device_entity_id }}"
          message: >
            {{ states("sensor.tts_greeting") }}. Klokken er {{ states("sensor.time") }}.
            {{ states("sensor.dmi_vejr_tts") }}

sensor:
  - platform: template
    sensors:
      next_wfh_event:
        value_template: >-
          {% set time = as_timestamp(state_attr('calendar.arbejde_arbejder_hjemmefra', 'start_time')) or false %}
          {{ time if as_timestamp(now())+(1*60*60) < time else false }}
      next_rsr_event:
        value_template: >-
          {% set time = as_timestamp(state_attr('calendar.arbejde_pa_rsr', 'start_time')) or false %}
          {{ time if as_timestamp(now())+(1*60*60) < time else false }}
      next_rsh_event:
        value_template: >-
          {% set time = as_timestamp(state_attr('calendar.arbejde_pa_rsh', 'start_time')) or false %}
          {{ time if as_timestamp(now())+(1*60*60) < time else false }}
      next_personal_event:
        value_template: >-
          {% set time = as_timestamp(state_attr('calendar.personlig', 'start_time')) or false %}
          {{ time if as_timestamp(now())+(1*60*60) < time else false }}
      next_tripit_event:
        value_template: >-
          {% set time = as_timestamp(state_attr('calendar.tripit', 'start_time')) or false %}
          {{ time if as_timestamp(now())+(1*60*60) < time else false }}
      fallback_wake_up_time:
        value_template: >-
          {%- set hour = state_attr('input_datetime.fallback_wake_up_time', 'hour') -%}
          {%- set minute = state_attr('input_datetime.fallback_wake_up_time', 'minute') -%}
          {%- set days = 0 if 0 <= now().hour <= hour else 1 -%}
          {{ as_timestamp(now().replace(hour=hour+2,minute=minute,second=0,microsecond=0) + timedelta(days=days)) }}
      wake_up_event_source:
        value_template: "{{ state_attr('sensor.next_event_for_wakeup_time', 'min_entity_id') }}"
      wake_up_time:
        friendly_name: "Opvågningstidspunkt"
        value_template: "{{ (states('sensor.next_event_for_wakeup_time')|int - (2*60*60)) | timestamp_local() }}"
      bedtime:
        friendly_name: "Sengetid"
        value_template: "{{ (states('sensor.wake_up_time')|as_timestamp() - (8*60*60)) | timestamp_local() }}"
  - platform: min_max
    name: next_event_for_wakeup_time
    type: min
    entity_ids:
      - sensor.next_wfh_event
      - sensor.next_rsr_event
      - sensor.next_rsh_event
      - sensor.next_personal_event
      - sensor.next_tripit_event
      - sensor.fallback_wake_up_time

binary_sensor:
  - platform: template
    sensors:
      wake_up_time:
        friendly_name: "Opvågningstidspunkt"
        value_template: "{{ (states('sensor.wake_up_time')|as_timestamp()) < (now()|as_timestamp) }}"
      bedtime:
        friendly_name: "Sengetid"
        value_template: "{{ (states('sensor.bedtime')|as_timestamp()) < (now()|as_timestamp) < (states('sensor.wake_up_time')|as_timestamp()) }}"

automation:
  #######################
  # SLEEP STATE MACHINE #
  #######################

  - alias: sleep_state_bedtime
    initial_state: true
    trigger:
      - platform: state
        entity_id: binary_sensor.martin_presence_delayed
        to: "on"
      - platform: state
        entity_id: binary_sensor.bedtime
        to: "on"
    condition:
      condition: and
      conditions:
        - condition: state
          entity_id: binary_sensor.martin_presence_delayed
          state: "on"
        - condition: state
          entity_id: binary_sensor.bedtime
          state: "on"
        - condition: state
          entity_id: input_select.sleep_state
          state: "awake"
    action:
      service: input_select.select_option
      data:
        entity_id: input_select.sleep_state
        option: bedtime

  - alias: sleep_state_in_bed
    initial_state: true
    trigger:
      - platform: state
        entity_id: input_select.sleep_state
        to: "bedtime"
      - platform: state
        entity_id: sensor.arbejdstelefon_oplader_type
        to: "wireless"
    condition:
      condition: and
      conditions:
        - condition: state
          entity_id: binary_sensor.seng_bevaegelse
          state: "on"
        - condition: state
          entity_id: input_select.sleep_state
          state: "bedtime"
        - condition: state
          entity_id: sensor.arbejdstelefon_oplader_type
          state: "wireless"
        - condition: state
          entity_id: binary_sensor.martin_presence_delayed
          state: "on"
    action:
      service: input_select.select_option
      data:
        entity_id: input_select.sleep_state
        option: in bed

  - alias: sleep_state_sleeping
    initial_state: true
    trigger:
      - platform: event
        event_type: sleep_as_android
        event_data:
          value: sleep_tracking_started
      - platform: event
        event_type: sleep_as_android
        event_data:
          value: sleep_tracking_resumed
    condition:
      condition: and
      conditions:
        - condition: state
          entity_id: binary_sensor.martin_presence_delayed
          state: "on"
        - condition: or
          conditions:
            - condition: state
              entity_id: input_select.sleep_state
              state: in bed
            - condition: state
              entity_id: input_select.sleep_state
              state: paused
    action:
      - service: input_select.select_option
        data:
          entity_id: input_select.sleep_state
          option: sleeping

  - alias: sleep_state_sleeping_cancelled
    initial_state: true
    trigger:
      platform: event
      event_type: sleep_as_android
      event_data:
        value: sleep_tracking_stopped
    condition:
      condition: and
      conditions:
        - condition: state
          entity_id: binary_sensor.martin_presence_delayed
          state: "on"
        - condition: time
          after: "20:00:00"
          before: "04:00:00"
        - condition: or
          conditions:
            - condition: state
              entity_id: input_select.sleep_state
              state: sleeping
            - condition: state
              entity_id: input_select.sleep_state
              state: paused
    action:
      - service: input_select.select_option
        data:
          entity_id: input_select.sleep_state
          option: bedtime

  - alias: sleep_state_paused
    initial_state: true
    trigger:
      - platform: event
        event_type: sleep_as_android
        event_data:
          value: sleep_tracking_paused
      - platform: state
        entity_id: binary_sensor.sovevaerelse_gulv_bevaegelse
        to: "on"
      - platform: state
        entity_id:
          - binary_sensor.gang_entre_bevaegelse
          - binary_sensor.gang_badevaerelse_bevaegelse
        to: "on"
    condition:
      condition: and
      conditions:
        - condition: state
          entity_id: binary_sensor.martin_presence_delayed
          state: "on"
        - condition: state
          entity_id: input_select.sleep_state
          state: sleeping
    action:
      service: input_select.select_option
      data:
        entity_id: input_select.sleep_state
        option: paused

  - alias: sleep_state_unpause
    initial_state: true
    trigger:
      - platform: state
        entity_id: binary_sensor.seng_bevaegelse
        to: "on"
      - platform: state
        entity_id: binary_sensor.sovevaerelse_gulv_bevaegelse
        to: "off"
    condition:
      condition: and
      conditions:
        - condition: state
          entity_id: binary_sensor.seng_bevaegelse
          state: "on"
        - condition: state
          entity_id: input_select.sleep_state
          state: "paused"
        - condition: state
          entity_id: input_select.latest_motion
          state: "Bedroom"
        - condition: state
          entity_id: binary_sensor.sovevaerelse_gulv_bevaegelse
          state: "off"
    action:
      service: input_select.select_option
      data:
        entity_id: input_select.sleep_state
        option: sleeping

  - alias: sleep_state_smart_wake
    initial_state: true
    trigger:
      platform: event
      event_type: sleep_as_android
      event_data:
        value: smart_period
    condition:
      condition: and
      conditions:
        - condition: state
          entity_id: binary_sensor.martin_presence_delayed
          state: "on"
        - condition: or
          conditions:
            - condition: state
              entity_id: input_select.sleep_state
              state: in bed
            - condition: state
              entity_id: input_select.sleep_state
              state: sleeping
            - condition: state
              entity_id: input_select.sleep_state
              state: paused
    action:
      - service: input_select.select_option
        data:
          entity_id: input_select.sleep_state
          option: smart wake

  - alias: sleep_state_alarm
    initial_state: true
    trigger:
      platform: event
      event_type: sleep_as_android
      event_data:
        value: alarm_alert_start
    condition:
      condition: and
      conditions:
        - condition: state
          entity_id: binary_sensor.martin_presence_delayed
          state: "on"
        - condition: or
          conditions:
            - condition: state
              entity_id: input_select.sleep_state
              state: in bed
            - condition: state
              entity_id: input_select.sleep_state
              state: sleeping
            - condition: state
              entity_id: input_select.sleep_state
              state: paused
            - condition: state
              entity_id: input_select.sleep_state
              state: smart wake
    action:
      - service: input_select.select_option
        data:
          entity_id: input_select.sleep_state
          option: alarm

  - alias: sleep_state_snoozing
    initial_state: true
    trigger:
      platform: event
      event_type: sleep_as_android
      event_data:
        value: alarm_snooze_clicked
    action:
      - condition: state
        entity_id: binary_sensor.martin_presence_delayed
        state: "on"
      - condition: state
        entity_id: input_select.sleep_state
        state: alarm
      - service: input_select.select_option
        data:
          entity_id: input_select.sleep_state
          option: snoozing

  - alias: sleep_state_waking
    initial_state: true
    trigger:
      - platform: event
        event_type: sleep_as_android
        event_data:
          value: alarm_alert_dismiss
      - platform: event
        event_type: sleep_as_android
        event_data:
          value: alarm_snooze_cancelled
      - platform: event
        event_type: sleep_as_android
        event_data:
          value: sleep_tracking_stopped
    condition:
      condition: or
      conditions:
        - condition: state
          entity_id: input_select.sleep_state
          state: alarm
        - condition: state
          entity_id: input_select.sleep_state
          state: snoozing
    action:
      - service: input_select.select_option
        data:
          entity_id: input_select.sleep_state
          option: waking

  - alias: sleep_state_awake
    initial_state: true
    trigger:
      - platform: state
        entity_id:
          - binary_sensor.gang_entre_bevaegelse
          - binary_sensor.gang_badevaerelse_bevaegelse
        to: "on"
      - platform: state
        entity_id: binary_sensor.sovevaerelse_gulv_bevaegelse
        to: "on"
    condition:
      condition: or
      conditions:
        - condition: state
          entity_id: input_select.sleep_state
          state: alarm
        - condition: state
          entity_id: input_select.sleep_state
          state: snoozing
        - condition: state
          entity_id: input_select.sleep_state
          state: waking
    action:
      - service: input_select.select_option
        data:
          entity_id: input_select.sleep_state
          option: awake

  ######################
  # ACTIONS START HERE #
  ######################

  - alias: bedtime_action
    initial_state: true
    trigger:
      platform: state
      entity_id: input_select.sleep_state
      to: "bedtime"
    action:
      - service: input_number.set_value
        data:
          entity_id: "input_number.scene_transition_time"
          value: 300.0
      - delay:
          seconds: 1
      - event: set_light_profile
        event_data:
          room: bedroom
          profile: Ambient
      - delay:
          seconds: 2
      - service: automation.trigger
        data:
          entity_id: "automation.reset_scene_transition_time"

  - alias: in_bed_action
    initial_state: true
    trigger:
      platform: state
      entity_id: input_select.sleep_state
      to: "in bed"
    action:
      - service: input_number.set_value
        data:
          entity_id: "input_number.scene_transition_time"
          value: 120.0
      - delay:
          seconds: 1
      - event: set_light_profile
        event_data:
          room: bedroom
          profile: Night
      - delay:
          seconds: 2
      - service: automation.trigger
        data:
          entity_id: "automation.reset_scene_transition_time"

  - alias: sleeping_action
    initial_state: true
    trigger:
      platform: state
      entity_id: input_select.sleep_state
      to: "sleeping"
      from: "in bed"
    action:
      - service: input_number.set_value
        data:
          entity_id: "input_number.scene_transition_time"
          value: 10.0
      - delay:
          seconds: 1
      - event: set_light_profile
        event_data:
          room: bedroom
          profile: "Off"
      - delay:
          seconds: 2
      - service: automation.trigger
        data:
          entity_id: "automation.reset_scene_transition_time"

  - alias: sleep_paused_action
    initial_state: true
    trigger:
      platform: state
      entity_id: input_select.sleep_state
      to: "paused"
    action:
      - service: joaoapps_join.phone_send_tasker
        data:
          command: "sleep_tracking_pause"
      - event: set_light_profile
        event_data:
          room: bedroom
          profile: Night

  - alias: resume_sleep_action
    initial_state: true
    trigger:
      platform: state
      entity_id: input_select.sleep_state
      to: "sleeping"
      from: "paused"
    action:
      - service: joaoapps_join.phone_send_tasker
        data:
          command: "sleep_tracking_resume"
      - event: set_light_profile
        event_data:
          room: bedroom
          profile: "Off"

  - alias: smart_wake_action
    initial_state: true
    trigger:
      platform: state
      entity_id: input_select.sleep_state
      to: "smart wake"
    action:
      - service: input_number.set_value
        data:
          entity_id: "input_number.scene_transition_time"
          value: 600.0
      - delay:
          seconds: 1
      - event: set_light_profile
        event_data:
          room: bedroom
          profile: Night
      - delay:
          seconds: 2
      - service: automation.trigger
        data:
          entity_id: "automation.reset_scene_transition_time"

  - alias: alarm_action
    initial_state: true
    trigger:
      platform: state
      entity_id: input_select.sleep_state
      to: "alarm"
    action:
      - service: input_number.set_value
        data:
          entity_id: "input_number.scene_transition_time"
          value: 300.0
      - delay:
          seconds: 1
      - event: set_light_profile
        event_data:
          room: bedroom
          profile: Ambient

      - delay:
          seconds: 2
      - service: automation.trigger
        data:
          entity_id: "automation.reset_scene_transition_time"

      - service: input_select.select_option
        data:
          entity_id: input_select.playlist_player
          option: "media_player.sovevaerelse_mini"
      - service: input_select.set_options
        data_template:
          entity_id: input_select.playlist
          options:
            - "==SCRIPT==morning_briefing"
            - "{{ states('sensor.podcast_bbc_minute') }}"
            - "{{ states('sensor.podcast_radioavisen') }}"
            - "http://live-icy.gss.dr.dk:8000/A/A05H.mp3"
            - "==END=="
      - service: input_select.select_first
        target:
          entity_id: input_select.playlist
      - wait_template: "{{ is_state('media_player.sovevaerelse_mini', 'playing') }}"
        timeout: "00:00:30"
      - service: media_player.volume_set
        data_template:
          entity_id: "media_player.sovevaerelse_mini"
          volume_level: 0.2

  - alias: alarm_action_2_minutes
    initial_state: true
    trigger:
      platform: state
      entity_id: input_select.sleep_state
      to:
        - "alarm"
        - "snoozing"
      for:
        minutes: 2
    action:
      - service: cover.set_cover_position
        data:
          entity_id: cover.sovevaerelse_rullegardin
          position: 7

  - alias: alarm_action_4_minutes
    initial_state: true
    trigger:
      platform: state
      entity_id: input_select.sleep_state
      to:
        - "alarm"
        - "snoozing"
      for:
        minutes: 5
    action:
      - service: cover.set_cover_position
        data:
          entity_id: cover.sovevaerelse_rullegardin
          position: 10

  - alias: alarm_action_6_minutes
    initial_state: true
    trigger:
      platform: state
      entity_id: input_select.sleep_state
      to:
        - "alarm"
        - "snoozing"
      for:
        minutes: 10
    action:
      - service: cover.set_cover_position
        data:
          entity_id: cover.sovevaerelse_rullegardin
          position: 15

  - alias: snoozing_action
    initial_state: true
    trigger:
      - platform: state
        entity_id: counter.snooze_counter
    condition:
      condition: numeric_state
      entity_id: counter.snooze_counter
      above: 3
    action:
      - service: input_number.set_value
        data:
          entity_id: "input_number.scene_transition_time"
          value: 120.0
      - delay:
          seconds: 1
      - event: set_light_profile
        event_data:
          room: bedroom
          profile: Dimmed
      - delay:
          seconds: 2
      - service: automation.trigger
        data:
          entity_id: "automation.reset_scene_transition_time"
      - service: media_player.volume_set
        data_template:
          entity_id: "media_player.sovevaerelse_mini"
          volume_level: 0.25

  - alias: waking_action
    initial_state: true
    trigger:
      platform: state
      entity_id: input_select.sleep_state
      to: "waking"
    action:
      - service: input_number.set_value
        data:
          entity_id: "input_number.scene_transition_time"
          value: 120.0
      - delay:
          seconds: 1
      - event: set_light_profile
        event_data:
          room: bedroom
          profile: Dimmed
      - service: input_select.select_option
        data:
          entity_id: input_select.playlist_player
          option: "media_player.sovevaerelse_mini"
      - service: input_select.set_options
        data_template:
          entity_id: input_select.playlist
          options:
            - "==SCRIPT==morning_briefing"
            - "{{ states('sensor.podcast_bbc_minute') }}"
            - "http://live-icy.gss.dr.dk:8000/A/A05H.mp3"
            - "==END=="
      - service: input_select.select_first
        target:
          entity_id: input_select.playlist
      - wait_template: "{{ is_state('media_player.sovevaerelse_mini', 'playing') }}"
        timeout: "00:00:30"
      - service: media_player.volume_set
        data_template:
          entity_id: "media_player.sovevaerelse_mini"
          volume_level: 0.25
      - service: automation.trigger
        data:
          entity_id: "automation.reset_scene_transition_time"
      - delay:
          seconds: 2

  - alias: awake_activity
    initial_state: true
    trigger:
      platform: state
      entity_id: input_select.sleep_state
      to: "awake"
      from: "waking"
    action:
      - service: cover.set_cover_position
        data:
          entity_id: cover.sovevaerelse_rullegardin
          position: 0
      - service: input_boolean.turn_on
        data:
          entity_id:
            - input_boolean.hallway_activity_override
            - input_boolean.bathroom_activity_override
      - delay:
          seconds: 1
      - service: input_number.set_value
        data:
          entity_id: "input_number.scene_transition_time"
          value: 240.0
      - delay:
          seconds: 1
      - event: set_light_profile
        event_data:
          room: bedroom
          profile: Default
      - service: joaoapps_join.phone_send_tasker
        data:
          command: "sleep_tracking_stop"

      - service: media_player.turn_off
        data:
          entity_id: media_player.sovevaerelse_chromecast
      - service: media_player.turn_off
        data:
          entity_id: media_player.sovevaerelse_tv
      - service: input_boolean.turn_off
        data:
          entity_id: input_boolean.bedroom_tv_lovelace
      - service: input_select.select_option
        data:
          entity_id: input_select.playlist_player
          option: "media_player.minis"
      - delay:
          seconds: 1
      - service: input_select.set_options
        data_template:
          entity_id: input_select.playlist
          options:
            - "==SCRIPT==morning_briefing"
            - "{{ states('sensor.podcast_bbc_minute') }}"
            - "{{ states('sensor.podcast_radioavisen') }}"
            - "{{ states('sensor.podcast_daily_tech_news_show') }}"
            - "http://live-icy.gss.dr.dk:8000/A/A05H.mp3"
            - "==END=="
      - service: input_select.select_first
        target:
          entity_id: input_select.playlist
      - wait_template: "{{ is_state('media_player.minis', 'playing') }}"
        timeout: "00:00:30"
      - service: media_player.volume_set
        data_template:
          entity_id: "group.minis"
          volume_level: 0.4
      - delay:
          seconds: 2
      - service: automation.trigger
        data:
          entity_id: "automation.reset_scene_transition_time"
      - service: input_boolean.turn_off
        data:
          entity_id:
            - input_boolean.hallway_activity_override
            - input_boolean.bathroom_activity_override
