input_datetime:
  fallback_wake_up_time:
    name: Standard opv책gningstid
    has_date: false
    has_time: true

input_select:
  sleep_state:
    icon: mdi:sleep
    options:
      - awake
      - bedtime
      - in bed
      - sleeping
      - paused
      - smart wake
      - alarm
      - snoozing
      - waking

script:
  morning_briefing:
    alias: Morning Briefing
    sequence:
      - service: homeassistant.update_entity
        data:
          entity_id: sensor.tts_greeting
      - service: tts.cloud_say
        data_template:
          language: da-DK
          options:
            gender: male
          entity_id: "{{ device_entity_id }}"
          message: >
            {{ states("sensor.tts_greeting") }}. Klokken er {{ states("sensor.time") }}.
            {{ states("sensor.dmi_vejr_tts") }}
            {{ state_attr('sensor.dmi_vejr_tts', 'text') }}

sensor:
  - platform: template
    sensors:
      next_work_event:
        value_template: >-
          {% set time = as_timestamp(state_attr('calendar.vagtplan_arbejde', 'start_time')) or false %}
          {{ (time-(1.5*60*60)) if as_timestamp(now())+(1*60*60) < time else false }}
      next_personal_event:
        value_template: >-
          {% set time = as_timestamp(state_attr('calendar.personlig', 'start_time')) or false %}
          {{ (time-(2*60*60)) if as_timestamp(now())+(1*60*60) < time else false }}
      next_tripit_event:
        value_template: >-
          {% set time = as_timestamp(state_attr('calendar.tripit', 'start_time')) or false %}
          {{ (time-(4*60*60)) if as_timestamp(now())+(1*60*60) < time else false }}
      fallback_wake_up_time:
        value_template: >-
          {%- set hour = state_attr('input_datetime.fallback_wake_up_time', 'hour') -%}
          {%- set minute = state_attr('input_datetime.fallback_wake_up_time', 'minute') -%}
          {%- set days = 0 if 0 <= now().hour <= hour else 1 -%}
          {%- set time = as_timestamp(now().replace(hour=hour,minute=minute,second=0,microsecond=0) + timedelta(days=days)) -%}
          {{ time if as_timestamp(now())+(1*60*60) < time else false }}
      wake_up_event_source:
        value_template: "{{ state_attr('sensor.next_event_for_wakeup_time', 'min_entity_id') }}"
      wake_up_event_source_entity:
        value_template: >-
          {% set calendars = {
            'sensor.next_work_event': 'calendar.vagtplan_arbejde',
            'sensor.next_personal_event': 'calendar.personlig',
            'sensor.next_tripit_event': 'calendar.tripit',
            'sensor.fallback_wake_up_time': 'fallback'
          } %}
          {{ calendars[states('sensor.wake_up_event_source')] }}
      wake_up_event_source_message:
        value_template: "{{ state_attr(states('sensor.wake_up_event_source_entity'), 'message') }}"
        attribute_templates:
          icon: mdi:calendar-clock
      wake_up_event_source_start_time:
        value_template: "{{ (state_attr(states('sensor.wake_up_event_source_entity'), 'start_time')|as_timestamp|as_datetime|as_local).strftime('%H:%M') }}"
      wake_up_event_source_name:
        value_template: >-
          {% set calendars = {
            'sensor.next_work_event': 'Vagtplan',
            'sensor.next_personal_event': 'Personlig Kalender',
            'sensor.next_tripit_event': 'TripIt',
            'sensor.fallback_wake_up_time': 'Standard'
          } %}
          {{ calendars[states('sensor.wake_up_event_source')] }}
        attribute_templates:
          icon: mdi:calendar
      wake_up_time:
        friendly_name: "Opv책gningstidspunkt"
        value_template: "{{ states('sensor.next_event_for_wakeup_time')|int | timestamp_local() }}"
      minutes_to_wake_up_time:
        friendly_name: Minutter til Opv책gningstidspunkt
        value_template: "{{ ((states('sensor.wake_up_time')|as_timestamp - now()|as_timestamp)/60)|int }}"
      bedtime:
        friendly_name: "Sengetid"
        value_template: "{{ (states('sensor.wake_up_time')|as_timestamp - (8.5*60*60)) | timestamp_local() }}"
      minutes_to_bedtime:
        friendly_name: Minutter til Sengetid
        value_template: "{{ ((states('sensor.bedtime')|as_timestamp - now()|as_timestamp)/60)|int }}"
      bedtime_clock:
        friendly_name: "Sengetid"
        value_template: "{{ (states('sensor.bedtime')|as_datetime).strftime('%H:%M') }}"
        attribute_templates:
          icon: mdi:bed-clock
      wake_up_time_clock:
        friendly_name: "Alarm"
        value_template: "{{ (states('sensor.wake_up_time')|as_datetime).strftime('%H:%M') }}"
        attribute_templates:
          icon: mdi:alarm

  - platform: min_max
    name: next_event_for_wakeup_time
    type: min
    entity_ids:
      - sensor.next_work_event
      - sensor.next_personal_event
      - sensor.next_tripit_event
      - sensor.fallback_wake_up_time

binary_sensor:
  - platform: template
    sensors:
      wake_up_time:
        friendly_name: "Opv책gningstidspunkt"
        value_template: "{{ (states('sensor.wake_up_time')|as_timestamp()) < (now()|as_timestamp) }}"
      bedtime:
        friendly_name: "Sengetid"
        value_template: >-
          {{
            (states('sensor.bedtime')|as_timestamp()) < (now()|as_timestamp) < (states('sensor.wake_up_time')|as_timestamp())
            or is_state('binary_sensor.sleep_as_android_bedtime', 'on')
          }}

automation:
  #######################
  # SLEEP STATE MACHINE #
  #######################

  - alias: sleep_state_bedtime
    initial_state: true
    trigger:
      - platform: state
        entity_id: binary_sensor.martin_presence_delayed
        to: "on"
      - platform: state
        entity_id: binary_sensor.bedtime
        to: "on"
    condition:
      condition: and
      conditions:
        - condition: state
          entity_id: binary_sensor.martin_presence_delayed
          state: "on"
        - condition: state
          entity_id: binary_sensor.bedtime
          state: "on"
        - condition: state
          entity_id: input_select.sleep_state
          state: "awake"
    action:
      service: input_select.select_option
      data:
        entity_id: input_select.sleep_state
        option: bedtime

  - alias: sleep_state_in_bed
    initial_state: true
    trigger:
      - platform: state
        entity_id: input_select.sleep_state
        to: "bedtime"
      - platform: state
        entity_id: binary_sensor.seng_bevaegelse
        to: "on"
      - platform: state
        entity_id: binary_sensor.sovevaerelse_dor
        to: "off"
    condition:
      condition: and
      conditions:
        - condition: state
          entity_id: input_select.sleep_state
          state: "bedtime"
        - condition: state
          entity_id: binary_sensor.seng_bevaegelse
          state: "on"
        - condition: state
          entity_id: binary_sensor.sovevaerelse_dor
          state: "off"
        - condition: state
          entity_id: binary_sensor.martin_presence_delayed
          state: "on"
    action:
      service: input_select.select_option
      data:
        entity_id: input_select.sleep_state
        option: in bed

  - alias: sleep_state_sleeping
    initial_state: true
    trigger:
      - platform: event
        event_type: sleep_as_android
        event_data:
          value: sleep_tracking_started
      - platform: event
        event_type: sleep_as_android
        event_data:
          value: sleep_tracking_resumed
    condition:
      condition: and
      conditions:
        - condition: state
          entity_id: binary_sensor.martin_presence_delayed
          state: "on"
        - condition: or
          conditions:
            - condition: state
              entity_id: input_select.sleep_state
              state: in bed
            - condition: state
              entity_id: input_select.sleep_state
              state: paused
            - condition: and
              conditions:
                - condition: state
                  entity_id: input_select.sleep_state
                  state: bedtime
                - condition: state
                  entity_id: binary_sensor.sovevaerelse_motion
                  state: "on"
    action:
      - service: input_select.select_option
        data:
          entity_id: input_select.sleep_state
          option: sleeping

  - alias: sleep_state_sleeping_cancelled
    initial_state: true
    trigger:
      platform: event
      event_type: sleep_as_android
      event_data:
        value: sleep_tracking_stopped
    condition:
      condition: and
      conditions:
        - condition: state
          entity_id: binary_sensor.martin_presence_delayed
          state: "on"
        - condition: time
          after: "20:00:00"
          before: "04:00:00"
        - condition: or
          conditions:
            - condition: state
              entity_id: input_select.sleep_state
              state: sleeping
            - condition: state
              entity_id: input_select.sleep_state
              state: paused
    action:
      - service: input_select.select_option
        data:
          entity_id: input_select.sleep_state
          option: in bed

  - alias: sleep_state_paused_event
    initial_state: true
    trigger:
      - platform: event
        event_type: sleep_as_android
        event_data:
          value: sleep_tracking_paused
    condition:
      - condition: state
        entity_id: binary_sensor.martin_presence_delayed
        state: "on"
      - condition: state
        entity_id: input_select.sleep_state
        state: sleeping
    action:
      service: input_select.select_option
      data:
        entity_id: input_select.sleep_state
        option: paused

  - alias: sleep_state_paused
    initial_state: true
    trigger:
      - platform: state
        entity_id:
          - binary_sensor.sovevaerelse_dor
          - binary_sensor.gang_entre_bevaegelse
          - binary_sensor.gang_badevaerelse_bevaegelse
        to: "on"
    condition:
      - condition: state
        entity_id: binary_sensor.sovevaerelse_dor
        state: "on"
      - condition: state
        entity_id: binary_sensor.martin_presence_delayed
        state: "on"
      - condition: state
        entity_id: input_select.sleep_state
        state: sleeping
    action:
      service: input_select.select_option
      data:
        entity_id: input_select.sleep_state
        option: paused

  - alias: sleep_state_unpause
    initial_state: true
    trigger:
      - platform: state
        entity_id: binary_sensor.seng_bevaegelse
        to: "on"
      - platform: state
        entity_id: binary_sensor.sovevaerelse_dor
        to: "off"
    condition:
      - condition: state
        entity_id: binary_sensor.seng_bevaegelse
        state: "on"
      - condition: state
        entity_id: input_select.sleep_state
        state: "paused"
      - condition: state
        entity_id: binary_sensor.sovevaerelse_dor
        state: "off"
    action:
      service: input_select.select_option
      data:
        entity_id: input_select.sleep_state
        option: sleeping

  - alias: sleep_state_smart_wake
    initial_state: true
    trigger:
      platform: event
      event_type: sleep_as_android
      event_data:
        value: smart_period
    condition:
      condition: and
      conditions:
        - condition: state
          entity_id: binary_sensor.martin_presence_delayed
          state: "on"
        - condition: or
          conditions:
            - condition: state
              entity_id: input_select.sleep_state
              state: in bed
            - condition: state
              entity_id: input_select.sleep_state
              state: sleeping
            - condition: state
              entity_id: input_select.sleep_state
              state: paused
    action:
      - service: input_select.select_option
        data:
          entity_id: input_select.sleep_state
          option: smart wake

  - alias: sleep_state_alarm
    initial_state: true
    trigger:
      platform: event
      event_type: sleep_as_android
      event_data:
        value: alarm_alert_start
    condition:
      condition: and
      conditions:
        - condition: state
          entity_id: binary_sensor.martin_presence_delayed
          state: "on"
        - condition: or
          conditions:
            - condition: state
              entity_id: input_select.sleep_state
              state: in bed
            - condition: state
              entity_id: input_select.sleep_state
              state: sleeping
            - condition: state
              entity_id: input_select.sleep_state
              state: paused
            - condition: state
              entity_id: input_select.sleep_state
              state: smart wake
    action:
      - service: input_select.select_option
        data:
          entity_id: input_select.sleep_state
          option: alarm

  - alias: sleep_state_snoozing
    initial_state: true
    trigger:
      platform: event
      event_type: sleep_as_android
      event_data:
        value: alarm_snooze_clicked
    action:
      - condition: state
        entity_id: binary_sensor.martin_presence_delayed
        state: "on"
      - condition: state
        entity_id: input_select.sleep_state
        state: alarm
      - service: input_select.select_option
        data:
          entity_id: input_select.sleep_state
          option: snoozing

  - alias: sleep_state_waking
    initial_state: true
    trigger:
      - platform: event
        event_type: sleep_as_android
        event_data:
          value: alarm_alert_dismiss
      - platform: event
        event_type: sleep_as_android
        event_data:
          value: alarm_snooze_cancelled
      - platform: event
        event_type: sleep_as_android
        event_data:
          value: sleep_tracking_stopped
    condition:
      condition: or
      conditions:
        - condition: state
          entity_id: input_select.sleep_state
          state: alarm
        - condition: state
          entity_id: input_select.sleep_state
          state: snoozing
    action:
      - service: input_select.select_option
        data:
          entity_id: input_select.sleep_state
          option: waking

  - alias: sleep_state_awake
    initial_state: true
    trigger:
      - platform: state
        entity_id:
          - binary_sensor.gang_entre_bevaegelse
          - binary_sensor.gang_badevaerelse_bevaegelse
        to: "on"
      - platform: state
        entity_id: binary_sensor.sovevaerelse_dor
        to: "on"
    condition:
      - condition: state
        entity_id: binary_sensor.sovevaerelse_dor
        state: "on"
      - condition: or
        conditions:
          - condition: state
            entity_id: input_select.sleep_state
            state: alarm
          - condition: state
            entity_id: input_select.sleep_state
            state: snoozing
          - condition: state
            entity_id: input_select.sleep_state
            state: waking
    action:
      - service: input_select.select_option
        data:
          entity_id: input_select.sleep_state
          option: awake

  ######################
  # ACTIONS START HERE #
  ######################

  - alias: bedtime_action
    initial_state: true
    trigger:
      platform: state
      entity_id: input_select.sleep_state
      to: "bedtime"
    action:
      - service: notify.telegram_darkfox
        data:
          message: "Sengetid! Alarm kl. {{ (states('sensor.wake_up_time')|as_datetime).strftime('%H:%M') }}"
      - service: cover.close_cover
        data:
          entity_id: cover.sovevaerelse_gardin
      - service: input_number.set_value
        data:
          entity_id: "input_number.scene_transition_time"
          value: 300.0
      - delay:
          seconds: 1
      - event: set_light_profile
        event_data:
          room: bedroom
          profile: Ambient
      - delay:
          seconds: 2
      - service: automation.trigger
        data:
          entity_id: "automation.reset_scene_transition_time"

  - alias: in_bed_action
    initial_state: true
    trigger:
      platform: state
      entity_id: input_select.sleep_state
      to: "in bed"
    variables:
      wake_up_time: "{{ states('sensor.wake_up_time_clock') }}"
    action:
      - service: script.turn_on
        target:
          entity_id: script.sleep_as_android_set_alarm
        data:
          variables:
            message: HA
            timehour: "{{ wake_up_time.split(':')[0] }}"
            timemin: "{{ wake_up_time.split(':')[1] }}"
      - service: tts.cloud_say
        data:
          language: da-DK
          options:
            gender: male
          entity_id: media_player.sovevaerelse_mini
          message: >-
            Alarm sat til kl. {{ wake_up_time }}.

            {%- if states('sensor.wake_up_event_source_entity') == 'fallback' %}
              Der er ingen aftaler i morgen.
            {% else %}
              F첩rste aftale i morgen er "{{ states('sensor.wake_up_event_source_message') }}", Kl. {{ states('sensor.wake_up_event_source_start_time') }}, fra {{ states('sensor.wake_up_event_source_name') }} kalender.
            {% endif %}
      - service: input_number.set_value
        data:
          entity_id: "input_number.scene_transition_time"
          value: 120.0
      - delay:
          seconds: 1
      - event: set_light_profile
        event_data:
          room: bedroom
          profile: Night
      - delay:
          seconds: 2
      - service: automation.trigger
        data:
          entity_id: "automation.reset_scene_transition_time"

  - alias: sleeping_action
    initial_state: true
    trigger:
      platform: state
      entity_id: input_select.sleep_state
      to: "sleeping"
      from: "in bed"
    action:
      - choose:
          - conditions:
              - condition: state
                entity_id: input_select.sleep_as_android_state
                state: "awake"
            sequence:
              - service: script.turn_on
                target:
                  entity_id: script.sleep_as_android_start_tracking
      - service: input_number.set_value
        data:
          entity_id: "input_number.scene_transition_time"
          value: 10.0
      - delay:
          seconds: 1
      - event: set_light_profile
        event_data:
          room: bedroom
          profile: "Off"
      - delay:
          seconds: 2
      - service: automation.trigger
        data:
          entity_id: "automation.reset_scene_transition_time"

  - alias: sleep_paused_action
    initial_state: true
    trigger:
      platform: state
      entity_id: input_select.sleep_state
      to: "paused"
    action:
      - service: script.turn_on
        target:
          entity_id: script.sleep_as_android_pause_tracking
      - event: set_light_profile
        event_data:
          room: bedroom
          profile: Night

  - alias: resume_sleep_action
    initial_state: true
    trigger:
      platform: state
      entity_id: input_select.sleep_state
      to: "sleeping"
      from: "paused"
    action:
      - service: script.turn_on
        target:
          entity_id: script.sleep_as_android_start_tracking
      - event: set_light_profile
        event_data:
          room: bedroom
          profile: "Off"

  - alias: smart_wake_action
    initial_state: true
    trigger:
      platform: state
      entity_id: input_select.sleep_state
      to: "smart wake"
    action:
      - service: input_number.set_value
        data:
          entity_id: "input_number.scene_transition_time"
          value: 600.0
      - delay:
          seconds: 1
      - event: set_light_profile
        event_data:
          room: bedroom
          profile: Night
      - delay:
          seconds: 2
      - service: automation.trigger
        data:
          entity_id: "automation.reset_scene_transition_time"

  - alias: alarm_action
    initial_state: true
    trigger:
      platform: state
      entity_id: input_select.sleep_state
      to: "alarm"
    action:
      - service: input_number.set_value
        data:
          entity_id: "input_number.scene_transition_time"
          value: 300.0
      - delay:
          seconds: 1
      - event: set_light_profile
        event_data:
          room: bedroom
          profile: Ambient

      - delay:
          seconds: 2
      - service: automation.trigger
        data:
          entity_id: "automation.reset_scene_transition_time"

      - service: input_select.select_option
        data:
          entity_id: input_select.playlist_player
          option: "media_player.sovevaerelse_mini"
      - service: input_select.set_options
        data_template:
          entity_id: input_select.playlist
          options:
            - "==SCRIPT==morning_briefing"
            - "{{ states('sensor.podcast_bbc_minute') }}"
            - "http://live-icy.gss.dr.dk:8000/A/A05H.mp3"
            - "==END=="
      - service: input_select.select_first
        target:
          entity_id: input_select.playlist
      - wait_template: "{{ is_state('media_player.sovevaerelse_mini', 'playing') }}"
        timeout: "00:00:30"
      - service: media_player.volume_set
        data_template:
          entity_id: "media_player.sovevaerelse_mini"
          volume_level: 0.2

  - alias: alarm_action_5_minutes
    initial_state: true
    trigger:
      platform: state
      entity_id: input_select.sleep_state
      to:
        - "alarm"
        - "snoozing"
      for:
        minutes: 5
    action:
      - choose:
          - conditions:
              - condition: state
                entity_id: sun.sun
                state: "above_horizon"
            sequence:
              - service: cover.set_cover_position
                data:
                  entity_id: cover.sovevaerelse_gardin_vindue
                  position: 40
      - service: input_number.set_value
        data:
          entity_id: "input_number.scene_transition_time"
          value: 300.0
      - delay:
          seconds: 1
      - event: set_light_profile
        event_data:
          room: bedroom
          profile: Dimmed
      - delay:
          seconds: 2
      - service: automation.trigger
        data:
          entity_id: "automation.reset_scene_transition_time"

  - alias: alarm_action_10_minutes
    initial_state: true
    trigger:
      platform: state
      entity_id: input_select.sleep_state
      to:
        - "alarm"
        - "snoozing"
      for:
        minutes: 10
    action:
      - choose:
          - conditions:
              - condition: state
                entity_id: sun.sun
                state: "above_horizon"
            sequence:
              - service: cover.set_cover_position
                data:
                  entity_id: cover.sovevaerelse_gardin_vindue
                  position: 45

  - alias: alarm_action_20_minutes
    initial_state: true
    trigger:
      platform: state
      entity_id: input_select.sleep_state
      to:
        - "alarm"
        - "snoozing"
      for:
        minutes: 20
    action:
      - choose:
          - conditions:
              - condition: state
                entity_id: sun.sun
                state: "above_horizon"
            sequence:
              - service: cover.set_cover_position
                data:
                  entity_id: cover.sovevaerelse_gardin_vindue
                  position: 50

  - alias: snoozing_action
    initial_state: true
    trigger:
      - platform: state
        entity_id: counter.snooze_counter
    condition:
      condition: numeric_state
      entity_id: counter.snooze_counter
      above: 2
    action:
      - service: input_number.set_value
        data:
          entity_id: "input_number.scene_transition_time"
          value: 120.0
      - delay:
          seconds: 1
      - event: set_light_profile
        event_data:
          room: bedroom
          profile: Dimmed
      - delay:
          seconds: 2
      - service: automation.trigger
        data:
          entity_id: "automation.reset_scene_transition_time"
      - service: media_player.volume_set
        data_template:
          entity_id: "media_player.sovevaerelse_mini"
          volume_level: 0.25

  - alias: waking_action
    initial_state: true
    trigger:
      platform: state
      entity_id: input_select.sleep_state
      to: "waking"
    action:
      - choose:
          - conditions:
              - condition: state
                entity_id: sun.sun
                state: "above_horizon"
            sequence:
              - service: cover.open_cover
                data:
                  entity_id: cover.sovevaerelse_gardin_dor
              - service: cover.set_cover_position
                data:
                  entity_id: cover.sovevaerelse_gardin_vindue
                  position: 30
      - service: input_number.set_value
        data:
          entity_id: "input_number.scene_transition_time"
          value: 120.0
      - delay:
          seconds: 1
      - event: set_light_profile
        event_data:
          room: bedroom
          profile: Dimmed
      - service: input_select.select_option
        data:
          entity_id: input_select.playlist_player
          option: "media_player.sovevaerelse_mini"
      - service: input_select.set_options
        data_template:
          entity_id: input_select.playlist
          options:
            - "==SCRIPT==morning_briefing"
            - "{{ states('sensor.podcast_bbc_minute') }}"
            - "{{ states('sensor.podcast_radioavisen') }}"
            - "http://live-icy.gss.dr.dk:8000/A/A05H.mp3"
            - "==END=="
      - service: input_select.select_first
        target:
          entity_id: input_select.playlist
      - wait_template: "{{ is_state('media_player.sovevaerelse_mini', 'playing') }}"
        timeout: "00:00:30"
      - service: media_player.volume_set
        data_template:
          entity_id: "media_player.sovevaerelse_mini"
          volume_level: 0.25
      - delay:
          seconds: 2
      - service: automation.trigger
        data:
          entity_id: "automation.reset_scene_transition_time"

  - alias: awake_action
    initial_state: true
    trigger:
      platform: state
      entity_id: input_select.sleep_state
      to: "awake"
      from: "waking"
    action:
      - delay:
          seconds: 1
      - service: input_number.set_value
        data:
          entity_id: "input_number.scene_transition_time"
          value: 240.0
      - delay:
          seconds: 1
      - event: set_light_profile
        event_data:
          room: bedroom
          profile: Dimmed
      - event: set_light_profile
        event_data:
          room: bathroom
          profile: Dimmed
      - service: script.turn_on
        target:
          entity_id: script.sleep_as_android_stop_tracking
      - choose:
          - conditions:
              - condition: state
                entity_id: input_boolean.guests
                state: "on"
            sequence:
              - service: input_select.select_option
                data:
                  entity_id: input_select.playlist_player
                  option: "media_player.badevaerelse_mini"
        default:
          - service: input_select.select_option
            data:
              entity_id: input_select.playlist_player
              option: "media_player.minis"
      - delay:
          seconds: 1
      - service: input_select.set_options
        data_template:
          entity_id: input_select.playlist
          options:
            - "==SCRIPT==morning_briefing"
            - "{{ states('sensor.podcast_bbc_minute') }}"
            - "{{ states('sensor.podcast_radioavisen') }}"
            - "{{ states('sensor.podcast_daily_tech_headlines') }}"
            - "{{ states('sensor.podcast_daily_tech_news_show') }}"
            - "http://live-icy.gss.dr.dk:8000/A/A05H.mp3"
            - "==END=="
      - service: input_select.select_first
        target:
          entity_id: input_select.playlist
      - wait_template: "{{ is_state('media_player.minis', 'playing') }}"
        timeout: "00:00:30"
      - service: media_player.volume_set
        data_template:
          entity_id: "group.minis"
          volume_level: 0.4
      - delay:
          seconds: 2
      - service: automation.trigger
        data:
          entity_id: "automation.reset_scene_transition_time"
      - delay:
          minutes: 5
      - choose:
          - conditions:
              - condition: state
                entity_id: sun.sun
                state: "above_horizon"
            sequence:
              - service: cover.open_cover
                data:
                  entity_id: cover.sovevaerelse_gardin
      - service: input_number.set_value
        data:
          entity_id: "input_number.scene_transition_time"
          value: 120.0
      - delay:
          seconds: 1
      - event: set_light_profile
        event_data:
          room: bedroom
          profile: Default
      - event: set_light_profile
        event_data:
          room: bathroom
          profile: Default
      - delay:
          seconds: 2
      - service: automation.trigger
        data:
          entity_id: "automation.reset_scene_transition_time"
