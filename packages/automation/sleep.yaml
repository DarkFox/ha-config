input_datetime:
  fallback_wake_up_time:
    name: Standard opvÃ¥gningstid
    has_date: false
    has_time: true

input_text:
  last_wake_up_time:

input_select:
  sleep_state:
    icon: mdi:sleep
    options:
      - awake
      - bedtime
      - in bed
      - sleeping
      - paused
      - smart wake
      - alarm
      - snoozing
      - waking

template:
  - sensor:
      - name: Next Wake Event
        unique_id: 240de22b-5950-4929-bcac-3640efabf14c
        device_class: timestamp
        state: >-
          {% set event = state_attr('sensor.next_wake_event', 'event') or {} %}
          {% set start = event.get('start', None) %}
          {% if start %}
            {{ as_timestamp(start) | timestamp_local('unavailable') }}
          {% else %}
            {{ none }}
          {% endif %}
        attributes:
          event: >-
            {% set next_wake_events = state_attr('sensor.upcoming_events', 'events')|selectattr('all_day', 'false')|selectattr('wake', 'true')|list %}
            {{ next_wake_events|first if next_wake_events|length > 0 else {} }}
          calendar: >-
            {% set event = state_attr('sensor.next_wake_event', 'event') or {} %}
            {{ event.get('calendar', none) }}
          start: >-
            {% set event = state_attr('sensor.next_wake_event', 'event') or {} %}
            {{ event.get('start', none) }}
          end: >-
            {% set event = state_attr('sensor.next_wake_event', 'event') or {} %}
            {{ event.get('end', none) }}
          location: >-
            {% set event = state_attr('sensor.next_wake_event', 'event') or {} %}
            {{ event.get('location', none) }}
          description: >-
            {% set event = state_attr('sensor.next_wake_event', 'event') or {} %}
            {{ event.get('description', none) }}
          travel: >-
            {% set event = state_attr('sensor.next_wake_event', 'event') or {} %}
            {{ event.get('travel', none) }}
          bil: >-
            {% set event = state_attr('sensor.next_wake_event', 'event') or {} %}
            {{ event.get('bil', none) }}
          wake: >-
            {% set event = state_attr('sensor.next_wake_event', 'event') or {} %}
            {{ event.get('wake', none) }}
          summary: >-
            {% set event = state_attr('sensor.next_wake_event', 'event') or {} %}
            {{ event.get('summary', none) }}

      - name: Fallback Wake Up Time
        unique_id: 9a7c2769-8a9e-4481-9d14-6269b756ba80
        state: >-
          {%- set hour = state_attr('input_datetime.fallback_wake_up_time', 'hour') -%}
          {%- set minute = state_attr('input_datetime.fallback_wake_up_time', 'minute') -%}
          {%- set days = 0 if 0 <= now().hour <= hour else 1 -%}
          {%- set time = now().replace(hour=hour,minute=minute,second=0,microsecond=0) + timedelta(days=days) -%}
          {{ time if now()+timedelta(hours=1) < time else 'unknown' }}
        device_class: timestamp

      - name: Wake Up Event Source Name
        unique_id: 8274b010-a2e6-4b07-84ce-30d3caf56e87
        state: >-
          {% if is_state('binary_sensor.use_fallback_wake_up_time', 'unknown') %}
            {{ none }}
          {% elif is_state('binary_sensor.use_fallback_wake_up_time', 'on') %}
            Fallback
          {% else %}
            {{ state_attr('sensor.next_wake_event', 'calendar') }}
          {% endif %}
        attributes:
          icon: mdi:calendar-clock

      - name: Wake Up Event Source Message
        unique_id: 1c6769cf-deec-4fdc-9f50-b51ce22c6e47
        state: >-
          {% if is_state('binary_sensor.use_fallback_wake_up_time', 'unknown') %}
            {{ none }}
          {% elif is_state('binary_sensor.use_fallback_wake_up_time', 'on') %}
            
          {% else %}
            {{ state_attr('sensor.next_wake_event', 'summary') }}
          {% endif %}
        attributes:
          icon: mdi:calendar-clock

      - name: Wake Up Event Time
        unique_id: 732dc868-39f2-4d7a-9c7d-87b983581640
        device_class: timestamp
        icon: >-
          {% if is_state('binary_sensor.use_fallback_wake_up_time', 'unknown') %}
            mdi:alarm
          {% elif is_state('binary_sensor.use_fallback_wake_up_time', 'on') %}
            mdi:alarm
          {% else %}
            mdi:calendar-clock
          {% endif %}
        state: >-
          {% if is_state('binary_sensor.use_fallback_wake_up_time', 'unknown') %}
            unknown
          {% elif is_state('binary_sensor.use_fallback_wake_up_time', 'on') %}
            {{ states('sensor.fallback_wake_up_time')|as_datetime }}
          {% else %}
            {{ states('sensor.next_wake_event')|as_datetime }}
          {% endif %}

      - name: Wake Up Event Time Clock
        unique_id: f68fd049-d965-4130-ab57-d7c5ba95603a
        state: >-
          {{ (states('sensor.wake_up_event_time')|as_datetime|as_local).strftime('%H:%M') if has_value('sensor.wake_up_event_time') else none }}
        attributes:
          icon: mdi:alarm

      - name: Next Wake Event Wake Time
        unique_id: ddb30d57-608c-4179-a1d0-414341ed14de
        state: >-
          {{ (states('sensor.next_wake_event')|as_datetime - timedelta(hours=2)).isoformat() if has_value('sensor.next_wake_event') else none }}
        attributes:
          icon: mdi:alarm

      - name: Wake Up Time
        unique_id: bc455fbc-f15f-46c5-99c7-cdcb7c9bfae4
        device_class: timestamp
        state: >-
          {% if is_state('binary_sensor.use_fallback_wake_up_time', 'unknown') %}
            {{ none }}
          {% elif is_state('binary_sensor.use_fallback_wake_up_time', 'on') %}
            {{ states('sensor.fallback_wake_up_time')|as_datetime }}
          {% else %}
            {{ states('sensor.next_wake_event_wake_time')|as_datetime }}
          {% endif %}
        attributes:
          icon: mdi:alarm-clock

      - name: Minutes to Wake Up Time
        unique_id: 5661d62b-8cdb-4b7c-a712-b4be3a60bc62
        device_class: duration
        unit_of_measurement: min
        state: >-
          {{ ((states('sensor.wake_up_time')|as_timestamp - now()|as_timestamp)/60)|int if has_value('sensor.wake_up_time') else none }}
        attributes:
          icon: mdi:alarm-clock

      - name: Bedtime
        unique_id: 40cc6f30-240e-489d-9720-c04dbb477058
        device_class: timestamp
        state: >-
          {{ states('sensor.wake_up_time')|as_datetime - timedelta(hours=8, minutes=30) if has_value('sensor.wake_up_time') else none }}
        attributes:
          icon: mdi:bed-clock

      - name: Minutes to Bedtime
        unique_id: 5fea6a88-1dee-46e7-878f-574148d4b207
        device_class: duration
        unit_of_measurement: min
        state: >-
          {{ ((states('sensor.bedtime')|as_timestamp - now()|as_timestamp)/60)|int if has_value('sensor.bedtime') else none }}
        attributes:
          icon: mdi:bed-clock

      - name: Bedtime Clock
        unique_id: 1be248a8-c637-47a1-8b79-8890660d4e5a
        state: >-
          {{ (states('sensor.bedtime')|as_datetime|as_local).strftime('%H:%M') if has_value('sensor.bedtime') else none }}
        attributes:
          icon: mdi:bed-clock

      - name: Wake Up Time Clock
        unique_id: 7bbdffb3-2f7d-4a69-9fcc-5a72d4aea48e
        state: >-
          {{ (states('sensor.wake_up_time')|as_datetime|as_local).strftime('%H:%M') if has_value('sensor.wake_up_time') else none }}
        attributes:
          icon: mdi:alarm

  - binary_sensor:
      - name: Use Fallback Wake Up Time
        unique_id: 474c9167-1aab-4298-a3ef-841a41e7eb63
        state: >-
          {% set limit = (states('input_text.last_wake_up_time')|as_datetime + timedelta(hours=8)) if has_value('input_text.last_wake_up_time') else none %}
          {% set wake_up_time = states('sensor.next_wake_event_wake_time')|as_datetime %}
          {% set fallback = states('sensor.fallback_wake_up_time')|as_datetime %}
          {% if wake_up_time and (not limit or limit < wake_up_time) and wake_up_time < fallback %}
            False
          {% elif fallback and (not limit or limit < fallback) %}
            True
          {% else %}
            {{ none }}
          {% endif %}

      - name: Wake Up Time
        unique_id: 4ffa2376-a5ed-4d71-9847-d37dcdc6b364
        state: >-
          {{ (states('sensor.wake_up_time')|as_timestamp(0)) < (now()|as_timestamp(0)) }}

      - name: Bedtime
        unique_id: 6fba153e-7254-4f19-acd0-8e09d138ea69
        state: >-
          {% set bedtime = states('sensor.bedtime') %}
          {% set wake_up_time = states('sensor.wake_up_time') %}
          {{
            (
              bedtime
              and bedtime not in ['unknown', 'unavailable']
              and wake_up_time
              and wake_up_time not in ['unknown', 'unavailable']
              and (bedtime|as_timestamp()) < (now()|as_timestamp) < (wake_up_time|as_timestamp())
            )
          }}

      - name: Martin In Bed
        unique_id: 36926852-a0f5-45c3-bb30-e138d39ea34e
        state: >-
          {{ states('input_select.sleep_state') in [
            'in bed',
            'sleeping',
            'paused',
            'smart wake',
            'alarm',
            'snoozing',
            'waking',
          ] }}

automation:
  #######################
  # SLEEP STATE MACHINE #
  #######################

  - alias: sleep_state_bedtime
    id: sleep_state_bedtime
    initial_state: true
    trigger:
      - platform: state
        entity_id: binary_sensor.martin_presence_delayed
        to: "on"
      - platform: state
        entity_id: binary_sensor.bedtime
        to: "on"
    condition:
      condition: and
      conditions:
        - condition: state
          entity_id: binary_sensor.martin_presence_delayed
          state: "on"
        - condition: state
          entity_id: binary_sensor.bedtime
          state: "on"
        - condition: state
          entity_id: input_select.sleep_state
          state: "awake"
    action:
      action: input_select.select_option
      data:
        entity_id: input_select.sleep_state
        option: bedtime

  - alias: sleep_state_in_bed
    id: sleep_state_in_bed
    initial_state: true
    trigger:
      - platform: state
        entity_id: input_select.sleep_state
        to: "bedtime"
      - platform: state
        entity_id: binary_sensor.sovevaerelse_gulv
        to: "off"
    condition:
      condition: and
      conditions:
        - condition: state
          entity_id: input_select.sleep_state
          state: "bedtime"
        - condition: state
          entity_id: binary_sensor.sovevaerelse_gulv
          state: "off"
        - condition: state
          entity_id: binary_sensor.sovevaerelse_motion
          state: "on"
        - condition: state
          entity_id: binary_sensor.sovevaerelse_dor
          state: "off"
        - condition: state
          entity_id: binary_sensor.martin_presence_delayed
          state: "on"
    action:
      action: input_select.select_option
      data:
        entity_id: input_select.sleep_state
        option: in bed

  - alias: sleep_state_sleeping
    id: sleep_state_sleeping
    initial_state: true
    trigger:
      - platform: event
        event_type: sleep_as_android
        event_data:
          event: sleep_tracking_started
      - platform: event
        event_type: sleep_as_android
        event_data:
          event: sleep_tracking_resumed
    condition:
      condition: and
      conditions:
        - condition: state
          entity_id: binary_sensor.martin_presence_delayed
          state: "on"
        - condition: or
          conditions:
            - condition: state
              entity_id: input_select.sleep_state
              state: in bed
            - condition: state
              entity_id: input_select.sleep_state
              state: paused
            - condition: and
              conditions:
                - condition: state
                  entity_id: input_select.sleep_state
                  state: bedtime
                - condition: or
                  conditions:
                    - condition: state
                      entity_id: binary_sensor.sovevaerelse_motion
                      state: "on"
    action:
      - action: input_select.select_option
        data:
          entity_id: input_select.sleep_state
          option: sleeping

  - alias: sleep_state_sleeping_cancelled
    id: sleep_state_sleeping_cancelled
    initial_state: true
    trigger:
      platform: event
      event_type: sleep_as_android
      event_data:
        event: sleep_tracking_stopped
    condition:
      condition: and
      conditions:
        - condition: state
          entity_id: binary_sensor.martin_presence_delayed
          state: "on"
        - condition: time
          after: "20:00:00"
          before: "04:00:00"
        - condition: or
          conditions:
            - condition: state
              entity_id: input_select.sleep_state
              state: sleeping
            - condition: state
              entity_id: input_select.sleep_state
              state: paused
    action:
      - action: input_select.select_option
        data:
          entity_id: input_select.sleep_state
          option: in bed

  - alias: sleep_state_paused_event
    id: sleep_state_paused_event
    initial_state: true
    trigger:
      - platform: event
        event_type: sleep_as_android
        event_data:
          event: sleep_tracking_paused
    condition:
      - condition: state
        entity_id: binary_sensor.martin_presence_delayed
        state: "on"
      - condition: state
        entity_id: input_select.sleep_state
        state: sleeping
    action:
      action: input_select.select_option
      data:
        entity_id: input_select.sleep_state
        option: paused

  - alias: sleep_state_paused
    id: sleep_state_paused
    initial_state: true
    trigger:
      - platform: state
        entity_id:
          - binary_sensor.sovevaerelse_gulv
        to: "on"
    condition:
      - condition: state
        entity_id: binary_sensor.martin_presence_delayed
        state: "on"
      - condition: state
        entity_id: input_select.sleep_state
        state: sleeping
    action:
      action: input_select.select_option
      data:
        entity_id: input_select.sleep_state
        option: paused

  - alias: sleep_state_unpause
    id: sleep_state_unpause
    initial_state: true
    trigger:
      - platform: state
        entity_id: binary_sensor.sovevaerelse_gulv
        to: "off"
    condition:
      - condition: state
        entity_id: input_select.sleep_state
        state: "paused"
      - condition: state
        entity_id: binary_sensor.sovevaerelse_motion
        state: "on"
      - condition: state
        entity_id: binary_sensor.sovevaerelse_dor
        state: "off"
    action:
      action: input_select.select_option
      data:
        entity_id: input_select.sleep_state
        option: sleeping

  - alias: sleep_state_smart_wake
    id: sleep_state_smart_wake
    initial_state: true
    trigger:
      platform: event
      event_type: sleep_as_android
      event_data:
        event: smart_period
    condition:
      condition: and
      conditions:
        - condition: state
          entity_id: binary_sensor.martin_presence_delayed
          state: "on"
        - condition: or
          conditions:
            - condition: state
              entity_id: input_select.sleep_state
              state: in bed
            - condition: state
              entity_id: input_select.sleep_state
              state: sleeping
            - condition: state
              entity_id: input_select.sleep_state
              state: paused
    action:
      - action: input_select.select_option
        data:
          entity_id: input_select.sleep_state
          option: smart wake

  - alias: sleep_state_alarm
    id: sleep_state_alarm
    initial_state: true
    trigger:
      platform: event
      event_type: sleep_as_android
      event_data:
        event: alarm_alert_start
    condition:
      condition: and
      conditions:
        - condition: state
          entity_id: binary_sensor.martin_presence_delayed
          state: "on"
        - condition: or
          conditions:
            - condition: state
              entity_id: input_select.sleep_state
              state: in bed
            - condition: state
              entity_id: input_select.sleep_state
              state: sleeping
            - condition: state
              entity_id: input_select.sleep_state
              state: paused
            - condition: state
              entity_id: input_select.sleep_state
              state: smart wake
    action:
      - action: input_select.select_option
        data:
          entity_id: input_select.sleep_state
          option: alarm

  - alias: sleep_state_snoozing
    id: sleep_state_snoozing
    initial_state: true
    trigger:
      platform: event
      event_type: sleep_as_android
      event_data:
        event: alarm_snooze_clicked
    action:
      - condition: state
        entity_id: binary_sensor.martin_presence_delayed
        state: "on"
      - condition: state
        entity_id: input_select.sleep_state
        state: alarm
      - action: input_select.select_option
        data:
          entity_id: input_select.sleep_state
          option: snoozing

  - alias: sleep_state_waking
    id: sleep_state_waking
    initial_state: true
    trigger:
      - platform: event
        event_type: sleep_as_android
        event_data:
          event: alarm_alert_dismiss
      - platform: event
        event_type: sleep_as_android
        event_data:
          event: alarm_snooze_cancelled
      - platform: event
        event_type: sleep_as_android
        event_data:
          event: sleep_tracking_stopped
    condition:
      condition: or
      conditions:
        - condition: state
          entity_id: input_select.sleep_state
          state: alarm
        - condition: state
          entity_id: input_select.sleep_state
          state: snoozing
    action:
      - action: input_select.select_option
        data:
          entity_id: input_select.sleep_state
          option: waking

  - alias: sleep_state_awake
    id: sleep_state_awake
    initial_state: true
    trigger:
      - platform: state
        entity_id:
          - binary_sensor.gang_entre_bevaegelse
          - binary_sensor.gang_badevaerelse_bevaegelse
        to: "on"
      - platform: state
        entity_id: binary_sensor.sovevaerelse_dor
        to: "on"
    condition:
      - condition: state
        entity_id: binary_sensor.sovevaerelse_dor
        state: "on"
      - condition: or
        conditions:
          - condition: state
            entity_id: input_select.sleep_state
            state: alarm
          - condition: state
            entity_id: input_select.sleep_state
            state: snoozing
          - condition: state
            entity_id: input_select.sleep_state
            state: waking
    action:
      - action: input_select.select_option
        data:
          entity_id: input_select.sleep_state
          option: awake

  ######################
  # ACTIONS START HERE #
  ######################

  - alias: bedtime_action
    id: bedtime_action
    initial_state: true
    trigger:
      platform: state
      entity_id: input_select.sleep_state
      to: "bedtime"
    action:
      - action: notify.telegram_darkfox
        data:
          message: "Sengetid! Alarm kl. {{ states('sensor.wake_up_time_clock') }}"
      - action: cover.close_cover
        data:
          entity_id: cover.sovevaerelse_gardin
      - event: set_light_profile
        event_data:
          room: bedroom
          profile: Ambient
          transition_time: 300.0

  - alias: in_bed_action
    id: in_bed_action
    initial_state: true
    trigger:
      platform: state
      entity_id: input_select.sleep_state
      to: "in bed"
    variables:
      wake_up_time: "{{ states('sensor.wake_up_time_clock') }}"
    action:
      - parallel:
          - action: script.turn_on
            continue_on_error: true
            target:
              entity_id: script.sleep_as_android_set_alarm
            data:
              variables:
                message: HA
                timehour: "{{ wake_up_time.split(':')[0] }}"
                timemin: "{{ wake_up_time.split(':')[1] }}"
          - action: script.voice_broadcast
            continue_on_error: true
            data:
              entity_id: media_player.sovevaerelse
              volume_level: 0.2
              message: >-
                {%- set events = state_attr((
                    'sensor.agenda' if now().strftime('%H')|int < 10
                    else 'sensor.agenda_tomorrow'
                  ), 'events') | selectattr('routine', 'false') |list -%}
                Alarm sat til klokken {{ wake_up_time }}.

                {% if events -%}
                PÃ¥ kalenderen i morgen har du fÃ¸lgende:
                {% for event in events -%}
                    {%- set start = (event.start | as_datetime) -%}
                    {%- set end = (event.end | as_datetime) -%}
                    {%- set start_time = start.strftime('%H:%M') -%}
                    {%- set end_time = end.strftime('%H:%M') -%}
                    {%- set start_day = start.weekday() -%}
                    {%- set end_day = end.weekday() -%}
                    {%- if event.current -%}
                      - Lige nu: {{ event.summary }} indtil {{ state_attr('sensor.day_name', 'weekday_names')[end_day] if end_day != start_day }} kl. {{ end_time }}
                    {%- else -%}
                      - {{ start_time }} - {{ end_time }}: {{ event.summary }}
                    {%- endif -%}
                {% endfor %}
                {% else -%}
                Du har ingen aftaler i kalenderen i morgen.
                {% endif %}
          - event: set_light_profile
            event_data:
              room: bedroom
              profile: Night
              transition_time: 120.0

  - alias: sleeping_action
    id: sleeping_action
    initial_state: true
    trigger:
      platform: state
      entity_id: input_select.sleep_state
      to: "sleeping"
      from: "in bed"
    action:
      - action: switch.turn_on
        target:
          entity_id: switch.dorklokke_forstyr_ikke
      - choose:
          - conditions:
              - condition: state
                entity_id: input_select.sleep_as_android_state
                state: "awake"
            sequence:
              - action: script.turn_on
                target:
                  entity_id: script.sleep_as_android_start_tracking
      - event: set_light_profile
        event_data:
          room: bedroom
          profile: "Off"
          transition_time: 10.0

  - alias: sleep_paused_action
    id: sleep_paused_action
    initial_state: true
    trigger:
      platform: state
      entity_id: input_select.sleep_state
      to: "paused"
    action:
      - action: script.turn_on
        target:
          entity_id: script.sleep_as_android_pause_tracking
      - event: set_light_profile
        event_data:
          room: bedroom
          profile: Night

  - alias: resume_sleep_action
    id: resume_sleep_action
    initial_state: true
    trigger:
      platform: state
      entity_id: input_select.sleep_state
      to: "sleeping"
      from: "paused"
    action:
      - action: script.turn_on
        target:
          entity_id: script.sleep_as_android_start_tracking
      - event: set_light_profile
        event_data:
          room: bedroom
          profile: "Off"

  - alias: smart_wake_action
    id: smart_wake_action
    initial_state: true
    trigger:
      platform: state
      entity_id: input_select.sleep_state
      to: "smart wake"
    action:
      - action: switch.turn_off
        target:
          entity_id: switch.dorklokke_forstyr_ikke
      - event: set_light_profile
        event_data:
          room: bedroom
          profile: Night
          transition_time: 600.0

  - alias: alarm_action_media
    id: alarm_action_media
    initial_state: true
    trigger:
      platform: state
      entity_id: input_select.sleep_state
      to: "alarm"
    action:
      - action: media_player.unjoin
        target:
          entity_id:
            - media_player.sovevaerelse
            - media_player.badevaerelse
            - media_player.kokken
            - media_player.kontor
            - media_player.stue
            - media_player.roam
      - action: media_player.volume_set
        data:
          entity_id: "media_player.sovevaerelse"
          volume_level: 0.2
      - action: script.mass_playlist
        data:
          entity_id: media_player.sovevaerelse_mass
          repeat: "all"
          playlist:
            - "{{ states('sensor.podcast_radioavisen') }}"
            - DR P3
      - action: media_player.volume_set
        data:
          entity_id: "media_player.sovevaerelse_mass"
          volume_level: 0.2
      - delay:
          minutes: 10
      - condition: state
        entity_id: input_select.sleep_state
        state:
          - "alarm"
          - "snoozing"
      - action: media_player.volume_set
        data:
          entity_id: "media_player.sovevaerelse"
          volume_level: 0.30

  - alias: alarm_action
    id: alarm_action
    initial_state: true
    trigger:
      platform: state
      entity_id: input_select.sleep_state
      to: "alarm"
    action:
      - action: input_text.set_value
        target:
          entity_id: input_text.last_wake_up_time
        data:
          value: "{{ now().isoformat() }}"
      - action: switch.turn_off
        target:
          entity_id: switch.dorklokke_forstyr_ikke
      - event: set_light_profile
        event_data:
          room: bedroom
          profile: Ambient
          transition_time: 300.0
      - delay:
          minutes: 5
      - condition: state
        entity_id: input_select.sleep_state
        state:
          - "alarm"
          - "snoozing"
          - "waking"
      - event: set_light_profile
        event_data:
          room: bedroom
          profile: Dimmed
          transition_time: 300.0
      - choose:
          - conditions:
              - condition: state
                entity_id: sun.sun
                state: "above_horizon"
            sequence:
              - action: cover.set_cover_position
                data:
                  entity_id: cover.sovevaerelse_gardin_vindue
                  position: 25
      - delay:
          minutes: 5
      - condition: state
        entity_id: input_select.sleep_state
        state:
          - "alarm"
          - "snoozing"
          - "waking"
      - choose:
          - conditions:
              - condition: state
                entity_id: sun.sun
                state: "above_horizon"
            sequence:
              - action: cover.set_cover_position
                data:
                  entity_id: cover.sovevaerelse_gardin_vindue
                  position: 20
      - delay:
          minutes: 10
      - condition: state
        entity_id: input_select.sleep_state
        state:
          - "alarm"
          - "snoozing"
          - "waking"
      - choose:
          - conditions:
              - condition: state
                entity_id: sun.sun
                state: "above_horizon"
            sequence:
              - action: cover.set_cover_position
                data:
                  entity_id: cover.sovevaerelse_gardin_vindue
                  position: 15

  - alias: waking_action_media
    id: waking_action_media
    initial_state: true
    trigger:
      platform: state
      entity_id: input_select.sleep_state
      to: "waking"
    action:
      - action: script.mass_playlist
        data:
          entity_id: media_player.sovevaerelse_mass
          repeat: "all"
          playlist:
            - "{{ states('sensor.podcast_radioavisen') }}"
            - DR P3
      - wait_template: "{{ is_state('media_player.sovevaerelse', 'playing') }}"
        timeout: "00:00:30"
      - action: media_player.volume_set
        data:
          entity_id: "media_player.sovevaerelse"
          volume_level: 0.30

  - alias: waking_action
    id: waking_action
    initial_state: true
    trigger:
      platform: state
      entity_id: input_select.sleep_state
      to: "waking"
    action:
      - parallel:
          - event: set_light_profile
            event_data:
              room: bedroom
              profile: Dimmed
              transition_time: 120.0
          - action: switch.turn_off
            target:
              entity_id: switch.dorklokke_forstyr_ikke
          - choose:
              - conditions:
                  - condition: state
                    entity_id: sun.sun
                    state: "above_horizon"
                sequence:
                  - action: cover.open_cover
                    data:
                      entity_id: cover.sovevaerelse_gardin_dor
                  - action: cover.close_cover
                    data:
                      entity_id: cover.sovevaerelse_gardin_vindue

  - alias: awake_action_media
    id: awake_action_media
    initial_state: true
    trigger:
      platform: state
      entity_id: input_select.sleep_state
      to: "awake"
      from: "waking"
    action:
      - action: media_player.join
        target:
          entity_id: media_player.sovevaerelse
        data:
          group_members: >-
            [
              "media_player.badevaerelse"
              {{ ', "media_player.kokken"' if is_state('input_boolean.guests', 'off') }}
              {{ ', "media_player.roam"' if is_state('input_boolean.guests', 'off') and not is_state('media_player.roam', 'unavailable') }}
            ]
      - action: script.mass_briefing_playlist
        data:
          entity_id: media_player.sovevaerelse_mass
          volume_level: 0.5
          playlist:
            - "{{ states('sensor.podcast_radioavisen') }}"
            - "{{ states('sensor.podcast_daily_tech_headlines') }}"
            - "{{ states('sensor.podcast_daily_tech_news_show') }}"
            - DR P3
      - wait_template: "{{ is_state('media_player.badevaerelse', 'playing') }}"
        timeout: "00:00:30"
      - action: media_player.volume_set
        data:
          entity_id: >-
            ["media_player.sovevaerelse", "media_player.badevaerelse" {{ ', "media_player.kokken"' if is_state('input_boolean.guests', 'off') }}]
          volume_level: 0.5
      - delay:
          minutes: 2
      - action: media_player.volume_set
        data:
          entity_id: >-
            ["media_player.sovevaerelse", "media_player.badevaerelse" {{ ', "media_player.kokken"' if is_state('input_boolean.guests', 'off') }}]
          volume_level: 0.6

  - alias: awake_action
    id: awake_action
    initial_state: true
    trigger:
      platform: state
      entity_id: input_select.sleep_state
      to: "awake"
      from: "waking"
    action:
      - parallel:
          - action: switch.turn_off
            target:
              entity_id: switch.dorklokke_forstyr_ikke
          - action: script.turn_on
            target:
              entity_id: script.sleep_as_android_stop_tracking
          - event: set_light_profile
            event_data:
              room:
                - bedroom
                - bathroom
              profile: Dimmed
              transition_time: 120.0
      - delay:
          minutes: 3
      - parallel:
          - action: cover.open_cover
            data:
              entity_id: cover.sovevaerelse_gardin
          - event: set_light_profile
            event_data:
              room:
                - bedroom
                - bathroom
              profile: Default
              transition_time: 120.0

  ########################
  # Sleep Event Triggers #
  ########################

  - id: pause_tablet_on_sleep
    alias: Pause Tablet On Sleep
    trigger:
      - platform: event
        event_type: sleep_as_android
        event_data:
          event: light_sleep
      - platform: event
        event_type: sleep_as_android
        event_data:
          event: deep_sleep
      - platform: event
        event_type: sleep_as_android
        event_data:
          event: rem
    condition:
      - alias: "Media is playing on tablet"
        condition: state
        entity_id: binary_sensor.foxtablet_music_active
        state: "on"
    action:
      - action: notify.mobile_app_foxtablet
        data:
          message: "command_media"
          data:
            ttl: 0
            priority: high
            media_command: "pause"
            media_package_name: >-
              {% set found = false %}
              {% for key, value in states.sensor.foxtablet_media_session.attributes.items() %}
                  {% if not found and key.startswith('playback_state_') and value == 'Playing' %}
                      {{ key | replace('playback_state_', '') }}
                      {% set found = true %}
                  {% endif %}
              {% endfor %}

  - alias: Turn on tablet extra dim on sleep
    id: 10d61b0d-3f8e-40ea-8393-6058c79b189c
    trigger:
      - platform: state
        entity_id: input_select.sleep_state
        to:
          - "in bed"
          - "sleeping"
    action:
      - action: script.trigger_tasker_task
        data:
          action: notify.mobile_app_foxtablet
          task_id: "SET_EXTRA_DIM"
          extra_data: "state:true"

  - alias: Turn off tablet extra dim on waking
    id: 1e67b4e2-cae9-4942-b465-41381052fc4b
    trigger:
      - platform: state
        entity_id: input_select.sleep_state
        to: "waking"
    action:
      - action: script.trigger_tasker_task
        data:
          action: notify.mobile_app_foxtablet
          task_id: "SET_EXTRA_DIM"
          extra_data: "state:false"

  - id: turn_off_fan_on_sleep
    alias: turn_off_fan_on_sleep
    trigger:
      - platform: event
        event_type: sleep_as_android
        event_data:
          event: light_sleep
      - platform: event
        event_type: sleep_as_android
        event_data:
          event: deep_sleep
      - platform: event
        event_type: sleep_as_android
        event_data:
          event: rem
    action:
      - alias: "turn off fan"
        action: fan.turn_off
        target:
          entity_id: fan.sovevaerelse_blaeser

  - id: notify_phone_not_charging_on_sleep
    alias: Notify phone not charging on sleep
    initial_state: true
    trigger:
      - platform: state
        entity_id: input_select.sleep_state
        to: "sleeping"
      - platform: state
        entity_id: sensor.darkphone_charger_type
        to: "none"
        for:
          seconds: 10
      - platform: state
        entity_id: binary_sensor.darkphone_interactive
        to: "off"
        for:
          seconds: 10
    condition:
      - condition: state
        entity_id: input_select.sleep_state
        state: "sleeping"
      - condition: state
        entity_id: sensor.darkphone_charger_type
        state: "none"
      - condition: state
        entity_id: binary_sensor.darkphone_interactive
        state: "off"
    action:
      - action: script.voice_broadcast
        data:
          entity_id: media_player.sovevaerelse
          volume_level: 0.2
          message: "Din telefon lader ikke. Husk at sÃ¦tte den i laderen."
