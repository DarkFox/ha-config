proximity:
  bil_to_home:
    zone: home
    devices: device_tracker.id_3_pro_tracker
    unit_of_measurement: m
    tolerance: 100

  bil_to_rsr:
    zone: rsr
    devices: device_tracker.id_3_pro_tracker
    unit_of_measurement: m
    tolerance: 100

  bil_to_rsh:
    zone: rsh
    devices: device_tracker.id_3_pro_tracker
    unit_of_measurement: m
    tolerance: 100

sensor:
  - platform: statistics
    name: proximity_bil_to_rsr_stats
    entity_id: proximity.bil_to_rsr
    state_characteristic: mean
    sampling_size: 20
    max_age:
      minutes: 5

  - platform: statistics
    name: proximity_bil_to_rsh_stats
    entity_id: proximity.bil_to_rsh
    state_characteristic: mean
    sampling_size: 20
    max_age:
      minutes: 5

input_text:
  car_charging_type:
  car_charging_started:

input_boolean:
  car_delayed_charging:
    name: Delayed Charging
    icon: mdi:car-clock

input_datetime:
  car_start_charging_at:
    name: Car Start Charging At
    has_date: false
    has_time: true

template:
  - sensor:
      - name: "Car Charging Idle Fee Starting At"
        state: >-
          {%
            if is_state('sensor.id_3_pro_plug_connection_state', 'connected')
            and not is_state('input_text.car_charging_type', '')
            and states('device_tracker.id_3_pro_tracker') in ['not_home', 'RSH', 'RSR']
          %}
            {% set car_charging_started = states('input_text.car_charging_started')|int %}
            {% set charge_type = states('input_text.car_charging_type') %}
            {% if car_charging_started|as_datetime %}
              {% if charge_type == 'ac' %}
                {% set fee_start_time = (car_charging_started + (180*60))|as_datetime|as_local %}
                {% if (fee_start_time.strftime('%H:%M') > '21:00') %}
                  {% set fee_start_time = (as_timestamp(fee_start_time) + (1*24*3600)) | timestamp_custom("%Y-%m-%d 09:00:00", True)|as_datetime|as_local %}
                {% elif (fee_start_time.strftime('%H:%M') < '09:00') %}
                  {% set fee_start_time = as_timestamp(fee_start_time) | timestamp_custom("%Y-%m-%d 09:00:00", True)|as_datetime|as_local %}
                {% endif %}
                {{ fee_start_time }}
              {% else %}
                {{ (car_charging_started + (90*60))|as_datetime|as_local }}
              {% endif %}
            {% endif %}
          {% endif %}
        device_class: timestamp

      - name: "Car Charging Idle Fee Starting In"
        state: >-
          {{ ((states('sensor.car_charging_idle_fee_starting_at')|as_timestamp - now().timestamp())/60)|int }}
        device_class: duration
        unit_of_measurement: minutes

      - name: "Car Charging Complete or Idle Fee Time"
        state: >-
          {%- set ct = (states('sensor.id_3_pro_remaining_charging_time') if is_state('binary_sensor.car_charging_done_before_idle_fee', 'on') else states('sensor.car_charging_idle_fee_starting_in'))|int -%}
          {% if ct > 60 %}{{ ct // 60 }}:{{ '{:0>2d}'.format(ct%60) }}{% else %}{{ct}}{% endif %}
        device_class: duration
        unit_of_measurement: minutes

  - binary_sensor:
      - name: "Car charging done before idle fee"
        state: "{{ states('sensor.id_3_pro_remaining_charging_time') < states('sensor.car_charging_idle_fee_starting_in') }}"
        attributes:
          icon: mdi:car-clock
      - name: At RSR Soon
        state: "{{ (states('proximity.bil_to_rsr')|float < 2000) }}"
      - name: At RSH Soon
        state: "{{ (states('proximity.bil_to_rsr')|float < 2000) }}"
      - name: At Work Soon
        state: "{{ is_state('binary_sensor.at_rsr_soon', 'on') or is_state('binary_sensor.at_rsh_soon', 'on') }}"

automation:
  - id: car_delayed_charging_on
    alias: Car Delayed Charging On
    initial_state: true
    trigger:
      - platform: state
        entity_id: input_boolean.car_delayed_charging
        from: "off"
        to: "on"
    condition:
      - condition: state
        entity_id: input_boolean.car_delayed_charging
        state: "on"
    action:
      - service: switch.turn_off
        target:
          entity_id: switch.id_3_pro_charging
      - service: notify.telegram_darkfox
        data:
          message: "Opladning er bliver stoppet. Den starter igen kl. {{ states('input_datetime.car_start_charging_at') }}."

  - id: car_start_delayed_charging
    alias: Car Delayed Charging
    initial_state: true
    trigger:
      - platform: time
        at: input_datetime.car_start_charging_at
    condition:
      - condition: state
        entity_id: input_boolean.car_delayed_charging
        state: "on"
    action:
      - service: input_boolean.turn_off
        target:
          entity_id: input_boolean.car_delayed_charging
      - service: switch.turn_on
        target:
          entity_id: switch.id_3_pro_charging
      - service: notify.telegram_darkfox
        data:
          message: "Forsinket opladningstidspunkt er nået. Genstarter opladning."

  - id: set_car_charging_started_time
    alias: Set Car Charging Started Time
    trigger:
      - platform: state
        entity_id: sensor.id_3_pro_plug_connection_state
        from: "disconnected"
        to: "connected"
    action:
      - alias: "Set Car Charging Started to now"
        service: input_text.set_value
        target:
          entity_id: input_text.car_charging_started
        data:
          value: "{{ now().timestamp()|int }}"

  - id: set_car_charging_type
    alias: Set Car Charging Type
    trigger:
      - platform: state
        entity_id: sensor.id_3_pro_charge_type
        from: "invalid"
        to:
          - ac
          - dc
    action:
      - alias: "Set latest charge type"
        service: input_text.set_value
        target:
          entity_id: input_text.car_charging_type
        data:
          value: "{{ trigger.to_state.state }}"

  - id: clear_car_charging_started_time
    alias: Clear Car Charging Started Time
    trigger:
      - platform: state
        entity_id: sensor.id_3_pro_plug_connection_state
        to: "disconnected"
    action:
      - alias: "Clear charge type"
        service: input_text.set_value
        target:
          entity_id: input_text.car_charging_type
        data:
          value: ""
      - alias: "Clear Car Charging Started to now"
        service: input_text.set_value
        target:
          entity_id: input_text.car_charging_started
        data:
          value: ""

  - alias: notify_car_charging
    id: notify_car_charging
    initial_state: true
    trigger:
      - platform: state
        entity_id: sensor.id_3_pro_remaining_charging_time
        not_from: "unavailable"
    condition:
      - alias: "Estimated charging time remaining changed by more than 5 minutes"
        condition: template
        value_template: >-
          {%- set from_time = trigger.from_state.state|int(0) -%}
          {%- set to_time = trigger.to_state.state|int(0) -%}
          {{ (from_time - to_time > 5 or to_time - from_time > 5) }}
    action:
      - service: notify.telegram_darkfox
        data:
          message: >
            Bilen lader op fra {{ states('sensor.id_3_pro_state_of_charge') }}% til {{ states('sensor.id_3_pro_target_state_of_charge') }}%.

            Færdig ca. kl. {{ states('sensor.id_3_pro_charging_complete_at')|as_timestamp|timestamp_custom('%H:%M', True) }}.

  - alias: notify_15_minutes_till_car_charged
    id: notify_15_minutes_till_car_charged
    initial_state: true
    trigger:
      - platform: numeric_state
        entity_id: sensor.id_3_pro_remaining_charging_time
        below: 16
    condition:
      - condition: state
        entity_id: sensor.id_3_pro_charging_state
        state: "charging"
    action:
      - service: notify.telegram_darkfox
        data:
          message: >-
            Bilen er ladt op til {{ states('sensor.id_3_pro_state_of_charge') }}/{{ states('sensor.id_3_pro_target_state_of_charge') }}%.
            Færdig om {{ states('sensor.id_3_pro_remaining_charging_time') }} minutter.

  - alias: notify_idle_fee_time
    id: notify_idle_fee_time
    initial_state: false
    trigger:
      - platform: state
        entity_id: sensor.car_charging_idle_fee_starting_at
    action:
      - delay:
          seconds: 1
      - service: notify.telegram_darkfox
        data:
          message: >-
            Blokeringsgebyr starter kl. {{ states('sensor.car_charging_idle_fee_starting_at')|as_timestamp|timestamp_custom('%H:%M', True) }}.
            {{ 'Opladning bliver ikke færdig inden.' if is_state('binary_sensor.car_charging_done_before_idle_fee', 'off') }}

  - id: warn_charger_idle_fees
    alias: warn_charger_idle_fees
    initial_state: false
    mode: restart
    trigger:
      - platform: numeric_state
        entity_id: sensor.car_charging_idle_fee_starting_in
        below: 16
    action:
      - service: notify.telegram_darkfox
        data:
          message: Blokeringsgebyr starter om {{ states('sensor.car_charging_idle_fee_starting_in') }} minutter!
      - wait_template: "{{ is_state('sensor.car_charging_idle_fee_starting_in', '') }}"
        timeout:
          minutes: "{{ states('sensor.car_charging_idle_fee_starting_in')|int }}"
      - condition: "{{ not wait.completed }}"
      - service: notify.telegram_darkfox
        data:
          message: Blokeringsgebyr starter nu!

  - alias: notify_car_charged
    id: notify_car_charged
    initial_state: true
    trigger:
      - platform: state
        entity_id: sensor.id_3_pro_charging_state
        from: "charging"
    condition:
      - condition: not
        conditions:
          - condition: state
            entity_id: sensor.id_3_pro_charging_state
            state: "unavailable"
    action:
      - service: notify.telegram_darkfox
        data:
          message: "Oplading afsluttet. Bilen er ladt op til {{ states('sensor.id_3_pro_state_of_charge') }}%."
