template:
  - sensor:
      - name: "Car Distance to Martin"
        unique_id: c09db247-de53-4550-b417-442d7996e1f2
        state: "{{ distance('device_tracker.id_3_pro_tracker', 'person.martin') }}"
        device_class: distance
        unit_of_measurement: km

  - binary_sensor:
      - name: "Upcoming drive"
        unique_id: 2f27b7a3-22d3-44e7-871f-bac1b42b3568
        state: >-
          {% set next_driving = is_state_attr('sensor.upcoming_travel_location', 'mode', 'driving') %}
          {% set current_driving_events = state_attr('sensor.current_event', 'events') | selectattr('bil', 'eq', true) | list  %}
          {% set current_driving_event = current_driving_events | last if current_driving_events else none %}
          {% if next_driving or current_driving_event %}
            {% set start_time_str = states('sensor.next_scheduled_leave_at') if has_value('sensor.next_scheduled_leave_at') %}
            {% set start_time = (start_time_str|as_datetime|as_local) if start_time_str %}
            {% set end_time_str = current_driving_event.get('end', none) if current_driving_event %}
            {% set end_time = (end_time_str|as_datetime|as_local) if end_time_str %}
            {% if start_time and end_time %}
              {% set min_time = min(start_time, end_time) %}
              {{ min_time - timedelta(minutes=5) < now() }}
            {% elif end_time and end_time - timedelta(minutes=5) < now() %}
              True
            {% elif start_time and start_time - timedelta(minutes=5) < now() %}
              True
            {% else %}
              False
            {% endif %}
          {% else %}
            False
          {% endif %}

automation:
  - id: alert_car_unlocked
    alias: Alert car unlocked
    triggers:
      - trigger: numeric_state
        entity_id: sensor.car_distance_to_martin
        above: 0.1
        for:
          seconds: 30
      - trigger: state
        entity_id: binary_sensor.id_3_pro_locked
        to: "on"
        for:
          minutes: 5
    conditions:
      - alias: "Car unlocked"
        condition: state
        entity_id: binary_sensor.id_3_pro_locked
        state: "on"
      - alias: "Car parked"
        condition: state
        entity_id: binary_sensor.id_3_pro_car_is_active
        state: "off"
    actions:
      - action: automation.turn_on
        target:
          entity_id: automation.notify_car_locked
      - action: script.notify_everywhere
        data:
          message: Bilen er ikke låst!
          severity: 2

  - id: notify_car_locked
    alias: Notify car locked
    triggers:
      - trigger: state
        entity_id: binary_sensor.id_3_pro_locked
        to: "off"
    actions:
      - action: script.notify_everywhere
        data:
          message: Bilen er låst.
          severity: 1
      - action: automation.turn_off
        target:
          entity_id: automation.alert_car_unlocked
