automation:
  - alias: Send upcoming travel location to car
    id: 295f96ad-137a-4096-9bed-f2c2762fbc8c
    initial_state: true
    triggers:
      - trigger: numeric_state
        entity_id: sensor.next_scheduled_leave_in
        below: 60
    conditions:
      - condition: state
        entity_id: sensor.upcoming_travel_location
        attribute: mode
        state: "driving"
    actions:
      - action: script.send_entity_destination_to_car
        data:
          entity_id: sensor.upcoming_travel_location

  - alias: Send home destination to car
    id: 5f90a704-bfc1-4f60-a525-6af990b697ed
    initial_state: true
    triggers:
      - trigger: state
        entity_id: binary_sensor.upcoming_drive
        to: "on"
    conditions:
      - condition: numeric_state
        entity_id: sensor.next_scheduled_leave_in
        above: 60
    actions:
      - action: script.send_home_destination
        data:
          entity_id: zone.home

script:
  send_entity_destination_to_car:
    alias: Send entity destination to car
    fields:
      entity_id:
        description: Source entity for destination
        example: zone.home
        required: true
    sequence:
      - choose:
          - alias: Entity without coordinates
            conditions:
              - condition: template
                value_template: "{{ not state_attr(entity_id, 'latitude') }}"
            sequence:
              - variables:
                  query: "{{ states(entity_id) }}"
                  start_time: >-
                    {{
                      state_attr(entity_id, 'start_time')
                      or state_attr(entity_id, 'start')
                      or none
                    }}
                  name: >-
                    {{
                      (start_time|as_datetime|as_local).strftime('%H:%M')~':' if start_time
                      else ''
                    }}
                    {{
                      state_attr(entity_id, 'summary')
                      or state_attr(entity_id, 'name')
                      or state_attr(entity_id, 'friendly_name')
                      or none
                    }}
              - action: script.osm_geocoding_lookup
                response_variable: geocoded_data
                data:
                  query: "{{ query }}"
              - variables:
                  destination: >-
                    {%- from 'osm.jinja' import geocodejson_to_vw -%}
                    {{ geocodejson_to_vw(geocoded_data.location, name) if geocoded_data.get('location', None) else {} }}
              - condition: template
                value_template: "{{ bool(destination.get('geoCoordinate', {}).get('latitude', False)) }}"
              - action: script.id_3_pro_send_destinations
                data:
                  destinations: "{{ destination }}"
        default:
          - action: script.id_3_pro_send_destinations
            data:
              destinations:
                - name: "{{ state_attr(entity_id, 'friendly_name') }}"
                  geoCoordinate:
                    latitude: "{{ state_attr(entity_id, 'latitude') }}"
                    longitude: "{{ state_attr(entity_id, 'longitude') }}"

  send_home_destination:
    alias: Send home destination to car
    sequence:
      - action: script.send_entity_destination_to_car
        data:
          entity_id: zone.home

  send_rsh_destination:
    alias: Send RSH destination to car
    sequence:
      - action: script.send_entity_destination_to_car
        data:
          entity_id: zone.rsh

  send_rsr_destination:
    alias: Send RSR destination to car
    sequence:
      - action: script.send_entity_destination_to_car
        data:
          entity_id: zone.rsr

  send_graested_destination:
    alias: Send Græsted destination to car
    sequence:
      - action: script.send_entity_destination_to_car
        data:
          entity_id: zone.graested

  send_foraeldre_destination:
    alias: Send Forældre destination to car
    sequence:
      - action: script.send_entity_destination_to_car
        data:
          entity_id: zone.foraeldre

  send_upcoming_travel_location:
    alias: Send upcoming travel location to car
    sequence:
      - action: script.send_entity_destination_to_car
        data:
          entity_id: sensor.upcoming_travel_location
