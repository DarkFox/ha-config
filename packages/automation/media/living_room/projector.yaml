switch:
  - platform: template
    switches:
      projector:
        icon_template: mdi:projector
        # value_template: "{{ is_state('binary_sensor.projector_power', 'on') }}"
        turn_on:
          service: script.turn_on
          data:
            entity_id: script.projector_on
        turn_off:
          service: script.turn_on
          data:
            entity_id: script.projector_off

binary_sensor:
  - platform: template
    sensors:
      projector_power:
        value_template: "{{ is_state('sensor.projector_state', 'on') }}"

sensor:
  - platform: template
    sensors:
      projector_state:
        value_template: >
          {%- if is_state('switch.projector_afbryder', 'off') -%}
            off
          {%- else -%}
            {%- if states('sensor.projector_afbryder_forbrug')|int < 2 -%}
              standby
            {%- elif states('sensor.projector_afbryder_forbrug')|int < 8 -%}
              booting
            {%- elif states('sensor.projector_afbryder_forbrug')|int < 18 -%}
              shutdown
            {%- else -%}
              on
            {%- endif -%}
          {%- endif -%}

  - platform: scrape
    name: projector_source
    resource: http://192.168.42.70/download.asp
    select: ".stat"
    index: 9
    value_template: "{{ value.split(' : ')[1] }}"

script:
  projector_on:
    alias: "Projector On"
    sequence:
      - condition: state
        entity_id: binary_sensor.projector_power
        state: "off"
      - service: cover.close_cover
        data:
          entity_id: cover.projektor_laerred
      - choose:
          - conditions:
              - condition: state
                entity_id: sensor.projector_state
                state: "off"
            sequence:
              - service: switch.turn_on
                entity_id: switch.projector_afbryder
              - delay:
                  seconds: 2
      - service: switch.turn_on
        entity_id: switch.projector_power

  projector_off:
    alias: "Projector Off"
    sequence:
      - condition: state
        entity_id: binary_sensor.projector_power
        state: "on"
      - service: cover.open_cover
        data:
          entity_id: cover.projektor_laerred
      - service: switch.turn_on
        entity_id: switch.projector_power
      - delay:
          seconds: 1
      - service: switch.turn_on
        entity_id: switch.projector_power
      - wait_template: "{{ is_state('sensor.projector_state', 'standby') }}"
        timeout: "00:01:00"
      - choose:
          - conditions:
              - condition: state
                entity_id: sensor.projector_state
                state: "standby"
            sequence:
              - service: switch.turn_off
                entity_id: switch.projector_afbryder
          - conditions:
              - condition: state
                entity_id: sensor.projector_state
                state: "on"
            sequence:
              - service: script.turn_on
                entity_id: script.projector_off
