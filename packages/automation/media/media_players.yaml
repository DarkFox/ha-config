script:
  join_unjoin_sonos_group:
    fields:
      entity_id:
        description: Media Player that will be joined or unjoined
        example: media_player.media_room
    variables:
      group_leader_entity: "{{ states('sensor.sonos_group_leader') }}"
    sequence:
      - choose:
          - conditions:
              - condition: template
                value_template: "{{ (state_attr(entity_id, 'group_members')|length) > 1 }}"
            sequence:
              - service: media_player.unjoin
                target:
                  entity_id: "{{ entity_id }}"
          - conditions:
              - condition: template
                value_template: "{{ not not group_leader_entity }}"
            sequence:
              - service: media_player.join
                target:
                  entity_id: "{{ group_leader_entity }}"
                data:
                  group_members: >-
                    {{ [entity_id] + state_attr(group_leader_entity, 'group_members') }}

  toggle_mute:
    fields:
      entity_id:
        description: Media Player that will be mute or unmuted
        example: media_player.media_room
    sequence:
      - service: media_player.volume_mute
        target:
          entity_id: "{{ entity_id }}"
        data:
          is_volume_muted: "{{ not state_attr(entity_id , 'is_volume_muted') }}"

  briefing_announcement:
    alias: Briefing Announcement
    sequence:
      - service: conversation.process
        data:
          text: >-
            {{ state_attr('sensor.gpt_briefing_prompt', 'prompt') | regex_replace("  +", ' ') }}
          language: DA
          agent_id: 4e0a875b09f8a19a405e1bf3e5c4adac
        response_variable: agent
      - service: script.tts_speak
        data:
          cache: false
          entity_id: "{{ announcement_entities }}"
          volume_level: "{{ volume_level }}"
          message: >-
            {{ agent.response.speech.plain.speech }}

  mass_briefing_playlist:
    alias: MASS Briefing playlist
    sequence:
      - service: script.briefing_announcement
        data:
          announcement_entities: "{{ announcement_entities }}"
          volume_level: "{{ volume_level }}"
      - delay:
          seconds: 10
      - service: script.mass_playlist
        data:
          entity_id: "{{ entity_id }}"
          repeat: "off"
          shuffle: false
          playlist: "{{ playlist }}"

  mass_playlist:
    alias: MASS Playlist
    fields:
      entity_id:
        description: Media Player that will play the playlist
        example: media_player.media_room
      repeat:
        description: Repeat mode
        example: "off"
      shuffle:
        description: Shuffle mode
        example: false
      playlist:
        description: Playlist URI
        example: "library://radio/1"
    sequence:
      - service: media_player.repeat_set
        target:
          entity_id: "{{ entity_id }}"
        data:
          repeat: "{{ repeat | default('off') }}"
      - service: media_player.shuffle_set
        target:
          entity_id: "{{ entity_id }}"
        data:
          shuffle: "{{ shuffle | default(false) }}"
      - service: mass.queue_command
        data:
          player_id: "{{ entity_id }}"
          command: play_media
          enqueue_mode: replace
          repeat_mode: "{{ repeat | default('off') }}"
          uri: "{{ playlist }}"

  playlist_play_media:
    sequence:
      - service: media_player.play_media
        data:
          entity_id: "{{ entity_id }}"
          media_content_id: >
            {%- if 'youtube' in url -%}
              {% set param_str = url.split('?')[1] %}
              {% set ns = namespace(params={}) %}
              {% for p in param_str.split('&') %}
                {% set param = p.split('=') %}
                {% set ns.params = dict(ns.params, **{param[0]: param[1]}) %}
              {% endfor %}
              { "app_name": "youtube", "media_id": "{{ ns.params['v'] }}" }
            {%- else -%}
              {{ url }}
            {%- endif -%}
          media_content_type: >
            {%- if 'youtube' in url -%}
              cast
            {%- else -%}
              EPISODE
            {%- endif -%}

  weather_report:
    alias: Vejrudsigt
    sequence:
      - service: script.tts_speak
        data:
          cache: false
          entity_id: "{{ entity_id }}"
          message: "{{ states('sensor.dmi_vejr_tts') }} {{ state_attr('sensor.dmi_vejr_tts', 'text') }}"

  briefing:
    alias: Rapport
    sequence:
      - service: conversation.process
        data:
          text: >-
            {{ state_attr('sensor.gpt_briefing_prompt', 'prompt') | regex_replace("  +", ' ') }}
          language: DA
          agent_id: 4e0a875b09f8a19a405e1bf3e5c4adac
        response_variable: agent
      - service: script.tts_speak
        data:
          cache: false
          entity_id: "{{ entity_id }}"
          message: >-
            {{ agent.response.speech.plain.speech }}

automation:
  - id: adjust_speaker_group_volume
    alias: Adjust Speaker Group Volume
    trigger:
      - platform: state
        entity_id:
          - input_number.stue_group_volume
          - input_number.kokken_group_volume
          - input_number.sovevaerelse_group_volume
          - input_number.badevaerelse_group_volume
    action:
      repeat:
        for_each: "{{ state_attr(trigger.entity_id, 'group_members') }}"
        sequence:
          - service: media_player.volume_set
            target:
              entity_id: "{{ repeat.item }}"
            data:
              volume: "{{ '' }}"

input_number:
  stue_group_volume:
    name: Stue Gruppe Lydstyrke
    min: 0
    max: 100
    step: 1
  kokken_group_volume:
    name: Køkken Gruppe Lydstyrke
    min: 0
    max: 100
    step: 1
  sovevaerelse_group_volume:
    name: Sovevaerelse Gruppe Lydstyrke
    min: 0
    max: 100
    step: 1
  badevaerelse_group_volume:
    name: Badevaerelse Gruppe Lydstyrke
    min: 0
    max: 100
    step: 1
  roam_group_volume:
    name: Roam Gruppe Lydstyrke
    min: 0
    max: 100
    step: 1

template:
  - binary_sensor:
      - name: Stue Group Leader
        state: >-
          {% set entity = 'media_player.stue' %}
          {% set group_members = state_attr(entity, 'group_members') %}
          {% if (group_members|length) > 1 %}
            {{ group_members[0] == entity }}
          {% else %}
            {{ is_state(entity, 'playing') }}
          {% endif %}

      - name: Køkken Group Leader
        state: >-
          {% set entity = 'media_player.kokken' %}
          {% set group_members = state_attr(entity, 'group_members') %}
          {% if (group_members|length) > 1 %}
            {{ group_members[0] == entity }}
          {% else %}
            {{ is_state(entity, 'playing') }}
          {% endif %}

      - name: Kontor Group Leader
        state: >-
          {% set entity = 'media_player.kontor' %}
          {% set group_members = state_attr(entity, 'group_members') %}
          {% if (group_members|length) > 1 %}
            {{ group_members[0] == entity }}
          {% else %}
            {{ is_state(entity, 'playing') }}
          {% endif %}

      - name: Sovevaerelse Group Leader
        state: >-
          {% set entity = 'media_player.sovevaerelse' %}
          {% set group_members = state_attr(entity, 'group_members') %}
          {% if (group_members|length) > 1 %}
            {{ group_members[0] == entity }}
          {% else %}
            {{ is_state(entity, 'playing') }}
          {% endif %}

      - name: Badevaerelse Group Leader
        state: >-
          {% set entity = 'media_player.badevaerelse' %}
          {% set group_members = state_attr(entity, 'group_members') %}
          {% if (group_members|length) > 1 %}
            {{ group_members[0] == entity }}
          {% else %}
            {{ is_state(entity, 'playing') }}
          {% endif %}

      - name: Roam Group Leader
        state: >-
          {% set entity = 'media_player.roam' %}
          {% set group_members = state_attr(entity, 'group_members') %}
          {% if (group_members|length) > 1 %}
            {{ group_members[0] == entity }}
          {% else %}
            {{ is_state(entity, 'playing') }}
          {% endif %}

  - sensor:
      - name: Sonos Group Leader
        state: >-
          {% set entity = 'group.sonos_group_leaders' %}
          {% set group_members = state_attr(entity, 'entity_id') %}
          {% set ns = namespace(grouped=[],playing=[]) %}
          {% for entity_id in group_members %}
            {% set media_player_entity_id = 'media_player.'+entity_id|replace('binary_sensor.', '')|replace('_group_leader','') %}
            {% if is_state(entity_id, 'on') %}
              {% set ns.grouped = ns.grouped + [media_player_entity_id] %}
            {% endif %}
          {% endfor %}
          {% for media_player_entity_id in ns.grouped %}
            {% if is_state(media_player_entity_id, 'playing') %}
              {% set ns.playing = ns.playing + [media_player_entity_id] %}
            {% endif %}
          {% endfor %}
          {{ ns.playing[0] if (ns.playing|length) > 0 else ns.grouped[0] }}

      - name: Stue Speaker Lead By
        state: >-
          {% set entity = 'media_player.stue' %}
          {% set group_members = state_attr(entity, 'group_members') %}
          {{ group_members[0] }}

      - name: Stue Speaker Group Max Volume
        state: >-
          {% set group_members = state_attr('media_player.stue', 'group_members') %}
          {% set ns = namespace(ret=[]) %}
          {% for member in group_members %}
            {% set ns.ret = ns.ret + [state_attr(member, 'volume_level')] %}
          {% endfor %}
          {{ ns.ret|average }}

      - name: Stue Speaker Distance to Group Max Volume
        state: >-
          {{ (state_attr('media_player.stue', 'volume_level')|float) - (states('sensor.stue_speaker_group_max_volume')|float)  }}

      - name: Stue Speaker Volume Exponent
        state: >-
          {% set group_max = (states('sensor.stue_speaker_group_max_volume')|float) %}
          {% set distance = (states('sensor.stue_speaker_distance_to_group_max_volume')|float)%}
          {{ 1-(distance + group_max) }}

      - name: Køkken Speaker Lead By
        state: >-
          {% set entity = 'media_player.kokken' %}
          {% set group_members = state_attr(entity, 'group_members') %}
          {{ group_members[0] }}

      - name: Køkken Speaker Group Max Volume
        state: >-
          {% set group_members = state_attr('media_player.kokken', 'group_members') %}
          {% set ns = namespace(ret=[]) %}
          {% for member in group_members %}
            {% set ns.ret = ns.ret + [state_attr(member, 'volume_level')] %}
          {% endfor %}
          {{ ns.ret|average }}

      - name: Køkken Speaker Distance to Group Max Volume
        state: >-
          {{ (state_attr('media_player.kokken', 'volume_level')|float) - (states('sensor.kokken_speaker_group_max_volume')|float)  }}

      - name: Køkken Speaker Volume Exponent
        state: >-
          {% set group_max = (states('sensor.kokken_speaker_group_max_volume')|float) %}
          {% set distance = (states('sensor.kokken_speaker_distance_to_group_max_volume')|float)%}
          {{ 1-(distance + group_max) }}

      - name: Kontor Speaker Lead By
        state: >-
          {% set entity = 'media_player.kontor' %}
          {% set group_members = state_attr(entity, 'group_members') %}
          {{ group_members[0] }}

      - name: Kontor Speaker Group Max Volume
        state: >-
          {% set group_members = state_attr('media_player.kontor', 'group_members') %}
          {% set ns = namespace(ret=[]) %}
          {% for member in group_members %}
            {% set ns.ret = ns.ret + [state_attr(member, 'volume_level')] %}
          {% endfor %}
          {{ ns.ret|average }}

      - name: Kontor Speaker Distance to Group Max Volume
        state: >-
          {{ (state_attr('media_player.kontor', 'volume_level')|float) - (states('sensor.kontor_speaker_group_max_volume')|float)  }}

      - name: Kontor Speaker Volume Exponent
        state: >-
          {% set group_max = (states('sensor.kontor_speaker_group_max_volume')|float) %}
          {% set distance = (states('sensor.kontor_speaker_distance_to_group_max_volume')|float)%}
          {{ 1-(distance + group_max) }}

      - name: Sovevaerelse Speaker Lead By
        state: >-
          {% set entity = 'media_player.sovevaerelse' %}
          {% set group_members = state_attr(entity, 'group_members') %}
          {{ group_members[0] }}

      - name: Sovevaerelse Speaker Group Max Volume
        state: >-
          {% set group_members = state_attr('media_player.sovevaerelse', 'group_members') %}
          {% set ns = namespace(ret=[]) %}
          {% for member in group_members %}
            {% set ns.ret = ns.ret + [state_attr(member, 'volume_level')] %}
          {% endfor %}
          {{ ns.ret|average }}

      - name: Sovevaerelse Speaker Distance to Group Max Volume
        state: >-
          {{ (state_attr('media_player.sovevaerelse', 'volume_level')|float) - (states('sensor.sovevaerelse_speaker_group_max_volume')|float)  }}

      - name: Sovevaerelse Speaker Volume Exponent
        state: >-
          {% set group_max = (states('sensor.sovevaerelse_speaker_group_max_volume')|float) %}
          {% set distance = (states('sensor.sovevaerelse_speaker_distance_to_group_max_volume')|float)%}
          {{ 1-(distance + group_max) }}

      - name: Badevaerelse Speaker Lead By
        state: >-
          {% set entity = 'media_player.badevaerelse' %}
          {% set group_members = state_attr(entity, 'group_members') %}
          {{ group_members[0] }}

      - name: Badevaerelse Speaker Group Max Volume
        state: >-
          {% set group_members = state_attr('media_player.badevaerelse', 'group_members') %}
          {% set ns = namespace(ret=[]) %}
          {% for member in group_members %}
            {% set ns.ret = ns.ret + [state_attr(member, 'volume_level')] %}
          {% endfor %}
          {{ ns.ret|average }}

      - name: Badevaerelse Speaker Distance to Group Max Volume
        state: >-
          {{ (state_attr('media_player.badevaerelse', 'volume_level')|float) - (states('sensor.badevaerelse_speaker_group_max_volume')|float)  }}

      - name: Badevaerelse Speaker Volume Exponent
        state: >-
          {% set group_max = (states('sensor.badevaerelse_speaker_group_max_volume')|float) %}
          {% set distance = (states('sensor.badevaerelse_speaker_distance_to_group_max_volume')|float)%}
          {{ 1-(distance + group_max) }}

      - name: Roam Speaker Lead By
        state: >-
          {% set entity = 'media_player.roam' %}
          {% set group_members = state_attr(entity, 'group_members') %}
          {{ group_members[0] }}

      - name: Roam Speaker Group Max Volume
        state: >-
          {% set group_members = state_attr('media_player.roam', 'group_members') %}
          {% set ns = namespace(ret=[]) %}
          {% for member in group_members %}
            {% set ns.ret = ns.ret + [state_attr(member, 'volume_level')] %}
          {% endfor %}
          {{ ns.ret|average }}

      - name: Roam Speaker Distance to Group Max Volume
        state: >-
          {{ (state_attr('media_player.roam', 'volume_level')|float) - (states('sensor.roam_speaker_group_max_volume')|float)  }}

      - name: Roam Speaker Volume Exponent
        state: >-
          {% set group_max = (states('sensor.roam_speaker_group_max_volume')|float) %}
          {% set distance = (states('sensor.roam_speaker_distance_to_group_max_volume')|float)%}
          {{ 1-(distance + group_max) }}

      - name: Active Media Player
        state: >
          {% set dev = namespace(active_player='') %}
          {% for item in states.group.all_media.attributes.entity_id if is_state(item, 'playing') %}
            {% if dev.active_player == '' %}
              {% set dev.active_player = item %}
            {% endif %}
          {%- endfor %}

          {{ dev.active_player }}

group:
  kitchen_speakers:
    - media_player.kokken
  bathroom_speakers:
    - media_player.badevaerelse
  bedroom_speakers:
    - media_player.sovevaerelse
  living_room_speakers:
    - media_player.stue
  office_speakers:
    - media_player.kontor
  hallway_speakers:
    - media_player.roam
  balcony_speakers:
    - media_player.roam
  workshop_speakers:
    - media_player.roam

  sonos_group_leaders:
    entities:
      - binary_sensor.badevaerelse_group_leader
      - binary_sensor.kokken_group_leader
      - binary_sensor.kontor_group_leader
      - binary_sensor.roam_group_leader
      - binary_sensor.sovevaerelse_group_leader
      - binary_sensor.stue_group_leader
  sonos:
    name: Sonos Højttalere
    entities:
      - media_player.badevaerelse
      - media_player.kokken
      - media_player.kontor
      - media_player.roam
      - media_player.sovevaerelse
      - media_player.stue
  all_media:
    name: All Media
    entities:
      - media_player.badevaerelse
      - media_player.kokken
      - media_player.kontor
      - media_player.roam
      - media_player.sovevaerelse
      - media_player.stue

      - media_player.stue_shield
      - media_player.kontor_shield
      - media_player.sovevaerelse_chromecast

      - media_player.sovevaerelse_tv_dlna
