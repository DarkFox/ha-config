script:
  open_drtv_app:
    mode: parallel
    alias: Open DR TV App
    fields:
      media_player_entity_id:
        description: Media Player that will open the app
        example: media_player.stue_shield
        selector:
          entity:
            filter:
              - integration: androidtv_remote
                domain: media_player
      remote_entity_id:
        description: Remote that will send the command
        example: remote.stue_shield_remote
        selector:
          entity:
            filter:
              - integration: androidtv_remote
                domain: remote
    variables:
      media_player_entity_id: >-
        {{
          media_player_entity_id if media_player_entity_id is defined
          else (remote_entity_id | replace('remote.', 'media_player.'))~'_remote'
        }}
      remote_entity_id: >-
        {{
          remote_entity_id if remote_entity_id is defined
          else media_player_entity_id | replace('media_player.', 'remote.') | replace('_remote', '')
        }}
    sequence:
      - action: media_player.play_media
        target:
          entity_id: "{{ media_player_entity_id }}"
        data:
          media_content_type: app
          media_content_id: dk.dr.tvplayer
      - wait_template: "{{ is_state_attr(media_player_entity_id, 'app_id', 'com.android.vending') }}"
        timeout: 00:00:30
        continue_on_timeout: false
      - delay: 1
      - action: remote.send_command
        target:
          entity_id: "{{ remote_entity_id }}"
        data:
          command: DPAD_CENTER

  toggle_mute:
    mode: parallel
    fields:
      entity_id:
        description: Media Player that will be mute or unmuted
        example: media_player.stue
    sequence:
      - action: media_player.volume_mute
        target:
          entity_id: "{{ entity_id }}"
        data:
          is_volume_muted: "{{ not state_attr(entity_id , 'is_volume_muted') }}"

  play_pause_mute:
    mode: parallel
    description: Play or pause media, if source is TV, mute or unmute
    fields:
      entity_id:
        description: Media Player that will be played or paused
        example: media_player.stue
    sequence:
      - choose:
          - conditions:
              - condition: template
                value_template: "{{ state_attr(entity_id, 'source') == 'TV' }}"
            sequence:
              - action: script.toggle_mute
                data:
                  entity_id: "{{ entity_id }}"
        default:
          - action: media_player.media_play_pause
            target:
              entity_id: "{{ entity_id }}"

  set_volume_preset:
    mode: parallel
    description: Set volume preset for room
    fields:
      room:
        description: Room to set volume preset. If not given, the preset will be applied to all rooms
        example: "stue"
        selector:
          select:
            options:
              - stue
              - kokken
              - kontor
              - sovevaerelse
              - badevaerelse
              - roam
      preset:
        description: Volume preset (low, medium, high)
        example: "low"
        required: true
        selector:
          select:
            options:
              - low
              - medium
              - high
    variables:
      media_player_presets:
        stue:
          low: 0.10
          medium: 0.3
          high: 0.6
        kokken:
          low: 0.15
          medium: 0.3
          high: 0.7
        kontor:
          low: 0.15
          medium: 0.3
          high: 0.7
        sovevaerelse:
          low: 0.15
          medium: 0.3
          high: 0.6
        badevaerelse:
          low: 0.15
          medium: 0.3
          high: 0.7
        roam:
          low: 0.3
          medium: 0.5
          high: 0.7
    sequence:
      - choose:
          - conditions:
              - condition: template
                value_template: "{{ room in media_player_presets.keys() }}"
            sequence:
              - action: media_player.volume_set
                target:
                  entity_id: "media_player.{{ room }}"
                data:
                  volume_level: "{{ media_player_presets[room][preset] }}"
        default:
          - repeat:
              count: "{{ media_player_presets|length }}"
              sequence:
                - variables:
                    room: "{{ (media_player_presets.keys()|list)[repeat.index-1] }}"
                - action: media_player.volume_set
                  target:
                    entity_id: "media_player.{{ room }}"
                  data:
                    volume_level: "{{ media_player_presets[room][preset] }}"

  morning_briefing:
    sequence:
      - variables:
          clothes_recommendation: |
            {% set temp = states('sensor.ude_temperatur')|int -%}
            Bseret på temperaturen vil jeg anbefale {% if temp < 5 -%}
              varmt tøj, da det er koldt udenfor.
            {% elif temp < 10 -%}
              en varm trøje, da det er køligt udenfor.
            {% elif temp < 15 -%}
              en let jakke, da det er mildt udenfor.
            {% elif temp < 20 -%}
              en t-shirt, da det er lunt udenfor.
            {% elif temp < 25 -%}
              en t-shirt, da det er varmt udenfor.
            {% else -%}
              let tøj, da det er meget varmt udenfor.
            {% endif -%}
          briefing: |
            {% from 'utils.jinja' import remove_double_spaces %}
            {{ state_attr('sensor.morning_briefing', 'briefing') }}
            {{ remove_double_spaces(clothes_recommendation | replace('\n', ' ')) }}
            Ha' en god dag.
          response: |
            {{ {'briefing': briefing} }}
      - stop: "Return briefing"
        response_variable: "response"

  briefing_announcement:
    mode: parallel
    alias: Briefing Announcement
    fields:
      entity_id:
        description: Media Player that will play the announcement
        example: media_player.stue
      volume_level:
        description: Volume level
        example: "0.5"
    sequence:
      - action: script.morning_briefing
        response_variable: response
      - action: script.tts_speak
        data:
          cache: false
          entity_id: "{{ entity_id }}"
          volume_level: "{{ volume_level | default(0.5) }}"
          message: >-
            {{ response.briefing }}

  briefing_announcement_url:
    mode: parallel
    alias: Briefing Announcement URL
    sequence:
      - action: script.morning_briefing
        response_variable: response
      - action: script.tts_url
        response_variable: chime_tts
        data:
          message: "{{ response.briefing }}"
      - stop: "Return chime_tts"
        response_variable: "chime_tts"

  mass_briefing_playlist:
    mode: parallel
    alias: MASS Briefing playlist
    fields:
      entity_id:
        description: Media Player that will play the playlist
        example: media_player.stue
        selector:
          entity:
            filter:
              - integration: mass
      playlist:
        description: Playlist URI string or list of URIs
        example: "library://radio/1"
        selector:
          text:
            multiline: true
      repeat:
        description: Repeat mode
        example: "(off|one|all)"
        selector:
          select:
            options:
              - "off"
              - "one"
              - "all"
      volume_level:
        description: Volume level
        example: "0.5"
        selector:
          number:
            min: 0
            max: 1
            step: 0.01
    sequence:
      - action: script.briefing_announcement_url
        response_variable: briefing_url
        continue_on_error: true
      - action: script.mass_playlist
        data:
          entity_id: "{{ entity_id }}"
          repeat: "{{ repeat | default('off') }}"
          volume_level: "{{ volume_level | default(0.5) }}"
          shuffle: false
          playlist: >-
            {% if briefing_url is defined and 'url' in briefing_url %}
              {{ [briefing_url.url] + playlist }}
            {% else %}
              {{ playlist }}
            {% endif %}

  mass_playlist:
    mode: parallel
    alias: MASS Playlist
    fields:
      entity_id:
        description: Media Player that will play the playlist
        example: media_player.stue
        selector:
          entity:
            filter:
              - integration: mass
      repeat:
        description: Repeat mode
        example: "(off|one|all)"
        selector:
          select:
            options:
              - "off"
              - "one"
              - "all"
      shuffle:
        description: Shuffle mode
        example: "false"
      playlist:
        description: Playlist URI string or list of URIs
        example: "library://radio/1"
        selector:
          text:
            multiline: true
      enqueue:
        description: "Enqueue mode (default: replace)"
        example: "replace"
        selector:
          select:
            options:
              - "play"
              - "replace"
              - "next"
              - "replace_next"
              - "add"
      volume_level:
        description: Volume level
        example: "0.5"
        selector:
          number:
            min: 0
            max: 1
            step: 0.01
    sequence:
      - action: media_player.volume_set
        target:
          entity_id: "{{ entity_id }}"
        data:
          volume_level: "{{ volume_level | default(0.5) }}"
      - action: media_player.repeat_set
        target:
          entity_id: "{{ entity_id }}"
        data:
          repeat: "{{ repeat | default('off') }}"
      - action: media_player.shuffle_set
        target:
          entity_id: "{{ entity_id }}"
        data:
          shuffle: "{{ shuffle | default(false) }}"
      - action: music_assistant.play_media
        target:
          entity_id: "{{ entity_id }}"
        data:
          enqueue: "{{ enqueue | default('replace') }}"
          media_id: "{{ playlist }}"

  play_dr_p1:
    mode: parallel
    alias: Play DR P1
    sequence:
      - action: script.mass_playlist
        data:
          entity_id: "{{ entity_id }}"
          playlist:
            - DR P1

  play_dr_p3:
    mode: parallel
    alias: Play DR P3
    sequence:
      - action: script.mass_playlist
        data:
          entity_id: "{{ entity_id }}"
          playlist:
            - DR P3

  play_dr_p4:
    mode: parallel
    alias: Play DR P4
    sequence:
      - action: script.mass_playlist
        data:
          entity_id: "{{ entity_id }}"
          playlist:
            - DR P4

  play_somafm_groove_salad:
    mode: parallel
    alias: "Play SomaFM: Groove Salad"
    sequence:
      - action: script.mass_playlist
        data:
          entity_id: "{{ entity_id }}"
          playlist:
            - "SomaFM: Groove Salad"

  play_somafm_poptron:
    mode: parallel
    alias: "Play SomaFM: PopTron"
    sequence:
      - action: script.mass_playlist
        data:
          entity_id: "{{ entity_id }}"
          playlist:
            - "SomaFM: PopTron"

  play_somafm_beat_blender:
    mode: parallel
    alias: "Play SomaFM: Beat Blender"
    sequence:
      - action: script.mass_playlist
        data:
          entity_id: "{{ entity_id }}"
          playlist:
            - "SomaFM: Beat Blender"

  play_somafm_xmas_in_frisko:
    mode: parallel
    alias: "Play SomaFM: Xmas in Frisko"
    sequence:
      - action: script.mass_playlist
        data:
          entity_id: "{{ entity_id }}"
          playlist:
            - "SomaFM: Xmas in Frisko"

  play_chillhop_playlist:
    mode: parallel
    alias: Play Chillhop Playlist
    sequence:
      - action: script.mass_playlist
        data:
          entity_id: "{{ entity_id }}"
          shuffle: true
          playlist:
            - library://playlist/13

  play_hardstyle_playlist:
    mode: parallel
    alias: Play Hardstyle Playlist
    sequence:
      - action: script.mass_playlist
        data:
          entity_id: "{{ entity_id }}"
          shuffle: true
          playlist:
            - library://playlist/8

  play_80s_playlist:
    mode: parallel
    alias: Play 80's Playlist
    sequence:
      - action: script.mass_playlist
        data:
          entity_id: "{{ entity_id }}"
          shuffle: true
          playlist:
            - library://playlist/16

  play_90s_playlist:
    mode: parallel
    alias: Play 90's Playlist
    sequence:
      - action: script.mass_playlist
        data:
          entity_id: "{{ entity_id }}"
          shuffle: true
          playlist:
            - library://playlist/62

  play_supermix_playlist:
    mode: parallel
    alias: Play Supermix Playlist
    sequence:
      - action: script.mass_playlist
        data:
          entity_id: "{{ entity_id }}"
          shuffle: true
          playlist:
            - library://playlist/54

  play_closing_time_playlist:
    mode: parallel
    alias: Play Closing Time Playlist
    sequence:
      - action: script.mass_playlist
        data:
          entity_id: "{{ entity_id }}"
          enqueue: add
          playlist:
            - library://playlist/22

  play_seasonal_playlist:
    mode: parallel
    alias: Play Seasonal Playlist
    sequence:
      - variables:
          playlist: >-
            {% set month = now().month %}
            {% set day = now().day %}
            {% if (month == 1 and day > 1) or month == 2 or month == 3 %}
              {# winter #}
              library://playlist/69
            {% elif month == 4 or month == 5 or month == 6 %}
              {# spring #}
              library://playlist/67
            {% elif month == 7 or month == 8 or month == 9 %}
              {# summer #}
              library://playlist/67
            {% elif month == 10 or month == 11 %}
              {# autumn #}
              library://playlist/66
            {% elif (month == 12 and day >= 28) or (month == 1 and day == 1) %}
              {# new_years #}
              library://playlist/65
            {% elif month == 12 %}
              {# christmas #}
              library://playlist/5
            {% endif %}
      - action: script.mass_playlist
        data:
          entity_id: "{{ entity_id }}"
          shuffle: true
          playlist: "{{ playlist }}"

  playlist_play_media:
    fields:
      entity_id:
        description: Media Player that will play the playlist
        example: media_player.stue
      url:
        description: URL to play
        example: "https://www.youtube.com/watch?v=5qap5aO4i9A"
    sequence:
      - action: media_player.play_media
        data:
          entity_id: "{{ entity_id }}"
          media_content_id: >
            {%- if 'youtube' in url -%}
              {% set param_str = url.split('?')[1] %}
              {% set ns = namespace(params={}) %}
              {% for p in param_str.split('&') %}
                {% set param = p.split('=') %}
                {% set ns.params = dict(ns.params, **{param[0]: param[1]}) %}
              {% endfor %}
              { "app_name": "youtube", "media_id": "{{ ns.params['v'] }}" }
            {%- else -%}
              {{ url }}
            {%- endif -%}
          media_content_type: >
            {%- if 'youtube' in url -%}
              cast
            {%- else -%}
              EPISODE
            {%- endif -%}

  play_plex:
    mode: parallel
    alias: "Play the requested media from Plex"
    fields:
      entity_id:
        description: Media Player that will play the media
        example: media_player.stue
      query:
        description: Query to search for
        example: "The Office"
    sequence:
      - action: media_player.play_media
        continue_on_error: true
        target:
          entity_id: "{{entity_id}}"
        data:
          media_content_type: tvshow
          media_content_id: >-
            plex://{
              "library_name": "TV Shows",
              "show.title": "{{ query }}",
              "episode.unwatched": true,
              "allow_multiple": 1
            }
      - wait_template: "{{ is_state(entity_id, 'playing') }}"
        timeout: 00:00:10
        continue_on_timeout: true
      - if:
          - "{{ not wait.completed }}"
        then:
          - action: media_player.play_media
            continue_on_error: true
            target:
              entity_id: "{{entity_id}}"
            data:
              media_content_type: movie
              media_content_id: >-
                plex://{
                  "library_name": "Movies",
                  "movie.title": "{{ query }}"
                }

  weather_report:
    mode: parallel
    alias: Vejrudsigt
    sequence:
      - action: script.tts_speak
        data:
          cache: false
          entity_id: "{{ entity_id }}"
          message: "{{ states('sensor.dmi_vejr_tts') }} {{ state_attr('sensor.dmi_vejr_tts', 'text') }}"

  briefing:
    mode: parallel
    alias: Rapport
    sequence:
      - action: conversation.process
        data:
          text: >-
            {{ state_attr('sensor.gpt_briefing_prompt', 'prompt') | regex_replace("  +", ' ') }}
          language: DA
          agent_id: 4e0a875b09f8a19a405e1bf3e5c4adac
        response_variable: agent
      - action: script.tts_speak
        data:
          cache: false
          entity_id: "{{ entity_id }}"
          message: >-
            {{ agent.response.speech.plain.speech }}

automation:
  - id: speaker_details_timeout
    alias: Speaker Details Timeout
    mode: parallel
    initial_state: true
    triggers:
      - trigger: state
        entity_id:
          - input_boolean.show_stue_speaker_details
          - input_boolean.show_kokken_speaker_details
          - input_boolean.show_kontor_speaker_details
          - input_boolean.show_sovevaerelse_speaker_details
          - input_boolean.show_badevaerelse_speaker_details
          - input_boolean.show_roam_speaker_details
        to: "on"
        for:
          minutes: 5
    actions:
      - action: input_boolean.turn_off
        target:
          entity_id: "{{ trigger.entity_id }}"

input_boolean:
  show_stue_speaker_details:
    name: Vis Stue Højttaler Detaljer
    icon: mdi:circle-double
    initial: off
  show_kokken_speaker_details:
    name: Vis Køkken Højttaler Detaljer
    icon: mdi:circle-double
    initial: off
  show_kontor_speaker_details:
    name: Vis Kontor Højttaler Detaljer
    icon: mdi:circle-double
    initial: off
  show_sovevaerelse_speaker_details:
    name: Vis Soveværelse Højttaler Detaljer
    icon: mdi:circle-double
    initial: off
  show_badevaerelse_speaker_details:
    name: Vis Badeværelse Højttaler Detaljer
    icon: mdi:circle-double
    initial: off
  show_roam_speaker_details:
    name: Vis Roam Højttaler Detaljer
    icon: mdi:circle-double
    initial: off

template:
  - sensor:
      - name: Morning Briefing
        state: "{{ now() }}"
        attributes:
          briefing: |
            {%- set events = state_attr('sensor.agenda', 'events') | selectattr('routine', 'false') | list -%}
            {{ states('sensor.tts_greeting') }},

            Klokken er {{ states('sensor.time') }}, {{ state_attr('calendar.helligdage', 'message')+', ' if is_state('calendar.helligdage', 'on') }}{{ states('sensor.day_name') }} den {{ now().day }} {{ states('sensor.month_name') }}.

            {% if events -%}
            På kalenderen i dag har du følgende:
            {% for event in events -%}
                {%- set start = (event.start | as_datetime) -%}
                {%- set end = (event.end | as_datetime) -%}
                {%- set start_time = start.strftime('%H:%M') -%}
                {%- set end_time = end.strftime('%H:%M') -%}
                {%- set start_day = start.weekday() -%}
                {%- set end_day = end.weekday() -%}
                {%- if event.current -%}
                  - Lige nu: {{ event.summary }} indtil {{ state_attr('sensor.day_name', 'weekday_names')[end_day] if end_day != start_day }} kl. {{ end_time }}
                {%- else -%}
                  - {{ start_time }} - {{ end_time }}: {{ event.summary }}
                {%- endif -%}
            {% endfor %}
            {% else -%}
            Du har ingen aftaler i kalenderen i dag.
            {% endif %}
            Udenfor er temperaturen {{ states('sensor.ude_temperatur')|replace('.',',') }}° og klimaet er {{ states('sensor.discomfort_index') }}.
            Her er den seneste vejrudsigt:
            {{ state_attr('sensor.dmi_vejr_tts', 'text') }}

      - name: Active Media Player
        state: >
          {% set dev = namespace(active_player='') %}
          {% for item in states.group.all_media.attributes.entity_id if is_state(item, 'playing') %}
            {% if dev.active_player == '' %}
              {% set dev.active_player = item %}
            {% endif %}
          {%- endfor %}

          {{ dev.active_player }}

      - name: Active Media Player Room
        state: "{{ states('sensor.active_media_player').split('.')[1] if states('sensor.active_media_player') not in ['unknown', 'unavailable', '', none] }}"

group:
  all_speakers:
    name: All Speakers
    entities:
      - media_player.kokken
      - media_player.badevaerelse
      - media_player.sovevaerelse
      - media_player.stue
      - media_player.kontor
      - media_player.martin_pc
      - media_player.roam

  kitchen_speakers:
    name: Kitchen Speakers
    entities:
      - media_player.kokken
  bathroom_speakers:
    name: Bathroom Speakers
    entities:
      - media_player.badevaerelse
  bedroom_speakers:
    name: Bedroom Speakers
    entities:
      - media_player.sovevaerelse
  living_room_speakers:
    name: Living Room Speakers
    entities:
      - media_player.stue
  office_speakers:
    name: Office Speakers
    entities:
      - media_player.kontor
      - media_player.martin_pc
  hallway_speakers:
    name: Hallway Speakers
    entities:
      - media_player.roam
  balcony_speakers:
    name: Balcony Speakers
    entities:
      - media_player.roam
  workshop_speakers:
    name: Workshop Speakers
    entities:
      - media_player.roam

  all_media:
    name: All Media
    entities:
      - media_player.badevaerelse
      - media_player.kokken
      - media_player.kontor
      - media_player.roam
      - media_player.sovevaerelse
      - media_player.stue

      - media_player.stue_shield
      - media_player.kontor_shield
      - media_player.sovevaerelse_chromecast

      - media_player.sovevarelse_tv_dlna
