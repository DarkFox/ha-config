script:
  group_mute_toggle:
    mode: parallel
    fields:
      group:
        description: Group to mute or unmute
        example: "stue"
    variables:
      group_members: "{{ state_attr('media_player.'+group, 'group_members') }}"
      mute_states: >-
        {% set group_members = state_attr('media_player.'+group, 'group_members') %}
        [
        {% for member in group_members %}
          {{ state_attr(member, 'is_volume_muted') }}{{ ',' if not loop.last }}
        {% endfor %}
        ]
      any_muted: "{{ mute_states | select('equalto', true) | list | length > 0 }}"
    sequence:
      - service: media_player.volume_mute
        target:
          entity_id: "{{ group_members }}"
        data:
          is_volume_muted: "{{ not any_muted }}"

  join_unjoin_sonos_group:
    mode: parallel
    fields:
      entity_id:
        description: Media Player that will be joined or unjoined
        example: media_player.media_room
      leader_entity_id:
        description: Media Player that the entity will be joined to (optional, current group leader if not given)
        example: media_player.media_room
    variables:
      group_leader_entity: "{{ leader_entity_id or states('sensor.sonos_group_leader') }}"
    sequence:
      - choose:
          - conditions:
              - condition: template
                value_template: "{{ (state_attr(entity_id, 'group_members')|length) > 1 }}"
            sequence:
              - service: media_player.unjoin
                target:
                  entity_id: "{{ entity_id }}"
          - conditions:
              - condition: template
                value_template: "{{ not not group_leader_entity }}"
            sequence:
              - service: media_player.join
                target:
                  entity_id: "{{ group_leader_entity }}"
                data:
                  group_members: >-
                    {{ [entity_id] + state_attr(group_leader_entity, 'group_members') }}

  toggle_mute:
    mode: parallel
    fields:
      entity_id:
        description: Media Player that will be mute or unmuted
        example: media_player.media_room
    sequence:
      - service: media_player.volume_mute
        target:
          entity_id: "{{ entity_id }}"
        data:
          is_volume_muted: "{{ not state_attr(entity_id , 'is_volume_muted') }}"

  play_pause_mute:
    mode: parallel
    description: Play or pause media, if source is TV, mute or unmute
    fields:
      entity_id:
        description: Media Player that will be played or paused
        example: media_player.media_room
    sequence:
      - choose:
          - conditions:
              - condition: template
                value_template: "{{ state_attr(entity_id, 'source') == 'TV' }}"
            sequence:
              - service: script.toggle_mute
                data:
                  entity_id: "{{ entity_id }}"
        default:
          - service: media_player.media_play_pause
            target:
              entity_id: "{{ entity_id }}"

  set_volume_preset:
    mode: parallel
    description: Set volume preset for room
    fields:
      room:
        description: Room to set volume preset. If not given, the preset will be applied to all rooms
        example: "stue"
        selector:
          select:
            options:
              - stue
              - kokken
              - kontor
              - sovevaerelse
              - badevaerelse
              - roam
      preset:
        description: Volume preset (low, medium, high)
        example: "low"
        required: true
        selector:
          select:
            options:
              - low
              - medium
              - high
    variables:
      media_player_presets:
        stue:
          low: 0.15
          medium: 0.4
          high: 0.7
        kokken:
          low: 0.15
          medium: 0.4
          high: 0.7
        kontor:
          low: 0.15
          medium: 0.4
          high: 0.7
        sovevaerelse:
          low: 0.15
          medium: 0.3
          high: 0.6
        badevaerelse:
          low: 0.15
          medium: 0.4
          high: 0.7
        roam:
          low: 0.3
          medium: 0.5
          high: 0.7
    sequence:
      - choose:
          - conditions:
              - condition: template
                value_template: "{{ room in media_player_presets.keys() }}"
            sequence:
              - service: media_player.volume_set
                target:
                  entity_id: "media_player.{{ room }}"
                data:
                  volume_level: "{{ media_player_presets[room][preset] }}"
        default:
          - repeat:
              count: "{{ media_player_presets|length }}"
              sequence:
                - variables:
                    room: "{{ (media_player_presets.keys()|list)[repeat.index-1] }}"
                - service: media_player.volume_set
                  target:
                    entity_id: "media_player.{{ room }}"
                  data:
                    volume_level: "{{ media_player_presets[room][preset] }}"

  morning_briefing:
    sequence:
      # Attempt to get a clothing recommendation from gpt, to be added to the templated briefing. If it fails, use the default
      - service: script.gpt_clothes_recommendation
        response_variable: clothes_recommendation_response
        continue_on_error: true
      - variables:
          clothes_recommendation: |
            {% if clothes_recommendation_response is defined and 'recommendation' in clothes_recommendation_response %}
              {{ clothes_recommendation_response.recommendation }}
            {% else %}
              {% set temp = states('sensor.ude_temperatur')|int -%}
              Der kunne ikke genereres en anbefaling til tøjvalg i dag, men baseret på temperaturen vil jeg anbefale {% if temp < 5 -%}
                varmt tøj, da det er koldt udenfor.
              {% elif temp < 10 -%}
                en varm trøje, da det er køligt udenfor.
              {% elif temp < 15 -%}
                en let jakke, da det er mildt udenfor.
              {% elif temp < 20 -%}
                en t-shirt, da det er lunt udenfor.
              {% elif temp < 25 -%}
                en t-shirt, da det er varmt udenfor.
              {% else -%}
                let tøj, da det er meget varmt udenfor.
              {% endif -%}
            {% endif %}
          briefing: |
            {% from 'utils.jinja' import remove_double_spaces %}
            {{ state_attr('sensor.morning_briefing', 'briefing') }}
            {{ remove_double_spaces(clothes_recommendation | replace('\n', ' ')) }}
            Hav en god dag.
          response: |
            {{ {'briefing': briefing} }}
      - stop: "Return briefing"
        response_variable: "response"

  briefing_announcement:
    mode: parallel
    alias: Briefing Announcement
    fields:
      entity_id:
        description: Media Player that will play the announcement
        example: media_player.media_room
      volume_level:
        description: Volume level
        example: 0.5
    sequence:
      - service: script.morning_briefing
        response_variable: response
      - service: script.tts_speak
        data:
          cache: false
          entity_id: "{{ entity_id }}"
          volume_level: "{{ volume_level | default(0.5) }}"
          message: >-
            {{ response.briefing }}

  briefing_announcement_url:
    mode: parallel
    alias: Briefing Announcement URL
    sequence:
      - service: script.morning_briefing
        response_variable: response
      - service: script.tts_url
        response_variable: chime_tts
        data:
          message: "{{ response.briefing }}"
      - stop: "Return chime_tts"
        response_variable: "chime_tts"

  mass_briefing_playlist:
    mode: parallel
    alias: MASS Briefing playlist
    fields:
      entity_id:
        description: Media Player that will play the playlist
        example: media_player.media_room_mass
        selector:
          entity:
            filter:
              - integration: mass
      playlist:
        description: Playlist URI string or list of URIs
        example: "library://radio/1"
        selector:
          text:
            multiline: true
      repeat:
        description: Repeat mode
        example: "(off|one|all)"
        selector:
          select:
            options:
              - "off"
              - "one"
              - "all"
      volume_level:
        description: Volume level
        example: 0.5
        selector:
          number:
            min: 0
            max: 1
            step: 0.01
    sequence:
      - service: script.briefing_announcement_url
        response_variable: briefing_url
        continue_on_error: true
      - service: script.mass_playlist
        data:
          entity_id: "{{ entity_id }}"
          repeat: "{{ repeat | default('off') }}"
          volume_level: "{{ volume_level | default(0.5) }}"
          shuffle: false
          playlist: >-
            {% if briefing_url is defined and 'url' in briefing_url %}
              {{ [briefing_url.url] + playlist }}
            {% else %}
              {{ playlist }}
            {% endif %}

  mass_playlist:
    mode: parallel
    alias: MASS Playlist
    fields:
      entity_id:
        description: Media Player that will play the playlist
        example: media_player.media_room_mass
        selector:
          entity:
            filter:
              - integration: mass
      repeat:
        description: Repeat mode
        example: "(off|one|all)"
        selector:
          select:
            options:
              - "off"
              - "one"
              - "all"
      shuffle:
        description: Shuffle mode
        example: false
      playlist:
        description: Playlist URI string or list of URIs
        example: "library://radio/1"
        selector:
          text:
            multiline: true
      enqueue:
        description: "Enqueue mode (default: replace)"
        example: "replace"
        selector:
          select:
            options:
              - "play"
              - "replace"
              - "next"
              - "replace_next"
              - "add"
      volume_level:
        description: Volume level
        example: 0.5
        selector:
          number:
            min: 0
            max: 1
            step: 0.01
    sequence:
      - service: media_player.volume_set
        target:
          entity_id: "{{ entity_id }}"
        data:
          volume_level: "{{ volume_level | default(0.5) }}"
      - service: media_player.repeat_set
        target:
          entity_id: "{{ entity_id }}"
        data:
          repeat: "{{ repeat | default('off') }}"
      - service: media_player.shuffle_set
        target:
          entity_id: "{{ entity_id }}"
        data:
          shuffle: "{{ shuffle | default(false) }}"
      - service: mass.play_media
        target:
          entity_id: "{{ entity_id }}"
        data:
          enqueue: "{{ enqueue | default('replace') }}"
          media_id: "{{ playlist }}"

  play_dr_p1:
    mode: parallel
    alias: Play DR P1
    sequence:
      - service: script.mass_playlist
        data:
          entity_id: "{{ entity_id }}"
          playlist:
            - https://drliveradio1.akamaized.net/hls/live/2097651/p1/masterab.m3u8

  play_dr_p3:
    mode: parallel
    alias: Play DR P3
    sequence:
      - service: script.mass_playlist
        data:
          entity_id: "{{ entity_id }}"
          playlist:
            - https://drliveradio1.akamaized.net/hls/live/2097651/p3/masterab.m3u8

  play_dr_p4:
    mode: parallel
    alias: Play DR P4
    sequence:
      - service: script.mass_playlist
        data:
          entity_id: "{{ entity_id }}"
          playlist:
            - https://drliveradio1.akamaized.net/hls/live/2097651/p4kobenhavn/masterab.m3u8

  play_somafm_groove_salad:
    mode: parallel
    alias: "Play SomaFM: Groove Salad"
    sequence:
      - service: script.mass_playlist
        data:
          entity_id: "{{ entity_id }}"
          playlist:
            - library://radio/6

  play_somafm_poptron:
    mode: parallel
    alias: "Play SomaFM: PopTron"
    sequence:
      - service: script.mass_playlist
        data:
          entity_id: "{{ entity_id }}"
          playlist:
            - library://radio/10

  play_somafm_beat_blender:
    mode: parallel
    alias: "Play SomaFM: Beat Blender"
    sequence:
      - service: script.mass_playlist
        data:
          entity_id: "{{ entity_id }}"
          playlist:
            - library://radio/7

  play_somafm_xmas_in_frisko:
    mode: parallel
    alias: "Play SomaFM: Xmas in Frisko"
    sequence:
      - service: script.mass_playlist
        data:
          entity_id: "{{ entity_id }}"
          playlist:
            - library://radio/3

  play_chillhop_playlist:
    mode: parallel
    alias: Play Chillhop Playlist
    sequence:
      - service: script.mass_playlist
        data:
          entity_id: "{{ entity_id }}"
          shuffle: true
          playlist:
            - library://playlist/13

  play_hardstyle_playlist:
    mode: parallel
    alias: Play Hardstyle Playlist
    sequence:
      - service: script.mass_playlist
        data:
          entity_id: "{{ entity_id }}"
          shuffle: true
          playlist:
            - library://playlist/8

  play_80s_playlist:
    mode: parallel
    alias: Play 80's Playlist
    sequence:
      - service: script.mass_playlist
        data:
          entity_id: "{{ entity_id }}"
          shuffle: true
          playlist:
            - library://playlist/16

  play_90s_playlist:
    mode: parallel
    alias: Play 90's Playlist
    sequence:
      - service: script.mass_playlist
        data:
          entity_id: "{{ entity_id }}"
          shuffle: true
          playlist:
            - library://playlist/62

  play_supermix_playlist:
    mode: parallel
    alias: Play Supermix Playlist
    sequence:
      - service: script.mass_playlist
        data:
          entity_id: "{{ entity_id }}"
          shuffle: true
          playlist:
            - library://playlist/54

  play_closing_time_playlist:
    mode: parallel
    alias: Play Closing Time Playlist
    sequence:
      - service: script.mass_playlist
        data:
          entity_id: "{{ entity_id }}"
          enqueue: add
          playlist:
            - library://playlist/22

  play_seasonal_playlist:
    mode: parallel
    alias: Play Seasonal Playlist
    sequence:
      # TODO: Script to select playlist based on season
      # Should have music for: Winter, Spring, Summer, Autumn, Halloween, Christmas, New Years
      - variables:
          playlist: >-
            {% set month = now().month %}
            {% set day = now().day %}
            {% if (month == 1 and day > 1) or month == 2 or month == 3 %}
              {# winter #}
              library://playlist/69
            {% elif month == 4 or month == 5 or month == 6 %}
              {# spring #}
              
            {% elif month == 7 or month == 8 or month == 9 %}
              {# summer #}
              library://playlist/67
            {% elif month == 10 or month == 11 %}
              {# autumn #}
              library://playlist/66
            {% elif (month == 12 and day >= 28) or (month == 1 and day == 1) %}
              {# new_years #}
              library://playlist/65
            {% elif month == 12 %}
              {# christmas #}
              library://playlist/5
            {% endif %}
      - service: script.mass_playlist
        data:
          entity_id: "{{ entity_id }}"
          shuffle: true
          playlist: "{{ playlist }}"

  playlist_play_media:
    fields:
      entity_id:
        description: Media Player that will play the playlist
        example: media_player.media_room
      url:
        description: URL to play
        example: "https://www.youtube.com/watch?v=5qap5aO4i9A"
    sequence:
      - service: media_player.play_media
        data:
          entity_id: "{{ entity_id }}"
          media_content_id: >
            {%- if 'youtube' in url -%}
              {% set param_str = url.split('?')[1] %}
              {% set ns = namespace(params={}) %}
              {% for p in param_str.split('&') %}
                {% set param = p.split('=') %}
                {% set ns.params = dict(ns.params, **{param[0]: param[1]}) %}
              {% endfor %}
              { "app_name": "youtube", "media_id": "{{ ns.params['v'] }}" }
            {%- else -%}
              {{ url }}
            {%- endif -%}
          media_content_type: >
            {%- if 'youtube' in url -%}
              cast
            {%- else -%}
              EPISODE
            {%- endif -%}

  play_plex:
    mode: parallel
    alias: "Play the requested media from Plex"
    fields:
      entity_id:
        description: Media Player that will play the media
        example: media_player.media_room
      query:
        description: Query to search for
        example: "The Office"
    sequence:
      - service: media_player.play_media
        continue_on_error: true
        target:
          entity_id: "{{entity_id}}"
        data:
          media_content_type: tvshow
          media_content_id: >-
            plex://{
              "library_name": "TV Shows",
              "show.title": "{{ query }}",
              "episode.unwatched": true,
              "allow_multiple": 1
            }
      - wait_template: "{{ is_state(entity_id, 'playing') }}"
        timeout: 00:00:10
        continue_on_timeout: true
      - if:
          - "{{ not wait.completed }}"
        then:
          - service: media_player.play_media
            continue_on_error: true
            target:
              entity_id: "{{entity_id}}"
            data:
              media_content_type: movie
              media_content_id: >-
                plex://{
                  "library_name": "Movies",
                  "movie.title": "{{ query }}"
                }

  weather_report:
    mode: parallel
    alias: Vejrudsigt
    sequence:
      - service: script.tts_speak
        data:
          cache: false
          entity_id: "{{ entity_id }}"
          message: "{{ states('sensor.dmi_vejr_tts') }} {{ state_attr('sensor.dmi_vejr_tts', 'text') }}"

  briefing:
    mode: parallel
    alias: Rapport
    sequence:
      - service: conversation.process
        data:
          text: >-
            {{ state_attr('sensor.gpt_briefing_prompt', 'prompt') | regex_replace("  +", ' ') }}
          language: DA
          agent_id: 4e0a875b09f8a19a405e1bf3e5c4adac
        response_variable: agent
      - service: script.tts_speak
        data:
          cache: false
          entity_id: "{{ entity_id }}"
          message: >-
            {{ agent.response.speech.plain.speech }}

automation:
  - id: adjust_speaker_group_volume
    alias: Adjust Speaker Group Volume
    mode: parallel
    initial_state: true
    trigger:
      - platform: state
        entity_id:
          - input_number.stue_group_volume
          - input_number.kokken_group_volume
          - input_number.kontor_group_volume
          - input_number.sovevaerelse_group_volume
          - input_number.badevaerelse_group_volume
          - input_number.roam_group_volume
    action:
      repeat:
        for_each: "{{ state_attr((trigger.entity_id|replace('input_number','media_player')|replace('_group_volume', '')), 'group_members') }}"
        sequence:
          - service: media_player.volume_set
            target:
              entity_id: "{{ repeat.item }}"
            data:
              volume_level: "{{ trigger.to_state.state|int/100 }}"

  - id: speaker_details_timeout
    alias: Speaker Details Timeout
    mode: parallel
    initial_state: true
    trigger:
      - platform: state
        entity_id:
          - input_boolean.show_stue_speaker_details
          - input_boolean.show_kokken_speaker_details
          - input_boolean.show_kontor_speaker_details
          - input_boolean.show_sovevaerelse_speaker_details
          - input_boolean.show_badevaerelse_speaker_details
          - input_boolean.show_roam_speaker_details
        to: "on"
        for:
          minutes: 5
    action:
      - service: input_boolean.turn_off
        target:
          entity_id: "{{ trigger.entity_id }}"

input_boolean:
  show_stue_speaker_details:
    name: Vis Stue Højttaler Detaljer
    icon: mdi:circle-double
    initial: "off"
  show_kokken_speaker_details:
    name: Vis Køkken Højttaler Detaljer
    icon: mdi:circle-double
    initial: "off"
  show_kontor_speaker_details:
    name: Vis Kontor Højttaler Detaljer
    icon: mdi:circle-double
    initial: "off"
  show_sovevaerelse_speaker_details:
    name: Vis Soveværelse Højttaler Detaljer
    icon: mdi:circle-double
    initial: "off"
  show_badevaerelse_speaker_details:
    name: Vis Badeværelse Højttaler Detaljer
    icon: mdi:circle-double
    initial: "off"
  show_roam_speaker_details:
    name: Vis Roam Højttaler Detaljer
    icon: mdi:circle-double
    initial: "off"

input_number:
  stue_group_volume:
    name: Stue Gruppe Lydstyrke
    min: 0
    max: 100
    step: 1
  kokken_group_volume:
    name: Køkken Gruppe Lydstyrke
    min: 0
    max: 100
    step: 1
  kontor_group_volume:
    name: Kontor Gruppe Lydstyrke
    min: 0
    max: 100
    step: 1
  sovevaerelse_group_volume:
    name: Sovevaerelse Gruppe Lydstyrke
    min: 0
    max: 100
    step: 1
  badevaerelse_group_volume:
    name: Badevaerelse Gruppe Lydstyrke
    min: 0
    max: 100
    step: 1
  roam_group_volume:
    name: Roam Gruppe Lydstyrke
    min: 0
    max: 100
    step: 1

template:
  - binary_sensor:
      - name: Stue Group Leader
        state: >-
          {% set entity = 'media_player.stue' %}
          {% set group_members = state_attr(entity, 'group_members') %}
          {% if (group_members|length) > 1 %}
            {{ group_members[0] == entity }}
          {% else %}
            {{ is_state(entity, 'playing') }}
          {% endif %}

      - name: Køkken Group Leader
        state: >-
          {% set entity = 'media_player.kokken' %}
          {% set group_members = state_attr(entity, 'group_members') %}
          {% if (group_members|length) > 1 %}
            {{ group_members[0] == entity }}
          {% else %}
            {{ is_state(entity, 'playing') }}
          {% endif %}

      - name: Kontor Group Leader
        state: >-
          {% set entity = 'media_player.kontor' %}
          {% set group_members = state_attr(entity, 'group_members') %}
          {% if (group_members|length) > 1 %}
            {{ group_members[0] == entity }}
          {% else %}
            {{ is_state(entity, 'playing') }}
          {% endif %}

      - name: Sovevaerelse Group Leader
        state: >-
          {% set entity = 'media_player.sovevaerelse' %}
          {% set group_members = state_attr(entity, 'group_members') %}
          {% if (group_members|length) > 1 %}
            {{ group_members[0] == entity }}
          {% else %}
            {{ is_state(entity, 'playing') }}
          {% endif %}

      - name: Badevaerelse Group Leader
        state: >-
          {% set entity = 'media_player.badevaerelse' %}
          {% set group_members = state_attr(entity, 'group_members') %}
          {% if (group_members|length) > 1 %}
            {{ group_members[0] == entity }}
          {% else %}
            {{ is_state(entity, 'playing') }}
          {% endif %}

      - name: Roam Group Leader
        state: >-
          {% set entity = 'media_player.roam' %}
          {% set group_members = state_attr(entity, 'group_members') %}
          {% if (group_members|length) > 1 %}
            {{ group_members[0] == entity }}
          {% else %}
            {{ is_state(entity, 'playing') }}
          {% endif %}

  - sensor:
      - name: Morning Briefing
        state: "{{ now() }}"
        attributes:
          briefing: |
            {{ states('sensor.tts_greeting') }},

            Klokken er {{ states('sensor.time') }}, {{ state_attr('calendar.helligdage', 'message')+', ' if is_state('calendar.helligdage', 'on') }}{{ states('sensor.day_name') }} den {{ now().day }} {{ states('sensor.month_name') }}.

            {% if state_attr('sensor.agenda', 'events') -%}
            På kalenderen i dag har du følgende:
            {% for event in state_attr('sensor.agenda', 'events') -%}
              - {{ (event.start | as_datetime).strftime('%H:%M') }} - {{ (event.end | as_datetime).strftime('%H:%M') }}: {{ event.summary }}
            {% endfor %}
            {% else -%}
            Du har ingen aftaler i kalenderen i dag.
            {% endif %}
            {% if is_state('sensor.season', 'summer') -%}
            Udenfor er temperaturen {{ states('sensor.ude_temperatur')|replace('.',',') }}°, og Humidex indikerer: {{ state_translated('sensor.ude_humidex_perception') }}.
            {% else -%}
            Udenfor er temperaturen {{ states('sensor.ude_temperatur') | replace('.',',') }}°C, og Thoms discomfort perception indikerer: {{ state_translated('sensor.ude_thoms_discomfort_perception') }}.
            {% endif %}
            Her er den seneste vejrudsigt:
            {{ state_attr('sensor.dmi_vejr_tts', 'text') }}

      - name: Sonos Group Leader
        state: >-
          {% set entity = 'group.sonos_group_leaders' %}
          {% set group_members = state_attr(entity, 'entity_id') %}
          {% set ns = namespace(grouped=[],playing=[]) %}
          {% for entity_id in group_members %}
            {% set media_player_entity_id = 'media_player.'+entity_id|replace('binary_sensor.', '')|replace('_group_leader','') %}
            {% if is_state(entity_id, 'on') %}
              {% set ns.grouped = ns.grouped + [media_player_entity_id] %}
            {% endif %}
          {% endfor %}
          {% for media_player_entity_id in ns.grouped %}
            {% if is_state(media_player_entity_id, 'playing') %}
              {% set ns.playing = ns.playing + [media_player_entity_id] %}
            {% endif %}
          {% endfor %}
          {% if ns.playing|length > 0 or ns.grouped|length > 0 %}
            {{ ns.playing[0] if (ns.playing|length) > 0 else ns.grouped[0] }}
          {% endif %}

      - name: Sonos Group Leader Room
        state: "{{ states('sensor.sonos_group_leader').split('.')[1] if states('sensor.sonos_group_leader') not in ['unknown', 'unavailable', '', none] }}"

      - name: Stue Speaker Lead By
        state: >-
          {% set entity = 'media_player.stue' %}
          {% set group_members = state_attr(entity, 'group_members') %}
          {{ group_members[0] }}

      - name: Køkken Speaker Lead By
        state: >-
          {% set entity = 'media_player.kokken' %}
          {% set group_members = state_attr(entity, 'group_members') %}
          {{ group_members[0] }}

      - name: Kontor Speaker Lead By
        state: >-
          {% set entity = 'media_player.kontor' %}
          {% set group_members = state_attr(entity, 'group_members') %}
          {{ group_members[0] }}

      - name: Sovevaerelse Speaker Lead By
        state: >-
          {% set entity = 'media_player.sovevaerelse' %}
          {% set group_members = state_attr(entity, 'group_members') %}
          {{ group_members[0] }}

      - name: Badevaerelse Speaker Lead By
        state: >-
          {% set entity = 'media_player.badevaerelse' %}
          {% set group_members = state_attr(entity, 'group_members') %}
          {{ group_members[0] }}

      - name: Roam Speaker Lead By
        state: >-
          {% set entity = 'media_player.roam' %}
          {% set group_members = state_attr(entity, 'group_members') %}
          {{ group_members[0] }}

      - name: Stue Speaker Group State
        state: >-
          {%- set room = 'stue' -%}
          {%- if is_state('binary_sensor.'+room+'_group_leader', 'on') -%}
            leader
          {%- elif not is_state('sensor.'+room+'_speaker_lead_by', 'media_player.'+room) -%}
            member
          {%- else -%}
            solo
          {%- endif %} - {{ states('sensor.'+room+'_speaker_lead_by') }}

      - name: Køkken Speaker Group State
        state: >-
          {%- set room = 'kokken' -%}
          {%- if is_state('binary_sensor.'+room+'_group_leader', 'on') -%}
            leader
          {%- elif not is_state('sensor.'+room+'_speaker_lead_by', 'media_player.'+room) -%}
            member
          {%- else -%}
            solo
          {%- endif %} - {{ states('sensor.'+room+'_speaker_lead_by') }}

      - name: Kontor Speaker Group State
        state: >-
          {%- set room = 'kontor' -%}
          {%- if is_state('binary_sensor.'+room+'_group_leader', 'on') -%}
            leader
          {%- elif not is_state('sensor.'+room+'_speaker_lead_by', 'media_player.'+room) -%}
            member
          {%- else -%}
            solo
          {%- endif %} - {{ states('sensor.'+room+'_speaker_lead_by') }}

      - name: Sovevaerelse Speaker Group State
        state: >-
          {%- set room = 'sovevaerelse' -%}
          {%- if is_state('binary_sensor.'+room+'_group_leader', 'on') -%}
            leader
          {%- elif not is_state('sensor.'+room+'_speaker_lead_by', 'media_player.'+room) -%}
            member
          {%- else -%}
            solo
          {%- endif %} - {{ states('sensor.'+room+'_speaker_lead_by') }}

      - name: Badevaerelse Speaker Group State
        state: >-
          {%- set room = 'badevaerelse' -%}
          {%- if is_state('binary_sensor.'+room+'_group_leader', 'on') -%}
            leader
          {%- elif not is_state('sensor.'+room+'_speaker_lead_by', 'media_player.'+room) -%}
            member
          {%- else -%}
            solo
          {%- endif %} - {{ states('sensor.'+room+'_speaker_lead_by') }}

      - name: Roam Speaker Group State
        state: >-
          {%- set room = 'roam' -%}
          {%- if is_state('binary_sensor.'+room+'_group_leader', 'on') -%}
            leader
          {%- elif not is_state('sensor.'+room+'_speaker_lead_by', 'media_player.'+room) -%}
            member
          {%- else -%}
            solo
          {%- endif %} - {{ states('sensor.'+room+'_speaker_lead_by') }}

      - name: Active Media Player
        state: >
          {% set dev = namespace(active_player='') %}
          {% for item in states.group.all_media.attributes.entity_id if is_state(item, 'playing') %}
            {% if dev.active_player == '' %}
              {% set dev.active_player = item %}
            {% endif %}
          {%- endfor %}

          {{ dev.active_player }}

      - name: Active Media Player Room
        state: "{{ states('sensor.active_media_player').split('.')[1] if states('sensor.active_media_player') not in ['unknown', 'unavailable', '', none] }}"

      - name: Stue Speaker Entity Picture
        state: "ok"
        attributes:
          entity_picture: >-
            {% if is_state_attr('media_player.stue', 'source', 'TV') %}
              {{ state_attr('media_player.stue_shield_adb', 'entity_picture') }}
            {% else %}
              {{ state_attr('media_player.stue', 'entity_picture') }}
            {% endif %}

      - name: Kontor Speaker Entity Picture
        state: "ok"
        attributes:
          entity_picture: >-
            {% if is_state_attr('media_player.kontor', 'source', 'TV') %}
              {{ state_attr('media_player.kontor_shield_adb', 'entity_picture') }}
            {% else %}
              {{ state_attr('media_player.kontor', 'entity_picture') }}
            {% endif %}

group:
  all_speakers:
    - media_player.kokken
    - media_player.badevaerelse
    - media_player.sovevaerelse
    - media_player.stue
    - media_player.kontor
    - media_player.martin_pc
    - media_player.roam

  kitchen_speakers:
    - media_player.kokken
  bathroom_speakers:
    - media_player.badevaerelse
  bedroom_speakers:
    - media_player.sovevaerelse
  living_room_speakers:
    - media_player.stue
  office_speakers:
    - media_player.kontor
    - media_player.martin_pc
  hallway_speakers:
    - media_player.roam
  balcony_speakers:
    - media_player.roam
  workshop_speakers:
    - media_player.roam

  sonos_group_leaders:
    entities:
      - binary_sensor.badevaerelse_group_leader
      - binary_sensor.kokken_group_leader
      - binary_sensor.kontor_group_leader
      - binary_sensor.roam_group_leader
      - binary_sensor.sovevaerelse_group_leader
      - binary_sensor.stue_group_leader
  sonos:
    name: Sonos Højttalere
    entities:
      - media_player.badevaerelse
      - media_player.kokken
      - media_player.kontor
      - media_player.roam
      - media_player.sovevaerelse
      - media_player.stue
  all_media:
    name: All Media
    entities:
      - media_player.badevaerelse
      - media_player.kokken
      - media_player.kontor
      - media_player.roam
      - media_player.sovevaerelse
      - media_player.stue

      - media_player.stue_shield
      - media_player.kontor_shield
      - media_player.sovevaerelse_chromecast

      - media_player.sovevaerelse_tv_dlna
