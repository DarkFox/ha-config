input_select:
  martin_status:
    name: Martin Status
    options:
      - Snart hjemme
      - Hjemme
      - Lige ankommet
      - Lige gået
      - Væk
      - Udvidet væk

proximity:
  martin_to_home:
    zone: home
    devices:
      - device_tracker.arbejdstelefon
      - device_tracker.google_maps_102040676821115196041
    unit_of_measurement: m
    tolerance: 100

  martin_to_rsr:
    zone: rsr
    devices:
      - device_tracker.arbejdstelefon
      - device_tracker.google_maps_102040676821115196041
    unit_of_measurement: m
    tolerance: 100

  martin_to_rsh:
    zone: rsh
    devices:
      - device_tracker.arbejdstelefon
      - device_tracker.google_maps_102040676821115196041
    unit_of_measurement: m
    tolerance: 100

sensor:
  - platform: template
    sensors:
      martin_next_scheduled_destination:
        friendly_name: "Next Scheduled Destination"
        value_template: "{{ state_attr('calendar.personlig', 'location') }}"
      martin_next_scheduled_at:
        friendly_name: "Next Scheduled at"
        value_template: "{{ (strptime(state_attr('calendar.personlig', 'start_time'), '%Y-%m-%d %H:%M:%S')).isoformat() if state_attr('calendar.personlig', 'location') else '' }}"
        device_class: timestamp
      time_to_leave_next_scheduled:
        value_template: "{{ ((strptime(state_attr('calendar.personlig', 'start_time'), '%Y-%m-%d %H:%M:%S') - timedelta(minutes=states('sensor.martin_til_destination')|int+15))|as_local).isoformat() if state_attr('calendar.personlig', 'location') else '' }}"
        device_class: timestamp
      martin_to_home_dir_of_travel:
        friendly_name: "Direction of Travel to Home"
        value_template: "{{ state_attr('proximity.martin_to_home', 'dir_of_travel') }}"
      martin_to_home_distance_change:
        friendly_name: "Distance change to Home"
        value_template: "{{ state_attr('sensor.proximity_martin_to_home_stats', 'change') }}"
        unit_of_measurement: "m"
      martin_to_work_distance_change:
        friendly_name: "Distance change to Work"
        value_template: >-
          {% if is_state('sensor.next_work_at', 'rsr') %}
            {{ state_attr('sensor.proximity_martin_to_rsr_stats', 'change') }}
          {% else %}
            {{ state_attr('sensor.proximity_martin_to_rsh_stats', 'change') }}
          {% endif %}
        unit_of_measurement: "m"

  - platform: derivative
    name: martin_to_home_distance_change_derivative
    source: sensor.martin_to_home_distance_change

  - platform: derivative
    name: martin_to_home_proximity_derivative
    source: proximity.martin_to_home

  - platform: statistics
    name: proximity_martin_to_home_stats
    entity_id: proximity.martin_to_home
    state_characteristic: mean
    max_age:
      minutes: 5

binary_sensor:
  - platform: template
    sensors:
      martin_home_soon:
        friendly_name: "Martin Snart hjemme"
        value_template: >
          {{
            states('proximity.martin_to_home')|float < 1500
            or
            (
              states('sensor.martin_to_home_distance_change')|float * 4
            ) + states('proximity.martin_to_home')|float < 0
          }}

      martin_presence:
        friendly_name: "Martin Presence"
        device_class: presence
        value_template: >-
          {{ 
            is_state('device_tracker.google_maps_102040676821115196041', 'home')
            or is_state('device_tracker.arbejdstelefon', 'home')
            or "Pærevangen" in states('sensor.arbejdstelefon_geokodet_placering')
            or ((is_state('binary_sensor.activity_last10', 'on') and states('proximity.martin_to_home')|int < 2000 ))
            or is_state('input_select.latest_motion', 'Bedroom')
          }}

      martin_presence_delayed:
        friendly_name: "Martin Presence - Delayed"
        device_class: presence
        value_template: >-
          {{ is_state('binary_sensor.martin_presence', 'on') }}
        delay_off:
          minutes: 10
      martin_presence_extended:
        friendly_name: "Martin Presence - Extended Away"
        device_class: presence
        value_template: >-
          {{ is_state('binary_sensor.martin_presence', 'on') }}
        delay_off:
          hours: 24
      martin_next_scheduled_destination_active:
        value_template: >-
          {%- set martin_next_scheduled_at = strptime(states('sensor.martin_next_scheduled_at'), '%Y-%m-%dT%H:%M:%S%z') -%}
          {%- if martin_next_scheduled_at != 'unavailable' -%}
            {{ martin_next_scheduled_at - timedelta(hours=12) < now() }}
          {%- else -%}
            False
          {%- endif -%}

      martin_next_scheduled_destination_leave_soon:
        value_template: >-
          {%- set time_to_leave_next_scheduled = strptime(states('sensor.time_to_leave_next_scheduled'), '%Y-%m-%dT%H:%M:%S%z') -%}
          {%- if time_to_leave_next_scheduled != 'unavailable' -%}
            {{ time_to_leave_next_scheduled - timedelta(minutes=30) < now() }}
          {%- else -%}
            False
          {%- endif -%}

automation:
  - alias: "Commute - Update sensors before commute"
    initial_state: true
    trigger:
      - platform: time_pattern
        minutes: "/5"
    condition:
      - condition: state
        entity_id: binary_sensor.commute_soon
        state: "on"
    action:
      - service: homeassistant.update_entity
        target:
          entity_id: sensor.hjem_til_rsr
      - service: homeassistant.update_entity
        target:
          entity_id: sensor.hjem_til_rsh

  - alias: "Commute - Update sensors outside commute time"
    initial_state: true
    trigger:
      - platform: time_pattern
        minutes: "/20"
    condition:
      - condition: state
        entity_id: binary_sensor.commute_soon
        state: "off"
    action:
      - service: homeassistant.update_entity
        target:
          entity_id: sensor.hjem_til_rsr
      - service: homeassistant.update_entity
        target:
          entity_id: sensor.hjem_til_rsh

  - alias: "Next destination - Update sensors with high frequency when close to leave time"
    initial_state: true
    trigger:
      - platform: time_pattern
        minutes: "/5"
    condition:
      - condition: state
        entity_id: binary_sensor.martin_next_scheduled_destination_leave_soon
        state: "on"
    action:
      - service: homeassistant.update_entity
        target:
          entity_id: sensor.martin_til_destination

  - alias: "Next destination - Update sensors slowly 12 hours before"
    initial_state: true
    trigger:
      - platform: time_pattern
        minutes: "/20"
    condition:
      - condition: state
        entity_id: binary_sensor.martin_next_scheduled_destination_active
        state: "on"
    action:
      - service: homeassistant.update_entity
        target:
          entity_id: sensor.martin_til_destination
#   ## Notifications ##
#   - alias: presence notification
#     trigger:
#       - platform: state
#         entity_id: binary_sensor.martin_presence
#         from: "on"
#         to: "off"
#       - platform: state
#         entity_id: binary_sensor.martin_presence
#         from: "off"
#         to: "on"
#     action:
#       - service: script.debug_notification
#         data_template:
#           message: "Presence: {{ states('binary_sensor.martin_presence') }}"
#           title: "Presence"

#   - alias: home soon notification
#     trigger:
#       - platform: state
#         entity_id: binary_sensor.martin_home_soon
#         from: "on"
#         to: "off"
#       - platform: state
#         entity_id: binary_sensor.martin_home_soon
#         from: "off"
#         to: "on"
#     action:
#       - service: script.debug_notification
#         data_template:
#           message: "Home Soon: {{ states('binary_sensor.martin_home_soon') }}"
#           title: "Home Soon"
