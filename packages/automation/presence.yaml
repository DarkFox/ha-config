input_select:
  martin_state:
    name: Martin State
    options:
      - home_soon
      - just_arrived
      - home
      - leaving
      - just_left
      - away
      - away_long

input_datetime:
  martin_state_changed:
    name: Martin State Changed
    has_date: true
    has_time: true

template:
  - sensor:
      - name: "Martin State Changed Minutes Ago"
        state: "{{ (as_timestamp(now()) - as_timestamp(states('input_datetime.martin_state_changed'))) / 60 }}"
        unit_of_measurement: "min"
        icon: mdi:clock-time-eight-outline

sensor:
  - platform: template
    sensors:
      martin_to_home_dir_of_travel:
        friendly_name: "Direction of Travel to Home"
        value_template: "{{ states('sensor.home_martin_direction_of_travel') }}"
      martin_to_home_distance_change:
        friendly_name: "Distance change to Home"
        value_template: "{{ state_attr('sensor.proximity_martin_to_home_stats', 'change') }}"
        unit_of_measurement: "m"
      martin_to_work_distance_change:
        friendly_name: "Distance change to Work"
        value_template: >-
          {{ state_attr('sensor.proximity_martin_to_rsh_stats', 'change') }}
        unit_of_measurement: "m"

  - platform: derivative
    name: martin_to_home_distance_change_derivative
    source: sensor.martin_to_home_distance_change

  - platform: derivative
    name: martin_to_home_proximity_derivative
    source: sensor.home_martin_distance

  - platform: statistics
    name: proximity_martin_to_home_stats
    entity_id: sensor.home_martin_distance
    state_characteristic: mean
    sampling_size: 20
    max_age:
      minutes: 5

binary_sensor:
  - platform: template
    sensors:
      martin_home_soon:
        friendly_name: "Martin Home Soon"
        value_template: >
          {{
            states('sensor.home_martin_distance')|float < 1500
            or
            (
              states('sensor.home_martin_distance')|float < 10000
              and
              (states('sensor.martin_to_home_distance_change')|float(0.0) * 4) + states('sensor.home_martin_distance')|float < 0
            )
          }}

      martin_presence:
        friendly_name: "Martin Presence"
        device_class: presence
        value_template: >-
          {{ 
            is_state('person.martin', 'home')
            or is_state('device_tracker.darkphone', 'home')
            or "PÃ¦revangen" in states('sensor.darkphone_geocoded_location')
            or ((is_state('binary_sensor.activity_last10', 'on') and states('sensor.home_martin_distance')|int < 2000 ))
            or (states('input_select.sleep_state') in ['in bed', 'sleeping', 'paused', 'alarm', 'waking'] and is_state('input_select.latest_motion', 'Bedroom'))
          }}

      martin_presence_delayed:
        friendly_name: "Martin Presence - Delayed"
        device_class: presence
        value_template: >-
          {{ is_state('binary_sensor.martin_presence', 'on') }}
        delay_off:
          minutes: 10
      martin_presence_extended:
        friendly_name: "Martin Presence - Extended Away"
        device_class: presence
        value_template: >-
          {{ is_state('binary_sensor.martin_presence', 'on') }}
        delay_off:
          hours: 24
      martin_next_scheduled_destination_active:
        value_template: >-
          {%- set martin_next_scheduled_at = strptime(states('sensor.martin_next_scheduled_at'), '%Y-%m-%dT%H:%M:%S%z', '-1') -%}
          {%- if martin_next_scheduled_at != '-1' -%}
            {{ martin_next_scheduled_at - timedelta(hours=12) < now() }}
          {%- else -%}
            False
          {%- endif -%}

      martin_next_scheduled_destination_leave_soon:
        value_template: >-
          {%- set time_to_leave_next_scheduled = strptime(states('sensor.next_scheduled_leave_at'), '%Y-%m-%dT%H:%M:%S%z', '-1') -%}
          {%- if time_to_leave_next_scheduled != '-1' -%}
            {{ time_to_leave_next_scheduled - timedelta(minutes=30) < now() }}
          {%- else -%}
            False
          {%- endif -%}

      martin_next_scheduled_destination_time_to_leave:
        value_template: >-
          {%- set time_to_leave_next_scheduled = strptime(states('sensor.next_scheduled_leave_at'), '%Y-%m-%dT%H:%M:%S%z', '-1') -%}
          {%- if time_to_leave_next_scheduled != '-1' -%}
            {{ time_to_leave_next_scheduled < now() }}
          {%- else -%}
            False
          {%- endif -%}

automation:
  #   ## Notifications ##
  - alias: presence notification
    trigger:
      - platform: state
        entity_id: binary_sensor.martin_presence
        from: "on"
        to: "off"
      - platform: state
        entity_id: binary_sensor.martin_presence
        from: "off"
        to: "on"
    action:
      - service: script.debug_notification
        data:
          message: "Presence: {{ states('binary_sensor.martin_presence') }}"
          title: "Presence"

  - alias: home soon notification
    trigger:
      - platform: state
        entity_id: binary_sensor.martin_home_soon
        from: "on"
        to: "off"
      - platform: state
        entity_id: binary_sensor.martin_home_soon
        from: "off"
        to: "on"
    action:
      - service: script.debug_notification
        data:
          message: "Home Soon: {{ states('binary_sensor.martin_home_soon') }}"
          title: "Home Soon"

  # Status State Machine
  #
  # Definitions:
  # home_soon: Arriving home soon (Triggered by binary_sensor.martin_home_soon)
  # just_arrived: Just walked in the door (Triggered by binary_sensor.hoveddor)
  # home: Home for more than 5 minutes (Triggered by being in state 'just_arrived' for more than 5 minutes)
  # leaving: On the way out the door (Triggered by button press, voice command, or the car starting while at home)
  # just_left: Just left (Triggered by being in state 'leaving' for more than 5 minutes)
  # away: Away for more than just a short thing (Triggered by being in state 'just_left' for more than 30 minutes)
  # away_long: Away for more than a day (Triggered by being in state 'away' for more than 18 hours)
  #
  # Use events to trigger transitions, to simplify the state machine automation

  - alias: Martin State Machine
    id: martin_state_machine
    initial_state: true
    mode: queued
    trigger:
      - platform: event
        event_type: martin_state_change
    variables:
      current_state: "{{ states('input_select.martin_state') }}"
      new_state: "{{ trigger.event.data.state }}"
      allowed_transitions:
        home_soon:
          - home
          - away
          - away_long
        just_arrived:
          - home
          - leaving
          - just_left
        home:
          - leaving
          - just_left
        leaving:
          - just_left
          - home
        just_left:
          - home
          - away
        away:
          - away_long
          - home_soon
          - just_arrived
        away_long:
          - home_soon
          - just_arrived
      transition_allowed: "{{ new_state in allowed_transitions[current_state] }}"
    action:
      - choose:
          - conditions:
              - condition: "{{ transition_allowed }}"
            sequence:
              - service: input_datetime.set_datetime
                target:
                  entity_id: input_datetime.martin_state_changed
                data:
                  timestamp: "{{ now().isoformat() }}"
              - service: input_select.select_option
                target:
                  entity_id: input_select.martin_state
                data:
                  option: "{{ new_state }}"
          - conditions:
              - condition: "{{ not transition_allowed }}"
            sequence:
              - service: script.debug_notification
                data:
                  message: "Invalid state transition from {{ current_state }} to {{ new_state }}"
                  title: "Martin State: Invalid State Transition"

  # State Machine Triggers #

  # Time based triggers
  - alias: Martin State Machine - Trigger Home
    trigger:
      - platform: numeric_state
        entity_id: sensor.martin_state_changed_minutes_ago
        above: 5
    condition:
      - condition: state
        entity_id: input_select.martin_state
        state: "just_arrived"
    action:
      - event: martin_state_change
        event_data:
          state: home

  - alias: Martin State Machine - Trigger Just Left
    trigger:
      - platform: numeric_state
        entity_id: sensor.martin_state_changed_minutes_ago
        above: 5
    condition:
      - condition: state
        entity_id: input_select.martin_state
        state: "leaving"
    action:
      - event: martin_state_change
        event_data:
          state: just_left

  - alias: Martin State Machine - Trigger Away
    trigger:
      - platform: numeric_state
        entity_id: sensor.martin_state_changed_minutes_ago
        above: 30
    condition:
      - condition: state
        entity_id: input_select.martin_state
        state: "just_left"
    action:
      - event: martin_state_change
        event_data:
          state: away

  - alias: Martin State Machine - Trigger Away Long
    trigger:
      - platform: numeric_state
        entity_id: sensor.martin_state_changed_minutes_ago
        above: 1080
    condition:
      - condition: state
        entity_id: input_select.martin_state
        state: "away"
    action:
      - event: martin_state_change
        event_data:
          state: away_long
