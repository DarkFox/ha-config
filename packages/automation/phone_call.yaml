input_text:
  active_media_player:
  active_media_type:
  work_phone_caller:

input_boolean:
  work_phone_ringing:

automation:
  - alias: Pause Media On Phone Call
    id: pause_media_on_phone_call
    initial_state: true
    trigger:
      - platform: state
        entity_id:
          - sensor.arbejdstelefon_phone_state
          - sensor.darkphone_phone_state
        to:
          - ringing
          - offhook
        from: idle
    condition:
      - condition: state
        entity_id: binary_sensor.martin_presence
        state: "on"
    action:
      - service: script.turn_on
        entity_id: script.pause_all_media

  - alias: Unpause On Phone Call Finished
    id: unpause_media_on_phone_call_finished
    initial_state: true
    trigger:
      - platform: state
        entity_id:
          - sensor.arbejdstelefon_phone_state
          - sensor.darkphone_phone_state
        to: idle
    condition:
      - condition: state
        entity_id: binary_sensor.martin_presence
        state: "on"
    action:
      - service: script.turn_on
        entity_id: script.resume_all_media

  - alias: On Call Ringing While Sleeping
    id: on_call_ringing_while_sleeping
    initial_state: true
    trigger:
      - platform: state
        entity_id: sensor.arbejdstelefon_phone_state
        to: ringing
    condition:
      - condition: state
        entity_id: binary_sensor.martin_presence
        state: "on"
      - condition: state
        entity_id: binary_sensor.on_call
        state: "on"
    action:
      - choose:
          - conditions:
              - condition: state
                entity_id: input_select.sleep_state
                state:
                  - "sleeping"
                  - "smart wake"
            sequence:
              - service: input_select.select_option
                data:
                  entity_id: input_select.sleep_state
                  option: paused
              - event: set_light_profile
                event_data:
                  room: bedroom
                  profile: Night

  - alias: On Call Picked Up
    id: on_call_picked_up
    initial_state: true
    trigger:
      - platform: state
        entity_id: sensor.arbejdstelefon_phone_state
        to: offhook
    condition:
      - condition: state
        entity_id: binary_sensor.martin_presence
        state: "on"
      - condition: state
        entity_id: binary_sensor.on_call
        state: "on"
      - condition: state
        entity_id: input_select.sleep_state
        state:
          - "sleeping"
          - "smart wake"
          - "paused"
    action:
      - event: set_light_profile
        event_data:
          room: bedroom
          profile: Ambient
      - delay:
          seconds: 30
      - condition: state
        entity_id: sensor.arbejdstelefon_phone_state
        state: offhook
      - event: set_light_profile
        event_data:
          room: bedroom
          profile: Dimmed

  - alias: On Call Done
    id: on_call_done
    initial_state: true
    trigger:
      - platform: state
        entity_id: sensor.arbejdstelefon_phone_state
        from: "offhook"
        to: "idle"
        for:
          minutes: 2
      - platform: state
        entity_id: device_tracker.pc074805
        to: "not_home"
        for:
          seconds: 30
    condition:
      - condition: state
        entity_id: binary_sensor.martin_presence
        state: "on"
      - condition: state
        entity_id: binary_sensor.on_call
        state: "on"
      - condition: state
        entity_id: device_tracker.pc074805
        state: "not_home"
      - condition: state
        entity_id: sensor.arbejdstelefon_phone_state
        state: "idle"
    action:
      - choose:
          - conditions:
              - condition: state
                entity_id: input_select.sleep_state
                state:
                  - "paused"
            sequence:
              - event: set_light_profile
                event_data:
                  room: bedroom
                  profile: "Off"
              - service: input_select.select_option
                data:
                  entity_id: input_select.sleep_state
                  option: sleeping

  - alias: On Call Not Picked Up
    id: on_call_not_picked_up
    initial_state: true
    trigger:
      - platform: state
        entity_id: input_boolean.work_phone_ringing
        to: "off"
        for:
          seconds: 5
    condition:
      - condition: state
        entity_id: sensor.arbejdstelefon_phone_state
        state: "idle"
      - condition: state
        entity_id: binary_sensor.martin_presence
        state: "on"
      - condition: state
        entity_id: binary_sensor.on_call
        state: "on"
    action:
      - choose:
          - conditions:
              - condition: state
                entity_id: input_select.sleep_state
                state:
                  - "paused"
            sequence:
              - event: set_light_profile
                event_data:
                  room: bedroom
                  profile: "Off"
              - service: input_select.select_option
                data:
                  entity_id: input_select.sleep_state
                  option: sleeping

  - alias: Work phone caller lookup
    id: work_phone_caller_lookup
    initial_state: true
    trigger:
      - platform: state
        entity_id: input_text.work_phone_caller
    condition:
      - condition: state
        entity_id: sensor.arbejdstelefon_phone_state
        state:
          - "ringing"
          - "offhook"
    action:
      - variables:
          phone_number: "{{ states('input_text.work_phone_caller')[-8:] }}"
      - service: script.puzzel_lookup_caller
        response_variable: caller
        data:
          phone_number: "{{ phone_number }}"
      - choose:
          - conditions:
              - condition: template
                value_template: "{{ caller is not none and caller != {} }}"
            sequence:
              - service: script.notify_caller_info
                data:
                  caller: "{{ caller }}"
        default:
          # If no caller is found, try looking up the number current puzzel caller
          - service: script.puzzel_get_current_request
            response_variable: current_request

          - choose:
              - conditions:
                  - condition: template
                    value_template: |
                      {{
                        current_request is not none
                        and current_request != {}
                        and current_request != ''
                      }}
                sequence:
                  - variables:
                      request_remote_address: "{{ current_request['requestRemoteAddress'][-8:] }}"
                  - choose:
                      - conditions:
                          - condition: template
                            value_template: "{{ request_remote_address != phone_number }}"
                        sequence:
                          - service: script.notify_unknown_caller
                            data:
                              # Split phone number into groups of 2 digits
                              phone_number: "{{ phone_number }}"
                    default:
                      - service: script.puzzel_lookup_caller
                        response_variable: puzzel_caller
                        data:
                          phone_number: "{{ request_remote_address }}"
                      - choose:
                          - conditions:
                              - condition: template
                                value_template: "{{ puzzel_caller is not none and puzzel_caller != {} }}"
                            sequence:
                              - service: script.notify_caller_info
                                data:
                                  caller: "{{ puzzel_caller }}"
                        default:
                          - service: script.notify_unknown_caller
                            data:
                              # Split phone number into groups of 2 digits
                              phone_number: "{{ request_remote_address }}"
            default:
              # Just send phone number to telegram
              - service: script.notify_unknown_caller
                data:
                  phone_number: "{{ phone_number }}"

script:
  notify_unknown_caller:
    alias: "Notify Unknown Caller"
    fields:
      phone_number:
        description: "The phone number of the unknown caller"
    sequence:
      - service: notify.telegram_darkfox
        data:
          message: >-
            Arbejdsopkald fra ukendt nummer: {{ phone_number | string | regex_findall(find='..') | join(' ') }}

  notify_caller_info:
    alias: "Notify Caller Info"
    fields:
      caller:
        description: "The caller object"
    sequence:
      - condition: template
        value_template: "{{ caller is not none and caller != {} }}"

      - variables:
          name: "{{ caller.firstName|trim }} {{ caller.lastName|trim }}"
          title: "{{ caller.title|trim }}"
          organization: "{{ caller.organizationName|trim }}"
          phone: "{{ caller.communicationPoints | selectattr('communicationType', 'equalto', 'Cell') | map(attribute='remoteAddress') | first }}"
          email: "{{ caller.communicationPoints | selectattr('communicationType', 'equalto', 'EMail') | map(attribute='remoteAddress') | first }}"

      - variables:
          formatted_phone: "{{ phone | string | regex_findall(find='..') | join(' ') }}"

      - service: notify.mobile_app_arbejdstelefon
        data:
          title: "{{ name }}"
          message: |
            {{ title }} hos {{ organization }}.
            Tlf: {{ formatted_phone }}
            Email: {{ email }}
          data:
            tag: "puzzel_caller"
            channel: "Puzzel Caller"
            importance: high
            ttl: 0
            priority: high
            persistent: false
            clickAction: noAction
            notification_icon: mdi:phone-classic
      - service: notify.telegram_darkfox
        data:
          message: |
            Arbejdspkald fra {{ name }}
            {{ title }} hos {{ organization }}.
            Tlf: {{ formatted_phone }}
            Email: {{ email }}

  pause_all_media:
    alias: "Sæt afspilning på pause"
    sequence:
      - service: input_text.set_value
        data:
          entity_id: input_text.active_media_player
          value: "{{ states('sensor.active_media_player') }}"
      - service: input_text.set_value
        data:
          entity_id: input_text.active_media_type
          value: "{{ 'file' if state_attr(states('sensor.active_media_player'), 'media_duration') else 'stream' }}"
      - choose:
          - conditions:
              - condition: state
                entity_id: input_text.active_media_type
                state: "file"
            sequence:
              - service: "media_player.media_pause"
                data:
                  entity_id: "{{ states('input_text.active_media_player') }}"
          - conditions:
              - condition: state
                entity_id: input_text.active_media_type
                state: "stream"
            sequence:
              - service: "media_player.volume_mute"
                data:
                  entity_id: "{{ states('input_text.active_media_player') }}"
                  is_volume_muted: true

  resume_all_media:
    alias: "Genoptag afspilning"
    sequence:
      - choose:
          - conditions:
              - condition: state
                entity_id: input_text.active_media_type
                state: "file"
            sequence:
              - service: "media_player.media_play"
                data:
                  entity_id: "{{ states('input_text.active_media_player') }}"
          - conditions:
              - condition: state
                entity_id: input_text.active_media_type
                state: "stream"
            sequence:
              - service: "media_player.volume_mute"
                data:
                  entity_id: "{{ states('input_text.active_media_player') }}"
                  is_volume_muted: false
