input_boolean:
  3d_printer_cooling:

climate:
  - platform: generic_thermostat
    name: 3D Printer
    heater: input_boolean.3d_printer_cooling
    target_sensor: sensor.3d_printer_temperature
    min_temp: 15
    max_temp: 60
    target_temp: 25
    ac_mode: true
    target_temp_step: 1

sensor:
  - platform: min_max
    name: 3d_printer_max_temp
    type: max
    entity_ids:
      - sensor.octoprint_tool_0_temperature
      - sensor.octoprint_bed_temperature

template:
  - binary_sensor:
      - name: 3D Printer Lys
        state: >-
          {{
            is_state('switch.3d_printer_afbryder', 'on')
            or is_state('binary_sensor.3d_printer_skab', 'on')
          }}
  - sensor:
      - name: 3D Printer Materiale
        state: >-
          {% set temp = (states('sensor.octoprint_bed_target')|int) %}
          {% if is_state('switch.3d_printer_afbryder', 'off') %}
            off
          {% elif temp < 15 %}
            none
          {% elif temp >= 15 and temp < 61 %}
            PLA
          {% elif temp >= 61 and temp < 81 %}
            PETG
          {% elif temp >= 81 %}
            ABS
          {% endif %}

automation:
  - id: toggle_3d_printer_light
    alias: Toggle 3D printer light
    initial_state: true
    trigger:
      - platform: state
        entity_id: binary_sensor.3d_printer_lys
        from:
          - "on"
          - "off"
        to:
          - "on"
          - "off"
    action:
      service: "light.turn_{{ states('binary_sensor.3d_printer_lys') }}"
      target:
        entity_id: light.3d_printer_enclosure_light

  - id: 3d_printer_set_thermostat
    alias: 3d Printer Set Thermostat
    initial_state: true
    trigger:
      - platform: state
        entity_id: sensor.3d_printer_materiale
    action:
      - choose:
          - conditions:
              - condition: state
                entity_id: sensor.3d_printer_materiale
                state:
                  - "none"
                  - "PLA"
                  - "PETG"
            sequence:
              - service: scene.apply
                data:
                  entities:
                    climate.3d_printer:
                      state: "cool"
                      temperature: 20
          - conditions:
              - condition: state
                entity_id: sensor.3d_printer_materiale
                state: "ABS"
            sequence:
              - service: scene.apply
                data:
                  entities:
                    climate.3d_printer:
                      state: "cool"
                      temperature: 40
        default:
          - service: climate.turn_off
            target:
              entity_id: climate.3d_printer

  - id: 3d_printer_ventilation_off
    alias: 3d Printer Ventilation Off
    initial_state: true
    trigger:
      - platform: state
        entity_id: climate.3d_printer
        attribute: hvac_action
        to: "off"
    action:
      service: fan.turn_off
      target:
        entity_id:
          - fan.3d_printer_enclosure_ind
          - fan.3d_printer_enclosure_ud

  - id: 3d_printer_ventilation_low
    alias: 3d Printer Ventilation Low
    initial_state: true
    trigger:
      - platform: state
        entity_id: climate.3d_printer
        attribute: hvac_action
        to: "idle"
    action:
      - service: fan.turn_on
        target:
          entity_id:
            - fan.3d_printer_enclosure_ind
            - fan.3d_printer_enclosure_ud
      - service: fan.set_percentage
        target:
          entity_id:
            - fan.3d_printer_enclosure_ind
        data:
          percentage: 5
      - service: fan.set_percentage
        target:
          entity_id:
            - fan.3d_printer_enclosure_ud
        data:
          percentage: 25

  - id: 3d_printer_ventilation_high
    alias: 3d Printer Ventilation High
    initial_state: true
    trigger:
      - platform: state
        entity_id: climate.3d_printer
        attribute: hvac_action
        to: "cooling"
    action:
      - service: fan.turn_on
        target:
          entity_id:
            - fan.3d_printer_enclosure_ind
            - fan.3d_printer_enclosure_ud
      - service: fan.set_percentage
        target:
          entity_id:
            - fan.3d_printer_enclosure_ind
            - fan.3d_printer_enclosure_ud
        data:
          percentage: 100

  - id: 3d_print_status_notification
    alias: 3D Print status notification
    initial_state: true
    trigger:
      - platform: state
        entity_id: sensor.octoprint_current_state
        to: "Printing"
      - platform: time_pattern
        minutes: "/5"
        seconds: "0"
    condition:
      - alias: "Print active"
        condition: state
        entity_id: sensor.octoprint_current_state
        state: "Printing"
    action:
      - service: notify.mobile_app_darkphone
        data:
          title: "3D Print Progress {{ states('sensor.octoprint_print_progress') }}% - {{ states('sensor.octoprint_current_state') }}"
          message: >-
            {% set seconds = states('sensor.octoprint_print_time_left') | int %}
            {% set hours = seconds // 3600 %}
            {% set minutes = (seconds % 3600) // 60 %}
            {% set remaining_seconds = seconds % 60 %}
            Time left: {{ '%02d:%02d:%02d' | format(hours, minutes, remaining_seconds) }}
          data:
            tag: "3d_print_status_notification"
            channel: "3D Printer Status"
            importance: low
            persistent: true
            image: /api/camera_proxy/camera.3d_printer_head

  - id: 3d_print_stopped_notification
    alias: 3D Print stopped notification
    initial_state: true
    trigger:
      - platform: state
        entity_id: sensor.octoprint_current_state
        from: "Printing"
    action:
      - service: notify.mobile_app_darkphone
        data:
          message: "clear_notification"
          data:
            tag: "3d_print_status_notification"
            channel: "3D Printer Status"
      - service: notify.mobile_app_darkphone
        data:
          title: "3D Printer {{ states('sensor.octoprint_current_state') }}"
          message: ""
          data:
            tag: "3d_print_alert_notification"
            channel: "3D Printer Alerts"
            importance: high
            image: /api/camera_proxy/camera.3d_printer
      - service: script.voice_broadcast
        data:
          message: "3D Printer {{ states('sensor.octoprint_current_state') }}"

  - id: 3d_printer_auto_shutdown
    alias: 3d Printer Auto Shutdown
    trigger:
      - platform: state
        entity_id: sensor.octoprint_current_state
        from: "Printing"
        to: "Operational"
        for:
          minutes: 15
    action:
      - service: switch.turn_off
        target:
          entity_id: switch.3d_printer_afbryder
