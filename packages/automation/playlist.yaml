homeassistant:
  customize:
    sensor.playlist_player:
      icon: mdi:cast

input_text:
  playlist_media_position:

input_select:
  playlist:
    name: Playlist
    initial: "==NONE=="
    options:
      - "==NONE=="

  playlist_player:
    name: Destination
    options: &destinations
      - None
      # Chromecast Groups
      - media_player.alle_hojttalere
      - media_player.minis
      # Chromecast video
      - media_player.kokken_chromecast
      - media_player.sovevaerelse_chromecast
      - media_player.stue_shield
      - media_player.kontor_chromecast
      # Chromecast audio/speakers
      - media_player.kokken_soundbar
      - media_player.stue_soundbar
      # Google Assistant/Home
      - media_player.sovevaerelse_mini
      - media_player.kokken_mini
      - media_player.badevaerelse_mini
      - media_player.kontor_mini
      - media_player.stue_mini

binary_sensor:
  - platform: template
    sensors:
      playlist_playing:
        value_template: "{{ not is_state('input_select.playlist', '==NONE==') }}"

sensor:
  - platform: template
    sensors:
      media_path:
        value_template: !secret media_path
      base_url:
        value_template: !secret base_url
      playlist_player:
        friendly_name: Afspiller
        value_template: "{{ state_attr(states('input_select.playlist_player'), 'friendly_name') }}"
      current_room_video_player:
        friendly_name: Rum Video Afspiller
        value_template: >
          {%- set room = states('input_select.latest_motion') -%}
          {%- if room == 'Hallway' -%}
            media_player.kokken_chromecast
          {%- elif room == 'Kitchen' -%}
            media_player.kokken_chromecast
          {%- elif room == 'Bathroom' -%}
            media_player.kokken_chromecast
          {%- elif room == 'Bedroom' -%}
            media_player.sovevaerelse_chromecast
          {%- elif room == 'Living Room' -%}
            media_player.stue_shield
          {%- elif room == 'Office' -%}
            media_player.kontor_chromecast
          {%- else -%}
            unknown
          {%- endif -%}

group:
  playlists:
    name: Playlister
    entities:
      - group.playlists_podcasts
      - group.playlists_audio_streams
      - group.playlists_video_streams

  playlists_podcasts:
    name: Podcasts
    entities:
      - script.playlist_play_daily_tech_news_show
      - script.playlist_play_daily_tech_headlines
      - script.playlist_play_radioavisen
      - script.playlist_play_briefing
      - script.playlist_play_weather_report

  playlists_audio_streams:
    name: Radio
    entities:
      - script.playlist_play_radio_soft
      - script.playlist_play_nova_fm
      - script.playlist_play_dr_p3
      - script.playlist_play_dr_p6_beat
      - script.playlist_play_my_rock
      - script.playlist_play_groove_salad

  playlists_video_streams:
    name: TV
    entities:
      - script.playlist_play_dr1
      - script.playlist_play_dr2
      - script.playlist_play_youtube
      - script.playlist_play_chillhop

script:
  playlist_play_media:
    sequence:
      - service: media_player.play_media
        data:
          entity_id: "{{ entity_id }}"
          media_content_id: >
            {%- if 'youtube' in url -%}
              {% set param_str = url.split('?')[1] %}
              {% set ns = namespace(params={}) %}
              {% for p in param_str.split('&') %}
                {% set param = p.split('=') %}
                {% set ns.params = dict(ns.params, **{param[0]: param[1]}) %}
              {% endfor %}
              { "app_name": "youtube", "media_id": "{{ ns.params['v'] }}" }
            {%- else -%}
              {{ url }}
            {%- endif -%}
          media_content_type: >
            {%- if 'youtube' in url -%}
              cast
            {%- else -%}
              EPISODE
            {%- endif -%}

  weather_report:
    alias: Vejrudsigt
    sequence:
      - service: script.tts_speak
        data:
          cache: false
          media_player_entity_id: "{{ device_entity_id }}"
          message: "{{ states('sensor.dmi_vejr_tts') }} {{ state_attr('sensor.dmi_vejr_tts', 'text') }}"

  briefing:
    alias: Rapport
    sequence:
      - service: homeassistant.update_entity
        data:
          entity_id: sensor.tts_greeting
      - service: script.tts_speak
        data:
          cache: false
          media_player_entity_id: "{{ device_entity_id }}"
          message: >
            {{ states("sensor.tts_greeting") }}. Klokken er {{ states("sensor.time") }}. Vejrudsigt: {{ states("sensor.dmi_vejr") }}.
            {%- if is_state('binary_sensor.workday', 'on') and now().hour < 12 -%}
              S-Tog Linje C:
              {%- if is_state('sensor.s_train_c_status', 'Til tiden') -%}
                {{ ' ' }}KÃ¸rer normalt.
              {%- else -%}
                {{ ' ' }}{{ states('sensor.s_train_c_status') }}.
                {{ states('sensor.s_train_message') }}.
              {%- endif -%}
            {%- endif -%}

  playlist_play_radio_soft:
    alias: Radio Soft
    sequence:
      - service: input_select.set_options
        data:
          entity_id: input_select.playlist
          options:
            - http://live-bauerdk.sharp-stream.com/soft_live.mp3
            - "==END=="
      - service: input_select.select_first
        target:
          entity_id: input_select.playlist

  playlist_play_nova_fm:
    alias: Nova FM
    sequence:
      - service: input_select.set_options
        data:
          entity_id: input_select.playlist
          options:
            - https://live-bauerdk.sharp-stream.com/nova_dk_mp3
            - "==END=="
      - service: input_select.select_first
        target:
          entity_id: input_select.playlist

  playlist_play_dr_p3:
    alias: DR P3
    sequence:
      - service: input_select.set_options
        data:
          entity_id: input_select.playlist
          options:
            - http://live-icy.gss.dr.dk:8000/A/A05H.mp3
            - "==END=="
      - service: input_select.select_first
        target:
          entity_id: input_select.playlist

  playlist_play_dr_p6_beat:
    alias: DR P6 Beat
    sequence:
      - service: input_select.set_options
        data:
          entity_id: input_select.playlist
          options:
            - http://live-icy.gss.dr.dk:8000/A/A29H.mp3
            - "==END=="
      - service: input_select.select_first
        target:
          entity_id: input_select.playlist

  playlist_play_my_rock:
    alias: MyRock
    sequence:
      - service: input_select.set_options
        data:
          entity_id: input_select.playlist
          options:
            - http://live-bauerdk.sharp-stream.com/myrock.mp3
            - "==END=="
      - service: input_select.select_first
        target:
          entity_id: input_select.playlist

  playlist_play_groove_salad:
    alias: Groove Salad
    sequence:
      - service: input_select.set_options
        data:
          entity_id: input_select.playlist
          options:
            - http://ice1.somafm.com/groovesalad-128-aac
            - "==END=="
      - service: input_select.select_first
        target:
          entity_id: input_select.playlist

  playlist_play_dr1:
    alias: DR1
    sequence:
      - service: input_select.set_options
        data:
          entity_id: input_select.playlist
          options:
            - https://dr01-lh.akamaihd.net/i/live/dr01_0@147054/master.m3u8
            - "==END=="
      - service: input_select.select_first
        target:
          entity_id: input_select.playlist

  playlist_play_dr2:
    alias: DR2
    sequence:
      - service: input_select.set_options
        data:
          entity_id: input_select.playlist
          options:
            - https://dr02-lh.akamaihd.net/i/live/dr02_0@147055/master.m3u8
            - "==END=="
      - service: input_select.select_first
        target:
          entity_id: input_select.playlist

  playlist_play_chillhop:
    alias: Chillhop
    sequence:
      - service: input_select.set_options
        data:
          entity_id: input_select.playlist
          options:
            - https://www.youtube.com/watch?v=7NOSDKb0HlU
            - "==END=="
      - service: input_select.select_first
        target:
          entity_id: input_select.playlist

  playlist_play_youtube:
    alias: Youtube Watch Later
    sequence:
      - service: homeassistant.update_entity
        data:
          entity_id: sensor.youtube_watch_later
      - wait_template: "{{ as_timestamp(now()) - states('sensor.youtube_watch_later')|float < 10 }}"
        timeout: "00:01:00"
      - service: python_script.input_select_set_options
        entity_id: input_select.playlist
        data:
          data_source: sensor.youtube_watch_later.list
          append_items:
            - "==END=="
      - service: input_select.select_first
        target:
          entity_id: input_select.playlist

  playlist_play_daily_tech_news_show:
    alias: Daily Tech News Show
    sequence:
      - service: input_select.set_options
        data:
          entity_id: input_select.playlist
          options:
            - "{{ states.sensor.podcast_daily_tech_news_show.state }}"
            - "==END=="
      - service: input_select.select_first
        target:
          entity_id: input_select.playlist

  playlist_play_daily_tech_headlines:
    alias: Daily Tech Headlines
    sequence:
      - service: input_select.set_options
        data:
          entity_id: input_select.playlist
          options:
            - "{{ states.sensor.podcast_daily_tech_headlines.state }}"
            - "==END=="
      - service: input_select.select_first
        target:
          entity_id: input_select.playlist

  playlist_play_radioavisen:
    alias: Radioavisen
    sequence:
      - service: input_select.set_options
        data:
          entity_id: input_select.playlist
          options:
            - "{{ states.sensor.podcast_radioavisen.state }}"
            - "==END=="
      - service: input_select.select_first
        target:
          entity_id: input_select.playlist

  playlist_play_briefing:
    alias: Status
    sequence:
      - service: input_select.set_options
        data:
          entity_id: input_select.playlist
          options:
            - ==SCRIPT==briefing
            - "==END=="
      - service: input_select.select_first
        target:
          entity_id: input_select.playlist

  playlist_play_weather_report:
    alias: Status
    sequence:
      - service: input_select.set_options
        data:
          entity_id: input_select.playlist
          options:
            - ==SCRIPT==weather_report
            - "==END=="
      - service: input_select.select_first
        target:
          entity_id: input_select.playlist

  playlist_delay_10:
    alias: 10 second playlist delay
    sequence:
      - delay:
          seconds: 10
      - service: input_select.select_next
        data:
          entity_id: input_select.playlist
  playlist_delay_30:
    alias: 30 second playlist delay
    sequence:
      - delay:
          seconds: 30
      - service: input_select.select_next
        data:
          entity_id: input_select.playlist
  playlist_next:
    sequence:
      - service: input_select.select_next
        data:
          entity_id: input_select.playlist
  playlist_previous:
    sequence:
      - service: input_select.select_previous
        data:
          entity_id: input_select.playlist
  playlist_end:
    sequence:
      - service: input_select.select_option
        data:
          entity_id: input_select.playlist
          option: "==END=="

automation:
  - alias: close_popup_on_playlist_select
    initial_state: true
    trigger:
      - platform: state
        entity_id:
          - input_select.playlist
          - input_select.playlist_player
    action:
      - service: browser_mod.close_popup

  - alias: playlist_start
    initial_state: true
    trigger:
      platform: state
      entity_id: input_select.playlist
    condition:
      condition: and
      conditions:
        - condition: template
          value_template: "{{ not is_state('input_select.playlist_player', 'None') }}"
        - condition: template
          value_template: "{{ not is_state('input_select.playlist', '==NONE==') }}"
        - condition: template
          value_template: "{{ not is_state('input_select.playlist', '==END==') }}"
        - condition: template
          value_template: "{{ not states('input_select.playlist') | truncate(10,true, '') == '==SCRIPT==' }}"
        - condition: template
          value_template: "{{ not states('input_select.playlist') | truncate(10,true, '') == '==SWITCH==' }}"
    action:
      service: script.turn_on
      target:
        entity_id: script.playlist_play_media
      data:
        variables:
          entity_id: "{{ states('input_select.playlist_player') }}"
          url: "{{ states('input_select.playlist') }}"

  - alias: playlist_script
    initial_state: true
    trigger:
      platform: state
      entity_id: input_select.playlist
    condition:
      condition: and
      conditions:
        - condition: template
          value_template: "{{ states('input_select.playlist') | truncate(10,true, '') == '==SCRIPT==' }}"
        - condition: template
          value_template: "{{ not is_state('input_select.playlist_player', 'None') }}"
        - condition: template
          value_template: "{{ not is_state('input_select.playlist', '==NONE==') }}"
        - condition: template
          value_template: "{{ not is_state('input_select.playlist', '==END==') }}"
        - condition: template
          value_template: "{{ not states('input_select.playlist') | truncate(10,true, '') == '==SWITCH==' }}"
    action:
      service: script.turn_on
      data:
        entity_id: "script.{{ states('input_select.playlist') | replace('==SCRIPT==', '') }}"
        variables:
          device_entity_id: "{{ states('input_select.playlist_player') }}"

  - alias: playlist_switch_player
    initial_state: true
    trigger:
      platform: state
      entity_id: input_select.playlist
    condition:
      condition: and
      conditions:
        - condition: template
          value_template: "{{ states('input_select.playlist') | truncate(10,true, '') == '==SWITCH==' }}"
        - condition: template
          value_template: "{{ not is_state('input_select.playlist_player', 'None') }}"
        - condition: template
          value_template: "{{ not is_state('input_select.playlist', '==NONE==') }}"
        - condition: template
          value_template: "{{ not is_state('input_select.playlist', '==END==') }}"
        - condition: template
          value_template: "{{ not states('input_select.playlist') | truncate(10,true, '') == '==SCRIPT==' }}"
    action:
      - service: input_select.select_option
        data:
          entity_id: input_select.playlist_player
          option: "media_player.{{ states('input_select.playlist') | replace('==SWITCH==', '') }}"
      - delay:
          seconds: 1
      - service: input_select.select_next
        data:
          entity_id: input_select.playlist

  - alias: playlist_auto_next
    initial_state: true
    trigger:
      - platform: state
        entity_id:
          # Chromecast Groups
          - media_player.alle_hojttalere
          - media_player.minis
          # Chromecast video
          - media_player.kokken_chromecast
          - media_player.sovevaerelse_chromecast
          - media_player.stue_shield
          - media_player.kontor_chromecast
          # Chromecast audio/speakers
          - media_player.kokken_soundbar
          - media_player.stue_soundbar
          # Google Assistant/Home
          - media_player.sovevaerelse_mini
          - media_player.kokken_mini
          - media_player.badevaerelse_mini
          - media_player.kontor_mini
          - media_player.stue_mini
        from: "playing"
        to: "idle"
        for:
          seconds: 1
    condition:
      condition: and
      conditions:
        - condition: template
          value_template: "{{ is_state('input_select.playlist_player', trigger.entity_id) }}"
        - condition: template
          value_template: "{{ is_state(states.input_select.playlist_player.state, 'idle') }}"
        - condition: template
          value_template: "{{ not is_state('input_select.playlist_player', 'None') }}"
        - condition: template
          value_template: "{{ not is_state('input_select.playlist', '==NONE==') }}"
        - condition: template
          value_template: "{{ not is_state('input_select.playlist', '==END==') }}"
    action:
      service: input_select.select_next
      data:
        entity_id: input_select.playlist

  - alias: playlist_restore_media_position
    initial_state: true
    trigger:
      - platform: state
        entity_id: input_select.playlist_player
    condition:
      condition: and
      conditions:
        - condition: template
          value_template: "{{ is_state(trigger.from_state.state, 'playing') }}"
        - condition: template
          value_template: "{{ not is_state('input_select.playlist_player', 'None') }}"
        - condition: template
          value_template: "{{ not is_state('input_select.playlist', '==NONE==') }}"
        - condition: template
          value_template: "{{ not is_state('input_select.playlist', '==END==') }}"
    action:
      - service: input_text.set_value
        data:
          entity_id: input_text.playlist_media_position
          value: "{{ state_attr(trigger.from_state.state, 'media_position') }}"
      - service: script.turn_on
        target:
          entity_id: script.playlist_play_media
        data:
          variables:
            entity_id: "{{ states('input_select.playlist_player') }}"
            url: "{{ states('input_select.playlist') }}"
      - delay:
          seconds: 2
      - service: media_player.media_seek
        data:
          entity_id: "{{ trigger.to_state.state }}"
          seek_position: "{{ states('input_text.playlist_media_position') }}"

  - alias: playlist_end
    initial_state: true
    trigger:
      - platform: state
        entity_id: input_select.playlist
        to: "==END=="
    action:
      - service: input_select.set_options
        data:
          entity_id: input_select.playlist
          options:
            - "==NONE=="
      - service: media_player.media_stop
        data:
          entity_id: "{{ states.input_select.playlist_player.state }}"
      - service: media_player.turn_off
        data:
          entity_id: "{{ states.input_select.playlist_player.state }}"
