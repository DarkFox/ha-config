homeassistant:
  customize:
    binary_sensor.projector_power:
      hidden: true

binary_sensor:
  - platform: mqtt
    name: projector_power
    state_topic: "projector/available"
    device_class: light

automation:
  - alias: kitchen_tv_chromecast
    trigger:
      platform: template
      value_template: >
        {% if is_state('media_player.kitchen_chromecast', 'off')
        or is_state('media_player.kitchen_chromecast', 'unavailable')
        or states.media_player.kitchen_chromecast == 'unknown' %}
          false
        {% else %}
          true
        {% endif %}
    action:
      service: switch.turn_on
      data:
        entity_id: switch.kitchen_tv

  - alias: kitchen_tv_chromecast_off
    trigger:
      platform: state
      entity_id: media_player.kitchen_chromecast
      to: 'off'
      for:
        seconds: 30
    action:
      service: switch.turn_off
      data:
        entity_id: switch.kitchen_tv

  - alias: projector_chromecast
    trigger:
      platform: template
      value_template: >
        {% if is_state('media_player.projector_chromecast', 'off')
        or is_state('media_player.projector_chromecast', 'unavailable')
        or states.media_player.projector_chromecast == 'unknown' %}
          false
        {% else %}
          true
        {% endif %}
    condition:
      condition: and
      conditions:
        - condition: state
          entity_id: binary_sensor.home_assistant_loaded
          state: 'on'
        - condition: state
          entity_id: media_player.projector
          state: 'off'
    action:
      service: media_player.turn_on
      data:
        entity_id: media_player.projector

  # - alias: projector_chromecast
  #   trigger:
  #     platform: template
  #     value_template: >
  #       {% if is_state('media_player.projector_chromecast', 'off')
  #       or is_state('media_player.projector_chromecast', 'unavailable')
  #       or states.media_player.projector_chromecast == 'unknown' %}
  #         false
  #       {% else %}
  #         true
  #       {% endif %}
  #   condition:
  #     condition: and
  #     conditions:
  #       - condition: state
  #         entity_id: binary_sensor.home_assistant_loaded
  #         state: 'on'
  #       - condition: state
  #         entity_id: media_player.projector
  #         state: 'off'
  #   action:
  #     service: media_player.turn_on
  #     data:
  #       entity_id: media_player.projector
  #
  # - alias: projector_chromecast_off
  #   trigger:
  #     platform: state
  #     entity_id: media_player.projector_chromecast
  #     to: 'off'
  #     for:
  #       seconds: 30
  #   condition:
  #     condition: and
  #     conditions:
  #       - condition: state
  #         entity_id: binary_sensor.home_assistant_loaded
  #         state: 'on'
  #       - condition: state
  #         entity_id: media_player.projector
  #         state: 'on'
  #   action:
  #     service: media_player.turn_off
  #     data:
  #       entity_id: media_player.projector



# script:
#   projector_soundbar_chromecast_audio:
#     alias: "Switch to Chromecast Audio on projector soundbar"
#     sequence:
#       - service: switch.turn_on
#         entity_id: switch.projector_soundbar_power
#       - delay:
#           seconds: 10
#       - service: switch.turn_on
#         entity_id: switch.projector_soundbar_input_analog
#       - delay:
#           seconds: 1
#       - service: script.turn_on
#         entity_id: script.fix_soundbar_lag
