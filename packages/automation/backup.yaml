automation:
  - alias: Automatic Backup
    initial_state: true
    trigger:
      platform: time
      at: "03:00:00"
    condition:
      condition: time
      weekday:
        - sun
        - wed
    action:
      - service: auto_backup.backup
        data:
          name: "Automated Backup {{ now().strftime('%Y-%m-%d') }}"
          keep_days: 7
          exclude:
            folders:
              - media

  - alias: "Notify Backup Started"
    trigger:
      platform: event
      event_type: auto_backup.backup_start
    action:
      service: persistent_notification.create
      data:
        title: "Backup Started."
        message: |-
          Name: {{ trigger.event.data.name }}

  - alias: "Notify Backup Completed"
    trigger:
      platform: event
      event_type: auto_backup.backup_successful
    action:
      - service: persistent_notification.create
        data:
          title: "Backup Complete. Syncing to Dropbox"
          message: |-
            Name: {{ trigger.event.data.name }}
            Slug: {{ trigger.event.data.slug }}
      - service: hassio.addon_stdin
        data:
          addon: 782428ea_dropbox-backup
          input:
            command: upload

  - alias: "Notify Backup Failure"
    trigger:
      platform: event
      event_type: auto_backup.backup_failed
    action:
      service: persistent_notification.create
      data:
        title: "Backup Failed."
        message: |-
          Name: {{ trigger.event.data.name }}
          Error: {{ trigger.event.data.error }}
