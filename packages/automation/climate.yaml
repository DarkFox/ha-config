input_number:
  target_temperature:
    min: 15
    max: 25
    step: 1
    unit_of_measurement: °C

binary_sensor:
  - platform: template
    sensors:
      thermostats_night_mode:
        friendly_name: "Termostater Nattilstand"
        value_template: >
          {{
            states('input_select.sleep_state') in ['bedtime', 'in bed', 'sleeping', 'paused']
          }}

      thermostats_on:
        friendly_name: "Termostater Tændt"
        value_template: >
          {{ (is_state('binary_sensor.martin_presence_delayed', 'on') or is_state('binary_sensor.martin_home_soon', 'on')) }}

      check_climate:
        value_template: >
          {{
            (
              is_state('climate.badevaerelse', 'off')
              or states('sensor.bathroom_min_temp')|int(-1) == state_attr('climate.badevaerelse', 'temperature')|int(-1)
            )
            and (
              is_state('climate.kontor', 'off')
              or states('sensor.office_min_temp')|int(-1) == state_attr('climate.kontor', 'temperature')|int(-1)
            )
            and (
              is_state('climate.stue', 'off')
              or states('sensor.living_room_min_temp')|int(-1) == state_attr('climate.stue', 'temperature')|int(-1)
            )
            and (
              is_state('climate.vaerksted', 'off')
              or states('sensor.workshop_min_temp')|int(-1) == state_attr('climate.vaerksted', 'temperature')|int(-1)
            )
            and (
              is_state('climate.sovevaerelse', 'off')
              or states('sensor.bedroom_min_temp')|int(-1) == state_attr('climate.sovevaerelse', 'temperature')|int(-1)
            )
          }}

sensor:
  - platform: history_stats
    name: Badeværelse Termostat Varme seneste 24 timer
    entity_id: sensor.badevaerelse_thermostat_heating
    state: "1"
    type: time
    end: "{{ now() }}"
    duration:
      hours: 24

  - platform: history_stats
    name: Kontor Termostat Varme seneste 24 timer
    entity_id: sensor.kontor_thermostat_heating
    state: "1"
    type: time
    end: "{{ now() }}"
    duration:
      hours: 2

  - platform: history_stats
    name: Stue Termostat Varme seneste 24 timer
    entity_id: sensor.stue_thermostat_heating
    state: "1"
    type: time
    end: "{{ now() }}"
    duration:
      hours: 2

  - platform: history_stats
    name: Værksted Termostat Varme seneste 24 timer
    entity_id: sensor.vaerksted_thermostat_heating
    state: "1"
    type: time
    end: "{{ now() }}"
    duration:
      hours: 2

  - platform: history_stats
    name: Soveværelse Termostat Varme seneste 24 timer
    entity_id: sensor.sovevaerelse_thermostat_heating
    state: "1"
    type: time
    end: "{{ now() }}"
    duration:
      hours: 24

  # Seneste uge
  - platform: history_stats
    name: Badeværelse Termostat Varme seneste 7 dage
    entity_id: sensor.badevaerelse_thermostat_heating
    state: "1"
    type: time
    end: "{{ now() }}"
    duration:
      days: 7

  - platform: history_stats
    name: Kontor Termostat Varme seneste 7 dage
    entity_id: sensor.kontor_thermostat_heating
    state: "1"
    type: time
    end: "{{ now() }}"
    duration:
      days: 7

  - platform: history_stats
    name: Stue Termostat Varme seneste 7 dage
    entity_id: sensor.stue_thermostat_heating
    state: "1"
    type: time
    end: "{{ now() }}"
    duration:
      days: 7

  - platform: history_stats
    name: Værksted Termostat Varme seneste 7 dage
    entity_id: sensor.vaerksted_thermostat_heating
    state: "1"
    type: time
    end: "{{ now() }}"
    duration:
      days: 7

  - platform: history_stats
    name: Soveværelse Termostat Varme seneste 7 dage
    entity_id: sensor.sovevaerelse_thermostat_heating
    state: "1"
    type: time
    end: "{{ now() }}"
    duration:
      days: 7

template:
  - sensor:
      - name: Bathroom Max Temp
        unique_id: 25b964e9-4274-441a-ba2a-9962b5a82252
        device_class: temperature
        unit_of_measurement: "°C"
        state: "26"
      - name: Bathroom Min Temp
        unique_id: 9922173d-731b-4647-bbb4-dab5b708a2a9
        device_class: temperature
        unit_of_measurement: "°C"
        state: >
          {%- set target = states('input_number.target_temperature')|int(19) -%}
          {%- set thermostats_on = is_state('binary_sensor.thermostats_on', 'on') -%}
          {%- set extended = is_state('binary_sensor.martin_presence_extended', 'on') -%}
          {%- set summer = is_state('sensor.season', 'summer') -%}
          {%- set night = is_state('binary_sensor.thermostats_night_mode', 'on') -%}
          {%- set sleeping = is_state('input_select.sleep_state', 'sleeping') -%}
          {%- set active = is_state('binary_sensor.bathroom_activity', 'on') -%}
          {%- if thermostats_on %}
            {{ target + 2 }}
          {%- elif extended %}
            {{ target - 5 }}
          {%- else %}
            15
          {%- endif %}

      - name: Office Max Temp
        unique_id: beac3cfe-ae20-4c3c-aeea-c62aaab0aeff
        device_class: temperature
        unit_of_measurement: "°C"
        state: "26"
      - name: Office Min Temp
        unique_id: ccffa886-44a3-4230-b9e2-96a4e08be426
        device_class: temperature
        unit_of_measurement: "°C"
        state: >
          {%- set target = states('input_number.target_temperature')|int(19) -%}
          {%- set thermostats_on = is_state('binary_sensor.thermostats_on', 'on') -%}
          {%- set extended = is_state('binary_sensor.martin_presence_extended', 'on') -%}
          {%- set summer = is_state('sensor.season', 'summer') -%}
          {%- set night = is_state('binary_sensor.thermostats_night_mode', 'on') -%}
          {%- set sleeping = is_state('input_select.sleep_state', 'sleeping') -%}
          {%- set active = is_state('binary_sensor.office_activity', 'on')
                          or is_state('binary_sensor.martin_pc_activity', 'on')
                          or is_state('binary_sensor.vagtskema_wfh', 'on') -%}
          {%- if thermostats_on %}
            {{ target if active else target - 2 }}
          {%- elif extended %}
            {{ target - 5 }}
          {%- else %}
            15
          {%- endif %}

      - name: Living Room Max Temp
        unique_id: 6bab8a01-e798-42a2-8952-c59426717d0d
        device_class: temperature
        unit_of_measurement: "°C"
        state: "26"
      - name: Living Room Min Temp
        unique_id: 32f90697-d9d0-4db5-afd8-740680806c4c
        device_class: temperature
        unit_of_measurement: "°C"
        state: >
          {%- set target = states('input_number.target_temperature')|int(19) -%}
          {%- set thermostats_on = is_state('binary_sensor.thermostats_on', 'on') -%}
          {%- set extended = is_state('binary_sensor.martin_presence_extended', 'on') -%}
          {%- set summer = is_state('sensor.season', 'summer') -%}
          {%- set night = is_state('binary_sensor.thermostats_night_mode', 'on') -%}
          {%- set sleeping = is_state('input_select.sleep_state', 'sleeping') -%}
          {%- set active = is_state('binary_sensor.living_room_activity', 'on') -%}
          {%- if thermostats_on %}
            {{ target if active else target - 2 }}
          {%- elif extended %}
            {{ target - 5 }}
          {%- else %}
            15
          {%- endif %}

      - name: Workshop Max Temp
        unique_id: d649bee4-dff5-4ed4-b189-7972049714c1
        device_class: temperature
        unit_of_measurement: "°C"
        state: "26"
      - name: Workshop Min Temp
        unique_id: d66fb3aa-797a-49c5-bf0e-9792cd65cfbe
        device_class: temperature
        unit_of_measurement: "°C"
        state: >
          {%- set target = states('input_number.target_temperature')|int(19) -%}
          {%- set thermostats_on = is_state('binary_sensor.thermostats_on', 'on') -%}
          {%- set extended = is_state('binary_sensor.martin_presence_extended', 'on') -%}
          {%- set summer = is_state('sensor.season', 'summer') -%}
          {%- set night = is_state('binary_sensor.thermostats_night_mode', 'on') -%}
          {%- set sleeping = is_state('input_select.sleep_state', 'sleeping') -%}
          {%- set active = is_state('binary_sensor.workshop_activity', 'on') -%}
          {%- if thermostats_on %}
            {{ target if active else target - 2 }}
          {%- elif extended %}
            {{ target - 5 }}
          {%- else %}
            15
          {%- endif %}

      - name: Bedroom Max Temp
        unique_id: 470d236b-4f51-42c7-af39-51a219387249
        device_class: temperature
        unit_of_measurement: "°C"
        state: >
          {%- if sleeping %}
            {{ target }}
          {%- elif night %}
            {{ target - 3 }}
          {%- else %}
            26
          {%- endif %}
      - name: Bedroom Min Temp
        unique_id: 32a288a3-de4b-4c2c-8ff3-b8e1723553f9
        device_class: temperature
        unit_of_measurement: "°C"
        state: >
          {%- set target = states('input_number.target_temperature')|int(19) -%}
          {%- set thermostats_on = is_state('binary_sensor.thermostats_on', 'on') -%}
          {%- set extended = is_state('binary_sensor.martin_presence_extended', 'on') -%}
          {%- set summer = is_state('sensor.season', 'summer') -%}
          {%- set night = is_state('binary_sensor.thermostats_night_mode', 'on') -%}
          {%- set sleeping = is_state('input_select.sleep_state', 'sleeping') -%}
          {%- set active = is_state('binary_sensor.bedroom_activity', 'on') -%}
          {%- if thermostats_on %}
            {{ 17 if summer or night or not active else target }}
          {%- elif extended %}
            {{ target - 5 }}
          {%- else %}
            15
          {%- endif %}

automation:
  # Restart Tado stick if temperature changes don't take.
  - alias: Check Climate
    initial_state: true
    mode: single
    triggers:
      - trigger: event
        event_type: check_climate
    actions:
      - delay:
          seconds: 30
      - choose:
          - conditions:
              - condition: state
                entity_id: binary_sensor.check_climate
                state: "off"
            sequence:
              - action: automation.trigger
                entity_id: automation.restart_tado

  - alias: Termostat Badeværelse
    initial_state: true
    mode: queued
    triggers:
      - trigger: state
        entity_id:
          - sensor.bathroom_min_temp
      - trigger: event
        event_type: set_climate
    actions:
      - action: climate.turn_on
        data:
          entity_id: climate.badevaerelse
      - delay:
          seconds: 1
      - condition: "{{ is_state('climate.badevaerelse', 'heat') }}"
      - action: climate.set_temperature
        data:
          entity_id: climate.badevaerelse
          temperature: "{{ states('sensor.bathroom_min_temp') }}"
      - event: check_climate

  - alias: Termostat Kontor
    initial_state: true
    mode: queued
    triggers:
      - trigger: state
        entity_id: sensor.office_min_temp
      - trigger: state
        entity_id: binary_sensor.kontor_altandor
      - trigger: event
        event_type: set_climate
    actions:
      - action: >
          {%- if is_state('binary_sensor.kontor_altandor', 'off') -%}
            climate.turn_on
          {%- else -%}
            climate.turn_off
          {%- endif -%}
        data:
          entity_id: climate.kontor
      - delay:
          seconds: 1
      - condition: "{{ is_state('climate.kontor', 'heat') }}"
      - action: climate.set_temperature
        data:
          entity_id: climate.kontor
          temperature: "{{ states('sensor.office_min_temp') }}"
      - event: check_climate

  - alias: Termostat Stue
    initial_state: true
    mode: queued
    triggers:
      - trigger: state
        entity_id: sensor.living_room_min_temp
      - trigger: state
        entity_id: binary_sensor.stue_altandor
      - trigger: event
        event_type: set_climate
    actions:
      - action: >
          {%- if is_state('binary_sensor.stue_altandor', 'off') -%}
            climate.turn_on
          {%- else -%}
            climate.turn_off
          {%- endif -%}
        data:
          entity_id: climate.stue
      - delay:
          seconds: 1
      - condition: "{{ is_state('climate.stue', 'heat') }}"
      - action: climate.set_temperature
        data:
          entity_id: climate.stue
          temperature: "{{ states('sensor.living_room_min_temp') }}"
      - event: check_climate

  - alias: Termostat Værksted
    initial_state: true
    mode: queued
    triggers:
      - trigger: state
        entity_id: sensor.workshop_min_temp
      - trigger: state
        entity_id: binary_sensor.varksted_vindue
      - trigger: event
        event_type: set_climate
    actions:
      - action: >
          {%- if is_state('binary_sensor.stue_altandor', 'off') -%}
            climate.turn_on
          {%- else -%}
            climate.turn_off
          {%- endif -%}
        data:
          entity_id: climate.vaerksted
      - delay:
          seconds: 1
      - condition: "{{ is_state('climate.vaerksted', 'heat') }}"
      - action: climate.set_temperature
        data:
          entity_id: climate.vaerksted
          temperature: "{{ states('sensor.workshop_min_temp') }}"
      - event: check_climate

  - alias: Termostat Soveværelse
    initial_state: true
    mode: queued
    triggers:
      - trigger: state
        entity_id: sensor.bedroom_min_temp
      - trigger: state
        entity_id: binary_sensor.sovevarelse_altandor
      - trigger: event
        event_type: set_climate
    actions:
      - action: >
          {%- if is_state('binary_sensor.sovevarelse_altandor', 'off') -%}
            climate.turn_on
          {%- else -%}
            climate.turn_off
          {%- endif -%}
        data:
          entity_id: climate.sovevaerelse
      - delay:
          seconds: 1
      - condition: "{{ is_state('climate.sovevaerelse', 'heat') }}"
      - action: climate.set_temperature
        data:
          entity_id: climate.sovevaerelse
          temperature: "{{ states('sensor.bedroom_min_temp') }}"
      - event: check_climate
