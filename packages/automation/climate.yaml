input_number:
  target_temperature:
    min: 15
    max: 25
    step: 1
    unit_of_measurement: °C

binary_sensor:
  - platform: template
    sensors:
      thermostats_night_mode:
        friendly_name: "Termostater Nattilstand"
        value_template: >
          {{
            states('input_select.sleep_state') in ['bedtime', 'in bed', 'sleeping', 'paused']
          }}

      thermostats_on:
        friendly_name: "Termostater Tændt"
        value_template: >
          {{ (is_state('binary_sensor.martin_presence_delayed', 'on') or is_state('binary_sensor.martin_home_soon', 'on')) }}

      check_climate:
        value_template: >
          {{
            (
              is_state('climate.badevaerelse', 'off')
              or states('sensor.bathroom_min_temp')|int(-1) == state_attr('climate.badevaerelse', 'temperature')|int(-1)
            )
            and (
              is_state('climate.kontor', 'off')
              or states('sensor.office_min_temp')|int(-1) == state_attr('climate.kontor', 'temperature')|int(-1)
            )
            and (
              is_state('climate.stue', 'off')
              or states('sensor.living_room_min_temp')|int(-1) == state_attr('climate.stue', 'temperature')|int(-1)
            )
            and (
              is_state('climate.vaerksted', 'off')
              or states('sensor.workshop_min_temp')|int(-1) == state_attr('climate.vaerksted', 'temperature')|int(-1)
            )
            and (
              is_state('climate.sovevaerelse', 'off')
              or states('sensor.bedroom_min_temp')|int(-1) == state_attr('climate.sovevaerelse', 'temperature')|int(-1)
            )
          }}

sensor:
  - platform: template
    sensors:
      bathroom_max_temp:
        value_template: "26"
      bathroom_min_temp:
        value_template: >
          {%- set on = is_state('binary_sensor.thermostats_on', 'on') -%}
          {%- set night = is_state('binary_sensor.thermostats_night_mode', 'on') -%}
          {%- set extended = is_state('binary_sensor.martin_presence_extended', 'on') -%}
          {%- set active = is_state('binary_sensor.bathroom_activity', 'on') -%}
          {% if on %}
            {% if active %}
              {{ states('input_number.target_temperature')|int }}
            {% else %}
              {{ states('input_number.target_temperature')|int - 2 }}
            {% endif %}
          {% elif extended %}
            {{ states('input_number.target_temperature')|int - 5 }}
          {% else %}
            15
          {% endif %}

      office_max_temp:
        value_template: "26"
      office_min_temp:
        value_template: >
          {%- set on = is_state('binary_sensor.thermostats_on', 'on') -%}
          {%- set night = is_state('binary_sensor.thermostats_night_mode', 'on') -%}
          {%- set summer = is_state('sensor.season', 'summer') -%}
          {%- set extended = is_state('binary_sensor.martin_presence_extended', 'on') -%}
          {%- set active = is_state('binary_sensor.office_activity', 'on')
              or is_state('binary_sensor.martin_pc_activity', 'on')
              or is_state('binary_sensor.working_from_home', 'on') -%}
          {% if on %}
            {% if active %}
              {{ states('input_number.target_temperature')|int }}
            {% else %}
              {{ states('input_number.target_temperature')|int- 2 }}
            {% endif %}
          {% elif extended %}
            {{ states('input_number.target_temperature')|int - 5 }}
          {% else %}
            15
          {% endif %}

      living_room_max_temp:
        value_template: "26"
      living_room_min_temp:
        value_template: >
          {%- set on = is_state('binary_sensor.thermostats_on', 'on') -%}
          {%- set night = is_state('binary_sensor.thermostats_night_mode', 'on') -%}
          {%- set summer = is_state('sensor.season', 'summer') -%}
          {%- set extended = is_state('binary_sensor.martin_presence_extended', 'on') -%}
          {%- set active = is_state('binary_sensor.living_room_activity', 'on') -%}
          {% if on %}
            {% if active %}
              {{ states('input_number.target_temperature')|int }}
            {% else %}
              {{ states('input_number.target_temperature')|int - 2 }}
            {% endif %}
          {% elif extended %}
            {{ states('input_number.target_temperature')|int -5 }}
          {% else %}
            15
          {% endif %}

      workshop_max_temp:
        value_template: "26"
      workshop_min_temp:
        value_template: >
          {%- set on = is_state('binary_sensor.thermostats_on', 'on') -%}
          {%- set night = is_state('binary_sensor.thermostats_night_mode', 'on') -%}
          {%- set summer = is_state('sensor.season', 'summer') -%}
          {%- set extended = is_state('binary_sensor.martin_presence_extended', 'on') -%}
          {%- set active = is_state('binary_sensor.workshop_activity', 'on') -%}
          {% if on %}
            {% if active %}
              {{ states('input_number.target_temperature')|int }}
            {% else %}
              {{ states('input_number.target_temperature')|int - 2 }}
            {% endif %}
          {% elif extended %}
            {{ states('input_number.target_temperature')|int - 5 }}
          {% else %}
            15
          {% endif %}

      bedroom_max_temp:
        value_template: >
          {%- set night = is_state('binary_sensor.thermostats_night_mode', 'on') -%}
          {%- set sleeping = is_state('input_select.sleep_state', 'sleeping') -%}
          {% if sleeping %}
            {{ states('input_number.target_temperature')|int }}
          {% elif night %}
            {{ states('input_number.target_temperature')|int - 3 }}
          {% else %}
            26
          {% endif %}
      bedroom_min_temp:
        value_template: >
          {%- set on = is_state('binary_sensor.thermostats_on', 'on') -%}
          {%- set night = is_state('binary_sensor.thermostats_night_mode', 'on') -%}
          {%- set summer = is_state('sensor.season', 'summer') -%}
          {%- set extended = is_state('binary_sensor.martin_presence_extended', 'on') -%}
          {% if on %}
            {% if summer or night %}
              {{ states('input_number.target_temperature')|int - 2 }}
            {% else %}
              {{ states('input_number.target_temperature')|int }}
            {% endif %}
          {% elif extended %}
            {{ states('input_number.target_temperature')|int - 5 }}
          {% else %}
            15
          {% endif %}

automation:
  - id: turn_on_living_room_fan
    alias: Turn On Living Room Fan
    trigger:
      - platform: state
        entity_id: climate.stue
        attribute: hvac_action
        to: heating
        for:
          seconds: 30
    action:
      - service: switch.turn_on
        target:
          entity_id: switch.stue_blaeser

  - id: turn_off_living_room_fan
    alias: Turn Off Living Room Fan
    trigger:
      - platform: state
        entity_id: climate.stue
        attribute: hvac_action
        from: heating
        to: idle
        for:
          minutes: 5
    action:
      - service: switch.turn_off
        target:
          entity_id: switch.stue_blaeser

  # Restart Tado stick if temperature changes don't take.
  - alias: Check Climate
    initial_state: true
    mode: single
    trigger:
      - platform: event
        event_type: check_climate
    action:
      - delay:
          seconds: 30
      - choose:
          - conditions:
              - condition: state
                entity_id: binary_sensor.check_climate
                state: "off"
            sequence:
              - service: script.turn_on
                entity_id: script.restart_tado

  - alias: Termostat Badeværelse
    initial_state: true
    mode: queued
    trigger:
      - platform: state
        entity_id:
          - sensor.bathroom_min_temp
      - platform: event
        event_type: set_climate
    action:
      - service: climate.turn_on
        data:
          entity_id: climate.badevaerelse
      - delay:
          seconds: 1
      - condition: "{{ is_state('climate.badevaerelse', 'on') }}"
      - service: climate.set_temperature
        data:
          entity_id: climate.badevaerelse
          temperature: "{{ states('sensor.bathroom_min_temp') }}"
      - event: check_climate

  - alias: Termostat Kontor
    initial_state: true
    mode: queued
    trigger:
      - platform: state
        entity_id: sensor.office_min_temp
      - platform: state
        entity_id: binary_sensor.kontor_altandor
      - platform: event
        event_type: set_climate
    action:
      - service: >
          {%- if is_state('binary_sensor.kontor_altandor', 'off') -%}
            climate.turn_on
          {%- else -%}
            climate.turn_off
          {%- endif -%}
        data:
          entity_id: climate.kontor
      - delay:
          seconds: 1
      - condition: "{{ is_state('climate.kontor', 'on') }}"
      - service: climate.set_temperature
        data:
          entity_id: climate.kontor
          temperature: "{{ states('sensor.office_min_temp') }}"
      - event: check_climate

  - alias: Termostat Stue
    initial_state: true
    mode: queued
    trigger:
      - platform: state
        entity_id: sensor.living_room_min_temp
      - platform: state
        entity_id: binary_sensor.stue_altandor
      - platform: event
        event_type: set_climate
    action:
      - service: >
          {%- if is_state('binary_sensor.stue_altandor', 'off') -%}
            climate.turn_on
          {%- else -%}
            climate.turn_off
          {%- endif -%}
        data:
          entity_id: climate.stue
      - delay:
          seconds: 1
      - condition: "{{ is_state('climate.stue', 'on') }}"
      - service: climate.set_temperature
        data:
          entity_id: climate.stue
          temperature: "{{ states('sensor.living_room_min_temp') }}"
      - event: check_climate

  - alias: Termostat Værksted
    initial_state: true
    mode: queued
    trigger:
      - platform: state
        entity_id: sensor.workshop_min_temp
      - platform: state
        entity_id: binary_sensor.vaerksted_vindue
      - platform: event
        event_type: set_climate
    action:
      - service: >
          {%- if is_state('binary_sensor.stue_altandor', 'off') -%}
            climate.turn_on
          {%- else -%}
            climate.turn_off
          {%- endif -%}
        data:
          entity_id: climate.vaerksted
      - delay:
          seconds: 1
      - condition: "{{ is_state('climate.vaerksted', 'on') }}"
      - service: climate.set_temperature
        data:
          entity_id: climate.vaerksted
          temperature: "{{ states('sensor.workshop_min_temp') }}"
      - event: check_climate

  - alias: Termostat Soveværelse
    initial_state: true
    mode: queued
    trigger:
      - platform: state
        entity_id: sensor.bedroom_min_temp
      - platform: state
        entity_id: binary_sensor.sovevaerelse_altandor
      - platform: event
        event_type: set_climate
    action:
      - service: >
          {%- if is_state('binary_sensor.sovevaerelse_altandor', 'off') -%}
            climate.turn_on
          {%- else -%}
            climate.turn_off
          {%- endif -%}
        data:
          entity_id: climate.sovevaerelse
      - delay:
          seconds: 1
      - condition: "{{ is_state('climate.sovevaerelse', 'on') }}"
      - service: climate.set_temperature
        data:
          entity_id: climate.sovevaerelse
          temperature: "{{ states('sensor.bedroom_min_temp') }}"
      - event: check_climate
