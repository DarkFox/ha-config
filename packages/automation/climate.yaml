input_number:
  target_temperature:
    min: 15
    max: 25
    step: 1
    unit_of_measurement: °C

binary_sensor:
  - platform: template
    sensors:
      thermostats_night_mode:
        friendly_name: "Termostater Nattilstand"
        value_template: >
          {{
            is_state('input_select.sleep_state', 'bedtime')
            or is_state('input_select.sleep_state', 'in bed')
            or is_state('input_select.sleep_state', 'sleeping')
            or is_state('input_select.sleep_state', 'paused')
          }}

      thermostats_on:
        friendly_name: "Termostater Tændt"
        value_template: >
          {{ (is_state('binary_sensor.martin_presence_delayed', 'on') or is_state('binary_sensor.martin_home_soon', 'on')) }}

      check_climate:
        value_template: >
          {{
            states('sensor.bathroom_min_temp')|int == state_attr('climate.badevaerelse', 'temperature')|int
            and states('sensor.office_min_temp')|int == state_attr('climate.kontor', 'temperature')|int
            and states('sensor.living_room_min_temp')|int == state_attr('climate.stue', 'temperature')|int
            and states('sensor.kitchen_min_temp')|int == state_attr('climate.kokken', 'temperature')|int
            and states('sensor.bedroom_min_temp')|int == state_attr('climate.sovevaerelse', 'temperature')|int
          }}

sensor:
  - platform: template
    sensors:
      bathroom_max_temp:
        value_template: "26"
      bathroom_min_temp:
        value_template: >
          {%- set on = is_state('binary_sensor.thermostats_on', 'on') -%}
          {%- set night = is_state('binary_sensor.thermostats_night_mode', 'on') -%}
          {%- set extended = is_state('binary_sensor.martin_presence_extended', 'on') -%}
          {%- set active = is_state('binary_sensor.bathroom_activity', 'on') -%}
          {% if on %}
            {% if active %}
              {{ states('input_number.target_temperature')|int }}
            {% elif night %}
              {{ states('input_number.target_temperature')|int - 4 }}
            {% else %}
              {{ states('input_number.target_temperature')|int - 2 }}
            {% endif %}
          {% elif extended %}
            {{ states('input_number.target_temperature')|int - 5 }}
          {% else %}
            15
          {% endif %}

      office_max_temp:
        value_template: "26"
      office_min_temp:
        value_template: >
          {%- set on = is_state('binary_sensor.thermostats_on', 'on') -%}
          {%- set night = is_state('binary_sensor.thermostats_night_mode', 'on') -%}
          {%- set summer = is_state('sensor.season', 'summer') -%}
          {%- set extended = is_state('binary_sensor.martin_presence_extended', 'on') -%}
          {%- set active = is_state('binary_sensor.office_activity', 'on')
              or is_state('binary_sensor.martin_pc_activity', 'on')
              or is_state('binary_sensor.working_from_home', 'on') -%}
          {% if on %}
            {% if active %}
              {{ states('input_number.target_temperature')|int }}
            {% elif night or summer %}
              {{ states('input_number.target_temperature')|int -4 }}
            {% else %}
              {{ states('input_number.target_temperature')|int- 2 }}
            {% endif %}
          {% elif extended %}
            {{ states('input_number.target_temperature')|int - 5 }}
          {% else %}
            15
          {% endif %}

      living_room_max_temp:
        value_template: "26"
      living_room_min_temp:
        value_template: >
          {%- set on = is_state('binary_sensor.thermostats_on', 'on') -%}
          {%- set night = is_state('binary_sensor.thermostats_night_mode', 'on') -%}
          {%- set summer = is_state('sensor.season', 'summer') -%}
          {%- set extended = is_state('binary_sensor.martin_presence_extended', 'on') -%}
          {%- set active = is_state('binary_sensor.living_room_activity', 'on') -%}
          {% if on %}
            {% if night or summer %}
              {{ states('input_number.target_temperature')|int - 4 }}
            {% elif active %}
              {{ states('input_number.target_temperature')|int }}
            {% else %}
              {{ states('input_number.target_temperature')|int - 2 }}
            {% endif %}
          {% elif extended %}
            {{ states('input_number.target_temperature')|int -5 }}
          {% else %}
            15
          {% endif %}

      kitchen_max_temp:
        value_template: "26"
      kitchen_min_temp:
        value_template: >
          {%- set on = is_state('binary_sensor.thermostats_on', 'on') -%}
          {%- set night = is_state('binary_sensor.thermostats_night_mode', 'on') -%}
          {%- set summer = is_state('sensor.season', 'summer') -%}
          {%- set extended = is_state('binary_sensor.martin_presence_extended', 'on') -%}
          {%- set active = is_state('binary_sensor.kitchen_activity', 'on') -%}
          {% if on %}
            {% if night or summer %}
              {{ states('input_number.target_temperature')|int - 4 }}
            {% elif active %}
              {{ states('input_number.target_temperature')|int }}
            {% else %}
              {{ states('input_number.target_temperature')|int - 2 }}
            {% endif %}
          {% elif extended %}
            {{ states('input_number.target_temperature')|int - 5 }}
          {% else %}
            15
          {% endif %}

      bedroom_max_temp:
        value_template: >
          {%- set night = is_state('binary_sensor.thermostats_night_mode', 'on') -%}
          {%- set sleeping = is_state('input_select.sleep_state', 'sleeping') -%}
          {% if sleeping %}
            {{ states('input_number.target_temperature')|int }}
          {% elif night %}
            {{ states('input_number.target_temperature')|int - 3 }}
          {% else %}
            26
          {% endif %}
      bedroom_min_temp:
        value_template: >
          {%- set on = is_state('binary_sensor.thermostats_on', 'on') -%}
          {%- set night = is_state('binary_sensor.thermostats_night_mode', 'on') -%}
          {%- set summer = is_state('sensor.season', 'summer') -%}
          {%- set extended = is_state('binary_sensor.martin_presence_extended', 'on') -%}
          {%- set sleeping = is_state('input_select.sleep_state', 'sleeping') -%}
          {% if on %}
            {% if sleeping or summer %}
              {{ states('input_number.target_temperature')|int - 2 }}
            {% else %}
              {{ states('input_number.target_temperature')|int }}
            {% endif %}
          {% elif extended %}
            {{ states('input_number.target_temperature')|int - 5 }}
          {% else %}
            15
          {% endif %}

automation:
  - id: toggle_living_room_fan
    alias: Toggle Living Room Fan
    trigger:
      - platform: state
        entity_id: input_select.living_room_room_state
    action:
      - choose:
          - conditions:
              - condition: state
                entity_id: input_select.living_room_room_state
                state: "off"
            sequence:
              - service: fan.turn_off
                target:
                  entity_id: fan.livingroom_fan
        default:
          - service: fan.turn_on
            data:
              entity_id: fan.livingroom_fan
              speed: >-
                {%- if states('sensor.stue_air_temperature')|int > 26 -%}
                  high
                {%- elif states('sensor.stue_air_temperature')|int > 24 -%}
                  medium
                {%- else -%}
                  low
                {%- endif -%}

  # - id: toggle_office_desk_fan
  #   alias: Toggle Office Desk Fan
  #   trigger:
  #     - platform: state
  #       entity_id: switch.pc_tilbehor_afbryder
  #       to:
  #         - "on"
  #         - "off"
  #   action:
  #     - service: "switch.turn_{{ states('switch.pc_tilbehor_afbryder') }}"
  #       data:
  #         entity_id: switch.skrivebord_blaeser

  # Restart Tado stick if temperature changes don't take.
  - alias: Check Climate
    initial_state: true
    mode: single
    trigger:
      - platform: event
        event_type: check_climate
    action:
      - delay:
          seconds: 30
      - choose:
          - conditions:
              - condition: state
                entity_id: binary_sensor.check_climate
                state: "off"
            sequence:
              - service: script.turn_on
                entity_id: script.restart_tado

  - alias: Termostat Badeværelse
    initial_state: true
    mode: queued
    trigger:
      - platform: state
        entity_id:
          - sensor.bathroom_min_temp
      - platform: event
        event_type: set_climate
    action:
      - service: climate.turn_on
        data:
          entity_id: climate.badevaerelse
      - service: climate.set_temperature
        data:
          entity_id: climate.badevaerelse
          temperature: "{{ states('sensor.bathroom_min_temp') }}"
      - event: check_climate

  - alias: Termostat Kontor
    initial_state: true
    mode: queued
    trigger:
      - platform: state
        entity_id: sensor.office_min_temp
      - platform: event
        event_type: set_climate
    action:
      - service: climate.turn_on
        data:
          entity_id: climate.kontor
      - service: climate.set_temperature
        data:
          entity_id: climate.kontor
          temperature: "{{ states('sensor.office_min_temp') }}"
      - event: check_climate

  - alias: Termostat Stue
    initial_state: true
    mode: queued
    trigger:
      - platform: state
        entity_id: sensor.living_room_min_temp
      - platform: event
        event_type: set_climate
    action:
      - service: climate.turn_on
        data:
          entity_id: climate.stue
      - service: climate.set_temperature
        data:
          entity_id: climate.stue
          temperature: "{{ states('sensor.living_room_min_temp') }}"
      - event: check_climate

  - alias: Termostat Køkken
    initial_state: true
    mode: queued
    trigger:
      - platform: state
        entity_id: sensor.kitchen_min_temp
      - platform: event
        event_type: set_climate
    action:
      - service: climate.turn_on
        data:
          entity_id: climate.kokken
      - service: climate.set_temperature
        data:
          entity_id: climate.kokken
          temperature: "{{ states('sensor.kitchen_min_temp') }}"
      - event: check_climate

  - alias: Termostat Soveværelse
    initial_state: true
    mode: queued
    trigger:
      - platform: state
        entity_id: sensor.bedroom_min_temp
      - platform: event
        event_type: set_climate
    action:
      - service: climate.turn_on
        data:
          entity_id: climate.sovevaerelse
      - service: climate.set_temperature
        data:
          entity_id: climate.sovevaerelse
          temperature: "{{ states('sensor.bedroom_min_temp') }}"
      - event: check_climate
