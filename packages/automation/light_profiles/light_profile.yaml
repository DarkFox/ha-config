homeassistant:
  customize:
    script.dim_light_profile:
      icon: mdi:brightness-5

    script.brighten_light_profile:
      icon: mdi:brightness-7

input_boolean:
  auto_light_profile:
    name: Auto
    icon: mdi:brightness-auto

input_number:
  scene_transition_time:
    name: Scene Transition Time
    initial: 0.5
    min: 0.0
    max: 1800
    step: 0.1

input_select:
  light_profile:
    name: Light Profile
    options:
      - Bright
      - Default
      - Dimmed
      - Ambient
      - Night
      - "Off"

  theme:
    name: Theme
    options:
      - Tron
      - Vaporwave
      - Ocean
      - Halloween
      - Christmas
      - Little
      - Portal
      - Portal Inverted
      - Dragon
      - Demon
      - Red and Blue
      - Yellow and Green
      - Gold and Pink
      - Screaming Pink
      - Red
      - Green
      - Blue
      - Yellow
      - Purple
      - Orange
      - Spring Blossom
      - Slava Ukraini

mqtt:
  light:
    - schema: json
      name: apartment light level
      command_topic: "virtual/apartment-light-level/set"
      brightness: true
      retain: true

light:
  - platform: template
    lights:
      light_profile_bright:
        friendly_name: Lyst
        icon_template: "mdi:brightness-7"
        value_template: "{{ is_state('input_select.light_profile', 'Bright') }}"
        turn_on:
          event: set_light_profile
          event_data:
            profile: Bright
        turn_off:
          event: light_profile_off_null

      light_profile_default:
        friendly_name: Normal
        icon_template: "mdi:brightness-5"
        value_template: "{{ is_state('input_select.light_profile', 'Default') }}"
        turn_on:
          event: set_light_profile
          event_data:
            profile: Default
        turn_off:
          event: light_profile_off_null

      light_profile_dimmed:
        friendly_name: DÃ¦mpet
        icon_template: "mdi:brightness-6"
        value_template: "{{ is_state('input_select.light_profile', 'Dimmed') }}"
        turn_on:
          event: set_light_profile
          event_data:
            profile: Dimmed
        turn_off:
          event: light_profile_off_null

      light_profile_ambient:
        friendly_name: Baggrund
        icon_template: "mdi:brightness-4"
        value_template: "{{ is_state('input_select.light_profile', 'Ambient') }}"
        turn_on:
          event: set_light_profile
          event_data:
            profile: Ambient
        turn_off:
          event: light_profile_off_null

      light_profile_night:
        friendly_name: Nat
        icon_template: "mdi:brightness-3"
        value_template: "{{ is_state('input_select.light_profile', 'Night') }}"
        turn_on:
          event: set_light_profile
          event_data:
            profile: Night
        turn_off:
          event: light_profile_off_null

      light_profile_off:
        friendly_name: "Slukket"
        icon_template: "mdi:power"
        value_template: "{{ is_state('input_select.light_profile', 'Off') }}"
        turn_on:
          event: set_light_profile
          event_data:
            profile: "Off"
        turn_off:
          event: light_profile_off_null

sensor:
  - platform: template
    sensors:
      inactive_light_profile:
        value_template: >
          {% set profile = states('input_select.light_profile') %}
          {% set profiles = state_attr('input_select.light_profile', 'options') %}
          {{ profiles[profiles.index(profile)+1] or 'Off' }}

      theme:
        friendly_name: Theme
        value_template: "{{ states('input_select.theme') }}"
        attribute_templates:
          primary_color: >
            {%- set theme = states('input_select.theme') -%}
            {% if theme == 'Tron' -%}
              53,100
            {% elif theme == 'Vaporwave' -%}
              315,100
            {% elif theme == 'Ocean' -%}
              165,100
            {% elif theme == 'Halloween' -%}
              30,100
            {% elif theme == 'Christmas' -%}
              0,100
            {% elif theme == 'Little' -%}
              300,70
            {% elif theme == 'Portal' -%}
              30,100
            {% elif theme == 'Portal Inverted' -%}
              220,100
            {% elif theme == 'Dragon' -%}
              284,100
            {% elif theme == 'Demon' -%}
              0,100
            {% elif theme == 'Red and Blue' -%}
              0,100
            {% elif theme == 'Yellow and Green' -%}
              53,100
            {% elif theme == 'Gold and Pink' -%}
              45, 100
            {% elif theme == 'Screaming Pink' -%}
              315,100
            {% elif theme == 'Red' -%}
              0,100
            {% elif theme == 'Green' -%}
              105,100
            {% elif theme == 'Blue' -%}
              240,100
            {% elif theme == 'Yellow' -%}
              53,100
            {% elif theme == 'Purple' -%}
              284,100
            {% elif theme == 'Orange' -%}
              30,100
            {% elif theme == 'Spring Blossom' -%}
              335,40
            {% elif theme == 'Slava Ukraini' -%}
              240,100
            {% endif -%}
          primary_color_hue: >
            {%- set theme = states('input_select.theme') -%}
            {% if theme == 'Tron' -%}
              45,100
            {% elif theme == 'Vaporwave' -%}
              320,100
            {% elif theme == 'Ocean' -%}
              180,100
            {% elif theme == 'Halloween' -%}
              25,100
            {% elif theme == 'Christmas' -%}
              0,100
            {% elif theme == 'Little' -%}
              285,90
            {% elif theme == 'Portal' -%}
              26,100
            {% elif theme == 'Portal Inverted' -%}
              240,100
            {% elif theme == 'Dragon' -%}
              269,94
            {% elif theme == 'Demon' -%}
              0,100
            {% elif theme == 'Red and Blue' -%}
              0,100
            {% elif theme == 'Yellow and Green' -%}
              45,100
            {% elif theme == 'Gold and Pink' -%}
              45, 100
            {% elif theme == 'Screaming Pink' -%}
              330,100
            {% elif theme == 'Red' -%}
              0,100
            {% elif theme == 'Green' -%}
              125,100
            {% elif theme == 'Blue' -%}
              255,100
            {% elif theme == 'Yellow' -%}
              45,100
            {% elif theme == 'Purple' -%}
              268,100
            {% elif theme == 'Orange' -%}
              24,100
            {% elif theme == 'Spring Blossom' -%}
              339,58
            {% elif theme == 'Slava Ukraini' -%}
              255,100
            {% endif -%}
          secondary_color: >
            {%- set theme = states('input_select.theme') -%}
            {% if theme == 'Tron' -%}
              179,100
            {% elif theme == 'Vaporwave' -%}
              170,100
            {% elif theme == 'Ocean' -%}
              210,100
            {% elif theme == 'Halloween' -%}
              284,100
            {% elif theme == 'Christmas' -%}
              120,100
            {% elif theme == 'Little' -%}
              220,70
            {% elif theme == 'Portal' -%}
              220,100
            {% elif theme == 'Portal Inverted' -%}
              30,100
            {% elif theme == 'Dragon' -%}
              120,100
            {% elif theme == 'Demon' -%}
              284,100
            {% elif theme == 'Red and Blue' -%}
              240,100
            {% elif theme == 'Yellow and Green' -%}
              120,100
            {% elif theme == 'Gold and Pink' -%}
              300, 100
            {% elif theme == 'Screaming Pink' -%}
              315,100
            {% elif theme == 'Red' -%}
              0,100
            {% elif theme == 'Green' -%}
              120,100
            {% elif theme == 'Blue' -%}
              220,100
            {% elif theme == 'Yellow' -%}
              44,100
            {% elif theme == 'Purple' -%}
              284,100
            {% elif theme == 'Orange' -%}
              29,100
            {% elif theme == 'Spring Blossom' -%}
              350,20
            {% elif theme == 'Slava Ukraini' -%}
              44,100
            {% endif -%}
          secondary_color_hue: >
            {%- set theme = states('input_select.theme') -%}
            {% if theme == 'Tron' -%}
              199,100
            {% elif theme == 'Vaporwave' -%}
              180,100
            {% elif theme == 'Ocean' -%}
              210,97
            {% elif theme == 'Halloween' -%}
              269,94
            {% elif theme == 'Christmas' -%}
              140,100
            {% elif theme == 'Little' -%}
              225,70
            {% elif theme == 'Portal' -%}
              240,100
            {% elif theme == 'Portal Inverted' -%}
              26,100
            {% elif theme == 'Dragon' -%}
              140,100
            {% elif theme == 'Demon' -%}
              269,94
            {% elif theme == 'Red and Blue' -%}
              255,100
            {% elif theme == 'Yellow and Green' -%}
              140,100
            {% elif theme == 'Gold and Pink' -%}
              285, 90
            {% elif theme == 'Screaming Pink' -%}
              330,100
            {% elif theme == 'Red' -%}
              0,100
            {% elif theme == 'Green' -%}
              140,100
            {% elif theme == 'Blue' -%}
              220,100
            {% elif theme == 'Yellow' -%}
              44,81
            {% elif theme == 'Purple' -%}
              269,94
            {% elif theme == 'Orange' -%}
              30,100
            {% elif theme == 'Spring Blossom' -%}
              327,9
            {% elif theme == 'Slava Ukraini' -%}
              44,81
            {% endif -%}

scene:
  - name: Bright
    entities:
      script.activate_bright_scene:
        state: "on"
  - name: Default
    entities:
      script.activate_default_scene:
        state: "on"
  - name: Dimmed
    entities:
      script.activate_dimmed_scene:
        state: "on"
  - name: Ambient
    entities:
      script.activate_ambient_scene:
        state: "on"
  - name: Night
    entities:
      script.activate_night_scene:
        state: "on"
  - name: "Off"
    entities:
      script.activate_off_scene:
        state: "on"

script:
  dim_light_profile:
    sequence:
      event: decrease_light_profile
  brighten_light_profile:
    sequence:
      event: increase_light_profile
  activate_bright_scene:
    sequence:
      event: set_light_profile
      event_data:
        profile: Bright
  activate_default_scene:
    sequence:
      event: set_light_profile
      event_data:
        profile: Default
  activate_dimmed_scene:
    sequence:
      event: set_light_profile
      event_data:
        profile: Dimmed
  activate_ambient_scene:
    sequence:
      event: set_light_profile
      event_data:
        profile: Ambient
  activate_night_scene:
    sequence:
      event: set_light_profile
      event_data:
        profile: Night
  activate_off_scene:
    sequence:
      event: set_light_profile
      event_data:
        profile: "Off"

automation:
  - alias: Reset Scene Transition Time
    initial_state: true
    trigger:
      platform: template
      value_template: "{% if as_timestamp(now()) - as_timestamp(states.input_number.scene_transition_time.last_updated) > 60 %}true{% endif %}"
    action:
      - service: input_number.set_value
        data:
          entity_id: "input_number.scene_transition_time"
          value: 0.5

  - alias: refresh_light_profile_event_on_theme_change
    initial_state: true
    trigger:
      - platform: state
        entity_id: input_select.theme
    action:
      - event: refresh_light_profile

  - alias: Apartment light level initializer
    initial_state: true
    trigger:
      platform: homeassistant
      event: start
    action:
      - service: light.turn_on
        data:
          entity_id: light.apartment_light_level
          brightness: 127
      - delay:
          seconds: 2
      - event: refresh_light_profile

  - alias: Apartment light level setter
    initial_state: true
    trigger:
      - platform: numeric_state
        entity_id: light.apartment_light_level
        value_template: "{{ state.attributes.brightness }}"
        below: 120
      - platform: numeric_state
        entity_id: light.apartment_light_level
        value_template: "{{ state.attributes.brightness }}"
        above: 135
    action:
      - event: "{{ 'decrease' if states.light.apartment_light_level.attributes.brightness | int < 120 else 'increase' }}_light_profile"
      - service: light.turn_on
        data:
          entity_id: light.apartment_light_level
          brightness: 127

  # Room States and light profile #
  # bathroom
  # bedroom
  # hallway
  # kitchen
  # living_room
  # office
  # workshop
  # balcony

  - alias: set_light_profile
    initial_state: true
    mode: queued
    trigger:
      - platform: event
        event_type: set_light_profile
    variables:
      room: "{{ trigger.event.data.room }}"
      profile: "{{ trigger.event.data.profile }}"
      room_separate: "{{ not not room and is_state('input_boolean.'+room+'_separate_light_profile', 'on') }}"
      light_profile_entity: >
        {%- if room_separate -%}
          input_select.{{ room }}_light_profile
        {%- else -%}
          input_select.light_profile
        {%- endif -%}
    action:
      - event: debug
        event_data:
          room: "{{ room }}"
          profile: "{{ profile }}"
          room_separate: "{{ room_separate }}"
      - service: input_select.select_option
        data:
          entity_id: "{{ light_profile_entity }}"
          option: "{{ profile }}"

  - alias: increase_light_profile
    initial_state: true
    mode: queued
    trigger:
      - platform: event
        event_type: increase_light_profile
    variables:
      room: "{{ trigger.event.data.room }}"
      room_separate: "{{ not not room and is_state('input_boolean.'+room+'_separate_light_profile', 'on') }}"
      current_light_profile: "{{ states('sensor.' + room + '_light_profile' if room_separate else 'input_select.light_profile') }}"
      light_profile_entity: >
        {%- if room_separate -%}
          input_select.{{ room }}_light_profile
        {%- else -%}
          input_select.light_profile
        {%- endif -%}
    condition:
      - condition: template
        value_template: "{{ current_light_profile != 'Bright' }}"
    action:
      - service: input_select.select_previous
        data:
          entity_id: "{{ light_profile_entity }}"

  - alias: decrease_light_profile
    initial_state: true
    mode: queued
    trigger:
      - platform: event
        event_type: decrease_light_profile
    variables:
      room: "{{ trigger.event.data.room }}"
      room_separate: "{{ not not room and is_state('input_boolean.'+room+'_separate_light_profile', 'on') }}"
      current_light_profile: "{{ states('sensor.' + room + '_light_profile' if room_separate else 'input_select.light_profile') }}"
      light_profile_entity: >
        {%- if room_separate -%}
          input_select.{{ room }}_light_profile
        {%- else -%}
          input_select.light_profile
        {%- endif -%}
    condition:
      - condition: template
        value_template: "{{ current_light_profile != 'Off' }}"
    action:
      - service: input_select.select_next
        data:
          entity_id: "{{ light_profile_entity }}"

  - alias: cycle_light_profile
    initial_state: true
    mode: queued
    trigger:
      - platform: event
        event_type: cycle_light_profile
    variables:
      room: "{{ trigger.event.data.room }}"
      room_separate: "{{ not not room and is_state('input_boolean.'+room+'_separate_light_profile', 'on') }}"
      current_light_profile: "{{ states('sensor.' + room + '_light_profile' if room_separate else 'input_select.light_profile') }}"
      light_profile_entity: >
        {%- if room_separate -%}
          input_select.{{ room }}_light_profile
        {%- else -%}
          input_select.light_profile
        {%- endif -%}
    action:
      - choose:
          - conditions:
              - condition: template
                value_template: "{{ current_light_profile == 'Bright' }}"
            sequence:
              - service: input_select.select_option
                data:
                  option: Night
                  entity_id: "{{ light_profile_entity }}"
          - conditions:
              - condition: template
                value_template: "{{ current_light_profile == 'Off' }}"
            sequence:
              - service: input_select.select_option
                data:
                  option: Default
                  entity_id: "{{ light_profile_entity }}"
        default:
          - service: input_select.select_previous
            data:
              entity_id: "{{ light_profile_entity }}"

  - alias: Room activity override on
    initial_state: true
    mode: parallel
    trigger:
      platform: state
      entity_id:
        - input_boolean.bathroom_activity_override
        - input_boolean.bedroom_activity_override
        - input_boolean.hallway_activity_override
        - input_boolean.kitchen_activity_override
        - input_boolean.living_room_activity_override
        - input_boolean.office_activity_override
        - input_boolean.workshop_activity_override
        - input_boolean.balcony_activity_override
      to: "on"
    action:
      - service: input_select.select_option
        data:
          entity_id: "input_select.{{ trigger.entity_id.replace('input_boolean.', '').replace('_activity_override', '') }}_room_state"
          option: "active"

  - alias: Room Separate Light Profile
    initial_state: true
    mode: parallel
    trigger:
      platform: state
      entity_id:
        - input_boolean.bathroom_separate_light_profile
        - input_boolean.bedroom_separate_light_profile
        - input_boolean.hallway_separate_light_profile
        - input_boolean.kitchen_separate_light_profile
        - input_boolean.living_room_separate_light_profile
        - input_boolean.office_separate_light_profile
        - input_boolean.workshop_separate_light_profile
        - input_boolean.balcony_separate_light_profile
    variables:
      room: "{{ trigger.entity_id.replace('input_boolean.', '').replace('_separate_light_profile', '') }}"
    action:
      - service: input_select.select_option
        data:
          entity_id: "input_select.{{ room }}_light_profile"
          option: "{{ states('input_select.light_profile') }}"

  - alias: Room State Active Trigger
    initial_state: true
    mode: parallel
    trigger:
      platform: state
      entity_id:
        - binary_sensor.bathroom_activity
        - binary_sensor.bedroom_activity
        - binary_sensor.hallway_activity
        - binary_sensor.kitchen_activity
        - binary_sensor.living_room_activity
        - binary_sensor.office_activity
        - binary_sensor.workshop_activity
        - binary_sensor.balcony_activity
      to: "on"
    condition:
      condition: template
      value_template: "{{ 'True' if is_state('input_boolean.' + trigger.entity_id.replace('binary_sensor.', '').replace('_activity', '') + '_activity_override', 'off') }}"
    action:
      service: input_select.select_option
      data:
        entity_id: "input_select.{{ trigger.entity_id.replace('binary_sensor.', '').replace('_activity', '') }}_room_state"
        option: "active"

  - alias: Room State Inactive Trigger
    initial_state: true
    mode: parallel
    trigger:
      - platform: state
        entity_id: binary_sensor.bathroom_activity
        to: "off"
        for:
          minutes: 5
      - platform: state
        entity_id: binary_sensor.bedroom_activity
        to: "off"
        for:
          minutes: 2
      - platform: state
        entity_id: binary_sensor.hallway_activity
        to: "off"
        for:
          minutes: 2
      - platform: state
        entity_id: binary_sensor.kitchen_activity
        to: "off"
        for:
          minutes: 2
      - platform: state
        entity_id: binary_sensor.living_room_activity
        to: "off"
        for:
          minutes: 2
      - platform: state
        entity_id: binary_sensor.office_activity
        to: "off"
        for:
          minutes: 2
      - platform: state
        entity_id: binary_sensor.workshop_activity
        to: "off"
        for:
          minutes: 2
      - platform: state
        entity_id: binary_sensor.balcony_activity
        to: "off"
        for:
          minutes: 2
    condition:
      condition: template
      value_template: "{{ 'True' if is_state('input_boolean.' + trigger.entity_id.replace('binary_sensor.', '').replace('_activity', '') + '_activity_override', 'off') }}"
    action:
      service: input_select.select_option
      data:
        entity_id: "input_select.{{ trigger.entity_id.replace('binary_sensor.', '').replace('_activity', '') }}_room_state"
        option: "inactive"

  - alias: Room State Off Trigger
    initial_state: true
    mode: parallel
    trigger:
      - platform: state
        entity_id: binary_sensor.bathroom_activity
        to: "off"
        for:
          minutes: 10
      - platform: state
        entity_id: binary_sensor.bedroom_activity
        to: "off"
        for:
          minutes: 4
      - platform: state
        entity_id: binary_sensor.hallway_activity
        to: "off"
        for:
          minutes: 4
      - platform: state
        entity_id: binary_sensor.kitchen_activity
        to: "off"
        for:
          minutes: 4
      - platform: state
        entity_id: binary_sensor.living_room_activity
        to: "off"
        for:
          minutes: 4
      - platform: state
        entity_id: binary_sensor.office_activity
        to: "off"
        for:
          minutes: 4
      - platform: state
        entity_id: binary_sensor.workshop_activity
        to: "off"
        for:
          minutes: 4
      - platform: state
        entity_id: binary_sensor.balcony_activity
        to: "off"
        for:
          minutes: 4
    condition:
      condition: and
      conditions:
        - condition: template
          value_template: "{{ 'True' if is_state('input_boolean.' + trigger.entity_id.replace('binary_sensor.', '').replace('_activity', '') + '_activity_override', 'off') else 'False' }}"
    action:
      service: input_select.select_option
      data:
        entity_id: "input_select.{{ trigger.entity_id.replace('binary_sensor.', '').replace('_activity', '') }}_room_state"
        option: "off"
