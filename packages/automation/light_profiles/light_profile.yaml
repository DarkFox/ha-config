homeassistant:
  customize:
    script.dim_light_profile:
      icon: mdi:brightness-5

    script.brighten_light_profile:
      icon: mdi:brightness-7

input_number:
  scene_transition_time:
    name: Scene Transition Time
    initial: 0.5
    min: 0.0
    max: 1800
    step: 0.1

input_select:
  light_profile:
    name: Light Profile
    options:
      - Bright
      - Default
      - Dimmed
      - Ambient
      - Night
      - "Off"

  theme:
    name: Theme
    options:
      - Tron
      - Vaporwave
      - Halloween
      - Christmas
      - Little
      - Portal
      - Portal Inverted
      - Dragon
      - Red and Blue
      - Yellow and Green
      - Screaming Pink
      - Red
      - Green
      - Blue
      - Yellow
      - Purple
      - Orange
      - Spring Blossom

light:
  - platform: mqtt
    schema: json
    name: apartment light level
    command_topic: "virtual/apartment-light-level/set"
    brightness: true
    retain: true

  - platform: template
    lights:
      light_profile_bright:
        friendly_name: Lyst
        icon_template: "mdi:brightness-7"
        value_template: "{{ is_state('input_select.light_profile', 'Bright') }}"
        turn_on:
          event: set_light_profile
          event_data:
            profile: Bright
        turn_off:
          event: light_profile_off_null

      light_profile_default:
        friendly_name: Normal
        icon_template: "mdi:brightness-5"
        value_template: "{{ is_state('input_select.light_profile', 'Default') }}"
        turn_on:
          event: set_light_profile
          event_data:
            profile: Default
        turn_off:
          event: light_profile_off_null

      light_profile_dimmed:
        friendly_name: DÃ¦mpet
        icon_template: "mdi:brightness-6"
        value_template: "{{ is_state('input_select.light_profile', 'Dimmed') }}"
        turn_on:
          event: set_light_profile
          event_data:
            profile: Dimmed
        turn_off:
          event: light_profile_off_null

      light_profile_ambient:
        friendly_name: Baggrund
        icon_template: "mdi:brightness-4"
        value_template: "{{ is_state('input_select.light_profile', 'Ambient') }}"
        turn_on:
          event: set_light_profile
          event_data:
            profile: Ambient
        turn_off:
          event: light_profile_off_null

      light_profile_night:
        friendly_name: Nat
        icon_template: "mdi:brightness-3"
        value_template: "{{ is_state('input_select.light_profile', 'Night') }}"
        turn_on:
          event: set_light_profile
          event_data:
            profile: Night
        turn_off:
          event: light_profile_off_null

      light_profile_off:
        friendly_name: "Slukket"
        icon_template: "mdi:power"
        value_template: "{{ is_state('input_select.light_profile', 'Off') }}"
        turn_on:
          event: set_light_profile
          event_data:
            profile: "Off"
        turn_off:
          event: light_profile_off_null

sensor:
  - platform: template
    sensors:
      inactive_light_profile:
        value_template: >
          {% if is_state('input_select.light_profile', 'Bright') %}
            Default
          {% elif is_state('input_select.light_profile', 'Default') %}
            Dimmed
          {% elif is_state('input_select.light_profile', 'Dimmed') %}
            Ambient
          {% elif is_state('input_select.light_profile', 'Ambient') %}
            Night
          {% else %}
            Off
          {% endif %}
      theme_primary_color: # Usually the warmer color
        friendly_name: Primary Color
        entity_id: input_select.theme
        value_template: >
          {% if is_state('input_select.theme', 'Tron') -%}
            53,100
          {% elif is_state('input_select.theme', 'Vaporwave') -%}
            315,100
          {% elif is_state('input_select.theme', 'Halloween') -%}
            30,100
          {% elif is_state('input_select.theme', 'Christmas') -%}
            0,100
          {% elif is_state('input_select.theme', 'Little') -%}
            300,70
          {% elif is_state('input_select.theme', 'Portal') -%}
            30,100
          {% elif is_state('input_select.theme', 'Portal Inverted') -%}
            220,100
          {% elif is_state('input_select.theme', 'Dragon') -%}
            284,100
          {% elif is_state('input_select.theme', 'Red and Blue') -%}
            0,100
          {% elif is_state('input_select.theme', 'Yellow and Green') -%}
            53,100
          {% elif is_state('input_select.theme', 'Screaming Pink') -%}
            315,100
          {% elif is_state('input_select.theme', 'Red') -%}
            0,100
          {% elif is_state('input_select.theme', 'Green') -%}
            105,100
          {% elif is_state('input_select.theme', 'Blue') -%}
            240,100
          {% elif is_state('input_select.theme', 'Yellow') -%}
            53,100
          {% elif is_state('input_select.theme', 'Purple') -%}
            284,100
          {% elif is_state('input_select.theme', 'Orange') -%}
            30,100
          {% elif is_state('input_select.theme', 'Spring Blossom') -%}
            335,40
          {% endif -%}

      theme_primary_color_hue:
        friendly_name: Primary Color Hue
        entity_id: input_select.theme
        value_template: >
          {% if is_state('input_select.theme', 'Tron') -%}
            45,100
          {% elif is_state('input_select.theme', 'Vaporwave') -%}
            320,100
          {% elif is_state('input_select.theme', 'Halloween') -%}
            25,100
          {% elif is_state('input_select.theme', 'Christmas') -%}
            0,100
          {% elif is_state('input_select.theme', 'Little') -%}
            285,90
          {% elif is_state('input_select.theme', 'Portal') -%}
            26,100
          {% elif is_state('input_select.theme', 'Portal Inverted') -%}
            240,100
          {% elif is_state('input_select.theme', 'Dragon') -%}
            269,94
          {% elif is_state('input_select.theme', 'Red and Blue') -%}
            0,100
          {% elif is_state('input_select.theme', 'Yellow and Green') -%}
            45,100
          {% elif is_state('input_select.theme', 'Screaming Pink') -%}
            330,100
          {% elif is_state('input_select.theme', 'Red') -%}
            0,100
          {% elif is_state('input_select.theme', 'Green') -%}
            125,100
          {% elif is_state('input_select.theme', 'Blue') -%}
            255,100
          {% elif is_state('input_select.theme', 'Yellow') -%}
            45,100
          {% elif is_state('input_select.theme', 'Purple') -%}
            268,100
          {% elif is_state('input_select.theme', 'Orange') -%}
            24,100
          {% elif is_state('input_select.theme', 'Spring Blossom') -%}
            339,58
          {% endif -%}

      theme_secondary_color: # Usually the colder color
        friendly_name: Secondary Color
        entity_id: input_select.theme
        value_template: >
          {% if is_state('input_select.theme', 'Tron') -%}
            179,100
          {% elif is_state('input_select.theme', 'Vaporwave') -%}
            170,100
          {% elif is_state('input_select.theme', 'Halloween') -%}
            284,100
          {% elif is_state('input_select.theme', 'Christmas') -%}
            120,100
          {% elif is_state('input_select.theme', 'Little') -%}
            220,70
          {% elif is_state('input_select.theme', 'Portal') -%}
            220,100
          {% elif is_state('input_select.theme', 'Portal Inverted') -%}
            30,100
          {% elif is_state('input_select.theme', 'Dragon') -%}
            120,100
          {% elif is_state('input_select.theme', 'Red and Blue') -%}
            240,100
          {% elif is_state('input_select.theme', 'Yellow and Green') -%}
            120,100
          {% elif is_state('input_select.theme', 'Screaming Pink') -%}
            315,100
          {% elif is_state('input_select.theme', 'Red') -%}
            0,100
          {% elif is_state('input_select.theme', 'Green') -%}
            120,100
          {% elif is_state('input_select.theme', 'Blue') -%}
            220,100
          {% elif is_state('input_select.theme', 'Yellow') -%}
            44,100
          {% elif is_state('input_select.theme', 'Purple') -%}
            284,100
          {% elif is_state('input_select.theme', 'Orange') -%}
            29,100
          {% elif is_state('input_select.theme', 'Spring Blossom') -%}
            350,20
          {% endif -%}

      theme_secondary_color_hue:
        friendly_name: Secondary Color Hue
        entity_id: input_select.theme
        value_template: >
          {% if is_state('input_select.theme', 'Tron') -%}
            199,100
          {% elif is_state('input_select.theme', 'Vaporwave') -%}
            180,100
          {% elif is_state('input_select.theme', 'Halloween') -%}
            269,94
          {% elif is_state('input_select.theme', 'Christmas') -%}
            140,100
          {% elif is_state('input_select.theme', 'Little') -%}
            225,70
          {% elif is_state('input_select.theme', 'Portal') -%}
            240,100
          {% elif is_state('input_select.theme', 'Portal Inverted') -%}
            26,100
          {% elif is_state('input_select.theme', 'Dragon') -%}
            140,100
          {% elif is_state('input_select.theme', 'Red and Blue') -%}
            255,100
          {% elif is_state('input_select.theme', 'Yellow and Green') -%}
            140,100
          {% elif is_state('input_select.theme', 'Screaming Pink') -%}
            330,100
          {% elif is_state('input_select.theme', 'Red') -%}
            0,100
          {% elif is_state('input_select.theme', 'Green') -%}
            140,100
          {% elif is_state('input_select.theme', 'Blue') -%}
            220,100
          {% elif is_state('input_select.theme', 'Yellow') -%}
            44,81
          {% elif is_state('input_select.theme', 'Purple') -%}
            269,94
          {% elif is_state('input_select.theme', 'Orange') -%}
            30,100
          {% elif is_state('input_select.theme', 'Spring Blossom') -%}
            327,9
          {% endif -%}

scene:
  - name: Bright
    entities:
      script.activate_bright_scene: "on"
  - name: Default
    entities:
      script.activate_default_scene: "on"
  - name: Dimmed
    entities:
      script.activate_dimmed_scene: "on"
  - name: Ambient
    entities:
      script.activate_ambient_scene: "on"
  - name: Night
    entities:
      script.activate_night_scene: "on"
  - name: "Off"
    entities:
      script.activate_off_scene: "on"

script:
  dim_light_profile:
    sequence:
      event: decrease_light_profile
  brighten_light_profile:
    sequence:
      event: increase_light_profile
  activate_bright_scene:
    sequence:
      event: set_light_profile
      event_data:
        profile: Bright
  activate_default_scene:
    sequence:
      event: set_light_profile
      event_data:
        profile: Default
  activate_dimmed_scene:
    sequence:
      event: set_light_profile
      event_data:
        profile: Dimmed
  activate_ambient_scene:
    sequence:
      event: set_light_profile
      event_data:
        profile: Ambient
  activate_night_scene:
    sequence:
      event: set_light_profile
      event_data:
        profile: Night
  activate_off_scene:
    sequence:
      event: set_light_profile
      event_data:
        profile: "Off"

automation:
  - alias: Reset Scene Transition Time
    initial_state: true
    trigger:
      platform: template
      value_template: "{% if as_timestamp(now()) - as_timestamp(states.input_number.scene_transition_time.last_updated) > 60 %}true{% endif %}"
    action:
      - service: input_number.set_value
        data:
          entity_id: "input_number.scene_transition_time"
          value: 0.5

  - alias: refresh_light_profile_event_on_theme_change
    initial_state: true
    trigger:
      - platform: state
        entity_id: input_select.theme
    action:
      - event: refresh_light_profile

  - alias: Apartment light level initializer
    initial_state: true
    trigger:
      platform: homeassistant
      event: start
    action:
      - service: light.turn_on
        data:
          entity_id: light.apartment_light_level
          brightness: 127
      - delay:
          seconds: 2
      - event: refresh_light_profile

  - alias: Apartment light level setter
    initial_state: true
    trigger:
      - platform: numeric_state
        entity_id: light.apartment_light_level
        value_template: "{{ state.attributes.brightness }}"
        below: 120
      - platform: numeric_state
        entity_id: light.apartment_light_level
        value_template: "{{ state.attributes.brightness }}"
        above: 135
    action:
      - event: "{{ 'decrease' if states.light.apartment_light_level.attributes.brightness | int < 120 else 'increase' }}_light_profile"
      - service: light.turn_on
        data:
          entity_id: light.apartment_light_level
          brightness: 127

  # Room States and light profile #
  # bathroom
  # bedroom
  # hallway
  # kitchen
  # living_room
  # office
  # storage_room

  - alias: set_light_profile
    initial_state: true
    trigger:
      - platform: event
        event_type: set_light_profile
    variables:
      room: "{{ trigger.event.data.room }}"
      profile: "{{ trigger.event.data.profile }}"
      room_separate: "{{ room and is_state('input_boolean.'+room+'_separate_light_profile', 'on') }}"
    action:
      - event: debug
        event_data:
          room: "{{ room }}"
          profile: "{{ profile }}"
          room_separate: "{{ room_separate }}"
      - service: input_select.select_option
        data_template:
          entity_id: >
            {%- if room_separate != "False" -%}
              input_select.{{ room }}_light_profile
            {%- else -%}
              input_select.light_profile
            {%- endif -%}
          option: "{{ profile }}"

  - alias: increase_light_profile
    initial_state: true
    trigger:
      - platform: event
        event_type: increase_light_profile
    variables:
      room: "{{ trigger.event.data.room }}"
      room_separate: "{{ room and is_state('input_boolean.'+room+'_separate_light_profile', 'on') }}"
    condition:
      - condition: template
        value_template: >
          {%- set entity_id = ('sensor.' + room + '_light_profile' if room_separate else 'input_select.light_profile') -%}
          {{ not is_state(entity_id, 'Bright') }}
    action:
      - service: input_select.select_previous
        data:
          entity_id: >
            {%- if room_separate != "False" -%}
              input_select.{{ room }}_light_profile
            {%- else -%}
              input_select.light_profile
            {%- endif -%}

  - alias: decrease_light_profile
    initial_state: true
    trigger:
      - platform: event
        event_type: decrease_light_profile
    variables:
      room: "{{ trigger.event.data.room }}"
      room_separate: "{{ room and is_state('input_boolean.'+room+'_separate_light_profile', 'on') }}"
    condition:
      - condition: template
        value_template: >
          {%- set entity_id = ('sensor.' + room + '_light_profile' if room_separate else 'input_select.light_profile') -%}
          {{ not is_state(entity_id, 'Off') }}
    action:
      - service: input_select.select_next
        data:
          entity_id: >
            {%- if room_separate != "False" -%}
              input_select.{{ room }}_light_profile
            {%- else -%}
              input_select.light_profile
            {%- endif -%}

  - alias: Room activity override on
    initial_state: true
    mode: parallel
    trigger:
      platform: state
      entity_id:
        - input_boolean.bathroom_activity_override
        - input_boolean.bedroom_activity_override
        - input_boolean.hallway_activity_override
        - input_boolean.kitchen_activity_override
        - input_boolean.living_room_activity_override
        - input_boolean.office_activity_override
        - input_boolean.storage_room_activity_override
      to: "on"
    action:
      - service: input_select.select_option
        data_template:
          entity_id: "input_select.{{ trigger.entity_id.replace('input_boolean.', '').replace('_activity_override', '') }}_room_state"
          option: "active"

  - alias: Room Separate Light Profile
    initial_state: true
    mode: parallel
    trigger:
      platform: state
      entity_id:
        - input_boolean.bathroom_separate_light_profile
        - input_boolean.bedroom_separate_light_profile
        - input_boolean.hallway_separate_light_profile
        - input_boolean.kitchen_separate_light_profile
        - input_boolean.living_room_separate_light_profile
        - input_boolean.office_separate_light_profile
        - input_boolean.storage_room_separate_light_profile
    variables:
      room: "{{ trigger.entity_id.replace('input_boolean.', '').replace('_separate_light_profile', '') }}"
    action:
      - service: input_select.select_option
        data_template:
          entity_id: "input_select.{{ room }}_light_profile"
          option: "{{ states('input_select.light_profile') }}"

  - alias: Room State Active Trigger
    initial_state: true
    mode: parallel
    trigger:
      platform: state
      entity_id:
        - binary_sensor.bathroom_activity
        - binary_sensor.bedroom_activity
        - binary_sensor.hallway_activity
        - binary_sensor.kitchen_activity
        - binary_sensor.living_room_activity
        - binary_sensor.office_activity
        - binary_sensor.storage_room_activity
      to: "on"
    condition:
      condition: template
      value_template: "{{ 'True' if is_state('input_boolean.' + trigger.entity_id.replace('binary_sensor.', '').replace('_activity', '') + '_activity_override', 'off') }}"
    action:
      service: input_select.select_option
      data_template:
        entity_id: "input_select.{{ trigger.entity_id.replace('binary_sensor.', '').replace('_activity', '') }}_room_state"
        option: "active"

  - alias: Room State Inactive Trigger
    initial_state: true
    mode: parallel
    trigger:
      - platform: state
        entity_id: binary_sensor.bathroom_activity
        to: "off"
        for:
          minutes: 3
      - platform: state
        entity_id: binary_sensor.bedroom_activity
        to: "off"
        for:
          minutes: 3
      - platform: state
        entity_id: binary_sensor.hallway_activity
        to: "off"
        for:
          minutes: 3
      - platform: state
        entity_id: binary_sensor.kitchen_activity
        to: "off"
        for:
          minutes: 3
      - platform: state
        entity_id: binary_sensor.living_room_activity
        to: "off"
        for:
          minutes: 3
      - platform: state
        entity_id: binary_sensor.office_activity
        to: "off"
        for:
          minutes: 3
      - platform: state
        entity_id: binary_sensor.storage_room_activity
        to: "off"
        for:
          minutes: 3
    condition:
      condition: template
      value_template: "{{ 'True' if is_state('input_boolean.' + trigger.entity_id.replace('binary_sensor.', '').replace('_activity', '') + '_activity_override', 'off') }}"
    action:
      service: input_select.select_option
      data_template:
        entity_id: "input_select.{{ trigger.entity_id.replace('binary_sensor.', '').replace('_activity', '') }}_room_state"
        option: "inactive"

  - alias: Room State Off Trigger
    initial_state: true
    mode: parallel
    trigger:
      - platform: state
        entity_id: binary_sensor.bathroom_activity
        to: "off"
        for:
          minutes: 5
      - platform: state
        entity_id: binary_sensor.bedroom_activity
        to: "off"
        for:
          minutes: 5
      - platform: state
        entity_id: binary_sensor.hallway_activity
        to: "off"
        for:
          minutes: 5
      - platform: state
        entity_id: binary_sensor.kitchen_activity
        to: "off"
        for:
          minutes: 5
      - platform: state
        entity_id: binary_sensor.living_room_activity
        to: "off"
        for:
          minutes: 5
      - platform: state
        entity_id: binary_sensor.office_activity
        to: "off"
        for:
          minutes: 5
      - platform: state
        entity_id: binary_sensor.storage_room_activity
        to: "off"
        for:
          minutes: 5
    condition:
      condition: and
      conditions:
        - condition: template
          value_template: "{{ 'True' if is_state('input_boolean.' + trigger.entity_id.replace('binary_sensor.', '').replace('_activity', '') + '_activity_override', 'off') else 'False' }}"
        - condition: template
          value_template: "{{ 'True' if is_state('binary_sensor.' + trigger.entity_id.replace('binary_sensor.', '').replace('_activity', '') + '_activity_predicted', 'off') else 'False' }}"
    action:
      service: input_select.select_option
      data_template:
        entity_id: "input_select.{{ trigger.entity_id.replace('binary_sensor.', '').replace('_activity', '') }}_room_state"
        option: "off"
