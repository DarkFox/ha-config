template:
  - sensor:
      - name: "Bathroom Selected Light Profile"
        unique_id: 393901b3-ba11-4bdc-9687-aef93046c3f4
        state: >-
          {%- from 'light_profile.jinja' import room_selected_light_profile -%}
          {{ room_selected_light_profile('bathroom') }}

      - name: "Bathroom Auto Light Profile"
        unique_id: 7bad7117-b66c-449c-a410-08b968435bfa
        state: >-
          {%- from 'light_profile.jinja' import room_auto_light_profile -%}
          {{ room_auto_light_profile('bathroom') }}

      - name: "Bathroom Light Profile"
        unique_id: b92cfc7a-57bd-4e86-b108-48bba785adb2
        state: >-
          {%- from 'light_profile.jinja' import room_light_profile -%}
          {{ room_light_profile('bathroom') }}

      - name: "Bathroom Inactive Light Profile"
        unique_id: 0d290d9c-7fe8-4280-abf0-5d9cbfbe536d
        state: >-
          {%- from 'light_profile.jinja' import room_inactive_light_profile -%}
          {{ room_inactive_light_profile('bathroom') }}

      - name: "Bathroom Active Light Profile"
        unique_id: a6034772-6dcb-43ae-9c10-15846f2d8507
        state: >-
          {%- from 'light_profile.jinja' import room_active_light_profile -%}
          {{ room_active_light_profile('bathroom') }}

      - name: "Bathroom Activity State"
        unique_id: 8f982f33-1908-413f-9091-f526216c3f8e
        state: >-
          {%- from 'light_profile.jinja' import room_activity_state -%}
          {{ room_activity_state('bathroom') }}

  - binary_sensor:
      - name: "Bathroom Activity"
        unique_id: 284c86dd-f2b0-48db-b7dd-b7f3b831a4c9
        state: >
          {%- from 'light_profile.jinja' import room_activity -%}
          {{ room_activity('bathroom') }}

      - name: "Bathroom Activity Predicted"
        unique_id: b32edef2-f1c5-495e-a4e0-a6f6a994209e
        state: >
          {%- if is_state('binary_sensor.moved_from_living_room_to_hallway', 'on')
            or is_state('binary_sensor.moved_from_bedroom_to_hallway', 'on') -%}
            true
          {%- else -%}
            false
          {%- endif -%}

group:
  bathroom_activity_entities:
    name: Bathroom Activity Entities
    entities:
      - input_boolean.bathroom_activity_override
      - input_select.bathroom_room_state
      - input_select.latest_motion
      - binary_sensor.badevaerelse_motion
      - binary_sensor.badevaerelse_bevaegelse
      - binary_sensor.bathroom_door_activity
      - binary_sensor.bathroom_occupied
      - binary_sensor.badevarelse_las
      - input_boolean.showering

automation:
  - alias: activate_light_profile_bathroom_bright
    id: activate_light_profile_bathroom_bright
    mode: restart
    initial_state: true
    trigger:
      - platform: state
        entity_id: &room_light_profile sensor.bathroom_active_light_profile
        to: "Bright"
        variables:
          previous: "{{ trigger.from_state.state }}"
      - platform: event
        event_type: refresh_light_profile
        variables:
          previous: "{{ states('sensor.bathroom_active_light_profile') }}"
    condition:
      - condition: state
        entity_id: *room_light_profile
        state: "Bright"
    action:
      - parallel:
          - service: script.difficult_light
            data:
              entity_id: light.badevaerelse_skab
              state: on
              brightness: 255
              hs_color: [29, 15]
              transition: "{{ (states('input_number.scene_transition_time') | float or 0.5) }}"
          - service: script.difficult_light
            data:
              entity_id: light.badevaerelse_loft
              state: on
              brightness: 255
              color_temp: 153
              transition: "{{ (states('input_number.scene_transition_time') | float or 0.5) }}"
          - service: scene.apply
            data:
              transition: "{{ (states('input_number.scene_transition_time') | float or 0.5) }}"
              entities:
                light.badevaerelse_lampe:
                  state: on
                  brightness: 255
                  color_temp: 240

          - service: light.turn_on
            target:
              entity_id: light.bathroom_tablet
            data:
              brightness: 255

  - alias: activate_light_profile_bathroom_default
    id: activate_light_profile_bathroom_default
    mode: restart
    initial_state: true
    trigger:
      - platform: state
        entity_id: *room_light_profile
        to: "Default"
        variables:
          previous: "{{ trigger.from_state.state }}"
      - platform: event
        event_type: refresh_light_profile
        variables:
          previous: "{{ states('sensor.bathroom_active_light_profile') }}"
    condition:
      - condition: state
        entity_id: *room_light_profile
        state: "Default"
    action:
      - parallel:
          - service: script.difficult_light
            data:
              entity_id: light.badevaerelse_skab
              state: on
              brightness: 255
              hs_color: "{{ state_attr('sensor.theme', 'secondary_color_hue') }}"
              transition: "{{ (states('input_number.scene_transition_time') | float or 0.5) }}"
          - service: script.difficult_light
            data:
              entity_id: light.badevaerelse_loft
              state: on
              brightness: 230
              color_temp: 333
              transition: "{{ (states('input_number.scene_transition_time') | float or 0.5) }}"
          - service: scene.apply
            data:
              transition: "{{ (states('input_number.scene_transition_time') | float or 0.5) }}"
              entities:
                light.badevaerelse_lampe:
                  state: on
                  brightness: 255
                  color_temp: 240

          - service: light.turn_on
            target:
              entity_id: light.bathroom_tablet
            data:
              brightness: 255

  - alias: activate_light_profile_bathroom_dimmed
    id: activate_light_profile_bathroom_dimmed
    mode: restart
    initial_state: true
    trigger:
      - platform: state
        entity_id: *room_light_profile
        variables:
          previous: "{{ trigger.from_state.state }}"
      - platform: event
        event_type: refresh_light_profile
        variables:
          previous: "{{ states('sensor.bathroom_active_light_profile') }}"
    condition:
      - condition: state
        entity_id: *room_light_profile
        state: "Dimmed"
    action:
      - parallel:
          - service: script.difficult_light
            data:
              entity_id: light.badevaerelse_skab
              state: on
              brightness: 96
              hs_color: "{{ state_attr('sensor.theme', 'secondary_color_hue') }}"
              transition: "{{ (states('input_number.scene_transition_time') | float or 0.5) }}"
          - service: script.difficult_light
            data:
              entity_id: light.badevaerelse_loft
              state: on
              brightness: 168
              hs_color: "{{ state_attr('sensor.theme', 'primary_color_eglo') }}"
              transition: "{{ (states('input_number.scene_transition_time') | float or 0.5) }}"
          - service: scene.apply
            data:
              transition: "{{ (states('input_number.scene_transition_time') | float or 0.5) }}"
              entities:
                light.badevaerelse_lampe:
                  state: on
                  brightness: 127
                  color_temp: 370

          - service: light.turn_on
            target:
              entity_id: light.bathroom_tablet
            data:
              brightness: 127

  - alias: activate_light_profile_bathroom_ambient
    id: activate_light_profile_bathroom_ambient
    mode: restart
    initial_state: true
    trigger:
      - platform: state
        entity_id: *room_light_profile
        to: "Ambient"
        variables:
          previous: "{{ trigger.from_state.state }}"
      - platform: event
        event_type: refresh_light_profile
        variables:
          previous: "{{ states('sensor.bathroom_active_light_profile') }}"
    condition:
      - condition: state
        entity_id: *room_light_profile
        state: "Ambient"
    action:
      - parallel:
          - service: script.difficult_light
            data:
              entity_id: light.badevaerelse_skab
              state: on
              brightness: 32
              hs_color: "{{ state_attr('sensor.theme', 'secondary_color_hue') }}"
              transition: "{{ (states('input_number.scene_transition_time') | float or 0.5) }}"
          - service: script.difficult_light
            data:
              entity_id: light.badevaerelse_loft
              state: on
              brightness: 68
              hs_color: "{{ state_attr('sensor.theme', 'primary_color_eglo') }}"
              transition: "{{ (states('input_number.scene_transition_time') | float or 0.5) }}"
          - service: scene.apply
            data:
              transition: "{{ (states('input_number.scene_transition_time') | float or 0.5) }}"
              entities:
                light.badevaerelse_lampe:
                  state: on
                  brightness: 64
                  hs_color: "{{ state_attr('sensor.theme', 'secondary_color_hue') }}"

          - service: light.turn_on
            target:
              entity_id: light.bathroom_tablet
            data:
              brightness: 64

  - alias: activate_light_profile_bathroom_night
    id: activate_light_profile_bathroom_night
    mode: restart
    initial_state: true
    trigger:
      - platform: state
        entity_id: *room_light_profile
        to: "Night"
        variables:
          previous: "{{ trigger.from_state.state }}"
      - platform: event
        event_type: refresh_light_profile
        variables:
          previous: "{{ states('sensor.bathroom_active_light_profile') }}"
    condition:
      - condition: state
        entity_id: *room_light_profile
        state: "Night"
    action:
      - parallel:
          - service: script.difficult_light
            data:
              entity_id: light.badevaerelse_skab
              state: on
              brightness: 24
              hs_color: [0, 100]
              transition: "{{ (states('input_number.scene_transition_time') | float or 0.5) }}"
          - service: script.difficult_light
            data:
              entity_id: light.badevaerelse_loft
              state: on
              brightness: 32
              hs_color: [0, 100]
              transition: "{{ (states('input_number.scene_transition_time') | float or 0.5) }}"
          - service: scene.apply
            data:
              transition: "{{ (states('input_number.scene_transition_time') | float or 0.5) }}"
              entities:
                light.badevaerelse_lampe:
                  state: on
                  brightness: 2
                  color_temp: 454

          - service: light.turn_on
            target:
              entity_id: light.bathroom_tablet
            data:
              brightness: 24

  - alias: activate_light_profile_bathroom_off
    id: activate_light_profile_bathroom_off
    mode: restart
    initial_state: true
    trigger:
      - platform: state
        entity_id: *room_light_profile
        to: "Off"
        variables:
          previous: "{{ trigger.from_state.state }}"
      - platform: event
        event_type: refresh_light_profile
        variables:
          previous: "{{ states('sensor.bathroom_active_light_profile') }}"
    condition:
      - condition: state
        entity_id: *room_light_profile
        state: "Off"
    action:
      - service: scene.apply
        data:
          transition: "{{ (states('input_number.scene_transition_time') | float or 0.5) }}"
          entities:
            light.badevaerelse_loft:
              state: off
            light.badevaerelse_lampe:
              state: off
            light.badevaerelse_skab:
              state: off
      - delay: "{{ (states('input_number.scene_transition_time') | float or 0.5) + 1 }}"
      - condition: "{{ is_state('sensor.bathroom_selected_light_profile', 'Off') }}"
      - service: light.turn_off
        target:
          entity_id: light.badevaerelse_loft
      # For some reason the light will still zombie a minute after turning off. So we kill it again.
      - delay: 00:01:00
      - condition: "{{ is_state('sensor.bathroom_selected_light_profile', 'Off') }}"
      - service: light.turn_off
        target:
          entity_id: light.badevaerelse_loft
      - service: light.turn_off
        target:
          entity_id: light.bathroom_tablet

input_boolean:
  bathroom_activity_override:
    icon: mdi:checkbox-multiple-marked
    name: Bathroom Activity Override
  bathroom_separate_light_profile:
    name: Bathroom Separate Light Profile
    icon: mdi:heart-broken

input_select:
  bathroom_room_state:
    name: Bathroom State
    options:
      - active
      - inactive
      - "off"

  bathroom_light_profile:
    name: bathroom Light Profile
    options:
      - Bright
      - Default
      - Dimmed
      - Ambient
      - Night
      - "Off"

light:
  - platform: template
    lights:
      bathroom_activity_override:
        friendly_name: Light Bathroom Activity Override
        icon_template: mdi:checkbox-multiple-marked
        value_template: "{{ is_state('input_boolean.bathroom_activity_override', 'on') }}"
        turn_on:
          service: input_boolean.turn_on
          data:
            entity_id: input_boolean.bathroom_activity_override
        turn_off:
          service: input_boolean.turn_off
          data:
            entity_id: input_boolean.bathroom_activity_override

      bathroom_separate_light_profile:
        friendly_name: Light Bathroom Separate Light Profile
        icon_template: mdi:heart-broken
        value_template: "{{ is_state('input_boolean.bathroom_separate_light_profile', 'on') }}"
        turn_on:
          service: input_boolean.turn_on
          data:
            entity_id: input_boolean.bathroom_separate_light_profile
        turn_off:
          service: input_boolean.turn_off
          data:
            entity_id: input_boolean.bathroom_separate_light_profile

      bathroom_light_profile_bright:
        friendly_name: Lyst
        icon_template: "mdi:brightness-7"
        value_template: "{{ is_state('sensor.bathroom_selected_light_profile', 'Bright') }}"
        turn_on:
          event: set_light_profile
          event_data:
            room: bathroom
            profile: Bright
        turn_off:
          event: bathroom_light_profile_off_null

      bathroom_light_profile_default:
        friendly_name: Normal
        icon_template: "mdi:brightness-5"
        value_template: "{{ is_state('sensor.bathroom_selected_light_profile', 'Default') }}"
        turn_on:
          event: set_light_profile
          event_data:
            room: bathroom
            profile: Default
        turn_off:
          event: bathroom_light_profile_off_null

      bathroom_light_profile_dimmed:
        friendly_name: Dæmpet
        icon_template: "mdi:brightness-6"
        value_template: "{{ is_state('sensor.bathroom_selected_light_profile', 'Dimmed') }}"
        turn_on:
          event: set_light_profile
          event_data:
            room: bathroom
            profile: Dimmed
        turn_off:
          event: bathroom_light_profile_off_null

      bathroom_light_profile_ambient:
        friendly_name: Baggrund
        icon_template: "mdi:brightness-4"
        value_template: "{{ is_state('sensor.bathroom_selected_light_profile', 'Ambient') }}"
        turn_on:
          event: set_light_profile
          event_data:
            room: bathroom
            profile: Ambient
        turn_off:
          event: bathroom_light_profile_off_null

      bathroom_light_profile_night:
        friendly_name: Nat
        icon_template: "mdi:brightness-3"
        value_template: "{{ is_state('sensor.bathroom_selected_light_profile', 'Night') }}"
        turn_on:
          event: set_light_profile
          event_data:
            room: bathroom
            profile: Night
        turn_off:
          event: bathroom_light_profile_off_null

      bathroom_light_profile_off:
        friendly_name: "Slukket"
        icon_template: "mdi:power"
        value_template: "{{ is_state('sensor.bathroom_selected_light_profile', 'Off') }}"
        turn_on:
          event: set_light_profile
          event_data:
            room: bathroom
            profile: "Off"
        turn_off:
          event: bathroom_light_profile_off_null
