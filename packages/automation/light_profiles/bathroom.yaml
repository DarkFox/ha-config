sensor:
  - platform: template
    sensors:
      bathroom_selected_light_profile:
        friendly_name: Bathroom Selected Light Profile
        value_template: >
          {%- if is_state('input_boolean.bathroom_separate_light_profile', 'off') -%}
            {{ states('input_select.light_profile') }}
          {%- else -%}
            {{ states('input_select.bathroom_light_profile') }}
          {%- endif -%}

      bathroom_auto_light_profile:
        friendly_name: Bathroom Auto Light Profile
        value_template: "{{ states('sensor.bathroom_selected_light_profile') }}"

      bathroom_light_profile:
        friendly_name: Bathroom Light Profile
        value_template: >
          {%- if is_state('input_boolean.auto_light_profile', 'off') -%}
            {{ states('sensor.bathroom_selected_light_profile') }}
          {%- else -%}
            {{ states('sensor.bathroom_auto_light_profile') }}
          {%- endif -%}

      bathroom_inactive_light_profile:
        friendly_name: Bathroom Inactive Light Profile
        value_template: >-
          {% set profile = states('sensor.bathroom_light_profile') %}
          {% set profiles = state_attr('input_select.light_profile', 'options') %}
          {{ profiles[profiles.index(profile)+1] or 'Off' }}

      bathroom_active_light_profile:
        friendly_name: Bathroom Active Light Profile
        value_template: >
          {%- if is_state('input_select.bathroom_room_state', 'active') -%}
            {%- if is_state('input_boolean.party_lights', 'off') -%}
              {{ states('sensor.bathroom_light_profile') }}
            {%- else -%}
              Party
            {%- endif -%}
          {%-
            elif is_state('input_select.bathroom_room_state', 'inactive')
            or is_state('binary_sensor.bathroom_activity_predicted', 'on')
          -%}
            {{ states('sensor.bathroom_inactive_light_profile') }}
          {%- else %}
            Off
          {%- endif -%}

      bathroom_activity_state:
        friendly_name: BadevÃ¦relse aktivitetsstatus
        value_template: >-
          {%- if is_state('binary_sensor.bathroom_activity', 'on') -%}
              on
          {%- elif is_state('binary_sensor.bathroom_activity_predicted', 'on') -%}
              predicted
          {%- else -%}
              off
          {%- endif -%}

binary_sensor:
  - platform: template
    sensors:
      bathroom_activity:
        friendly_name: "Bathroom Activity"
        value_template: >
          {%- if is_state('input_boolean.bathroom_activity_override', 'on') -%}
            {{ 'true' if is_state('input_select.bathroom_room_state', 'active') else 'false' }}
          {%- elif is_state('binary_sensor.badevaerelse_motion', 'on')
          or is_state('input_boolean.showering', 'on')
          or is_state('binary_sensor.bathroom_door_activity', 'on')
          or is_state('input_select.latest_motion', 'Bathroom') -%}
            true
          {% else -%}
            false
          {% endif -%}

      bathroom_activity_predicted:
        friendly_name: "Bathroom Activity Predicted"
        value_template: >
          {%- 
            if is_state('binary_sensor.moved_from_living_room_to_hallway', 'on')
            or is_state('binary_sensor.moved_from_bedroom_to_hallway', 'on')
          -%}
            true
          {% else -%}
            false
          {% endif -%}

automation:
  - alias: activate_light_profile_bathroom_bright
    initial_state: true
    trigger:
      - platform: state
        entity_id: &room_light_profile sensor.bathroom_active_light_profile
        to: "Bright"
      - platform: event
        event_type: refresh_light_profile
    condition:
      - condition: state
        entity_id: *room_light_profile
        state: "Bright"
    action:
      - service: scene.apply
        data:
          entities:
            light.badevaerelse_loft:
              state: on
              brightness: 255
              color_temp: 300
      - service: scene.apply
        data:
          transition: "{{ (states('input_number.scene_transition_time') or 0.5) | float }}"
          entities:
            light.badevaerelse_lampe:
              state: on
              brightness: 255
              color_temp: 300
              effect: "None"
            light.bathroom_tablet:
              state: on
              brightness: 255

  - alias: activate_light_profile_bathroom_default
    initial_state: true
    trigger:
      - platform: state
        entity_id: *room_light_profile
        to: "Default"
      - platform: event
        event_type: refresh_light_profile
    condition:
      - condition: state
        entity_id: *room_light_profile
        state: "Default"
    action:
      - service: scene.apply
        data_template:
          entities:
            light.badevaerelse_loft:
              state: on
              brightness: 127
              color_temp: 300
      - service: scene.apply
        data_template:
          transition: "{{ (states('input_number.scene_transition_time') or 0.5) | float }}"
          entities:
            light.badevaerelse_lampe:
              state: on
              brightness: 255
              color_temp: 250
              effect: "None"
            light.bathroom_tablet:
              state: on
              brightness: 255

  - alias: activate_light_profile_bathroom_dimmed
    initial_state: true
    trigger:
      - platform: state
        entity_id: *room_light_profile
        to: "Dimmed"
      - platform: event
        event_type: refresh_light_profile
    condition:
      - condition: state
        entity_id: *room_light_profile
        state: "Dimmed"
    action:
      - service: scene.apply
        data_template:
          entities:
            light.badevaerelse_loft:
              state: on
              brightness: 2
              color_temp: 300
      - service: scene.apply
        data_template:
          transition: "{{ (states('input_number.scene_transition_time') or 0.5) | float }}"
          entities:
            light.badevaerelse_lampe:
              state: on
              brightness: 127
              color_temp: 370
              effect: "None"
            light.bathroom_tablet:
              state: on
              brightness: 127

  - alias: activate_light_profile_bathroom_ambient
    initial_state: true
    trigger:
      - platform: state
        entity_id: *room_light_profile
        to: "Ambient"
      - platform: event
        event_type: refresh_light_profile
    condition:
      - condition: state
        entity_id: *room_light_profile
        state: "Ambient"
    action:
      - service: scene.apply
        data_template:
          entities:
            light.badevaerelse_loft:
              state: on
              brightness: 60
              hs_color: "{{ state_attr('sensor.theme', 'primary_color') }}"
      - service: scene.apply
        data_template:
          transition: "{{ (states('input_number.scene_transition_time') or 0.5) | float }}"
          entities:
            light.badevaerelse_lampe:
              state: on
              brightness: 64
              hs_color: "{{ state_attr('sensor.theme', 'secondary_color_hue') }}"
              effect: "None"
            light.bathroom_tablet:
              state: on
              brightness: 64

  - alias: activate_light_profile_bathroom_night
    initial_state: true
    trigger:
      - platform: state
        entity_id: *room_light_profile
        to: "Night"
      - platform: event
        event_type: refresh_light_profile
    condition:
      - condition: state
        entity_id: *room_light_profile
        state: "Night"
    action:
      - service: scene.apply
        data_template:
          entities:
            light.badevaerelse_loft:
              state: on
              brightness: 8
              hs_color: [255, 0, 0]
      - service: scene.apply
        data_template:
          transition: "{{ (states('input_number.scene_transition_time') or 0.5) | float }}"
          entities:
            light.badevaerelse_lampe:
              state: on
              brightness: 2
              color_temp: 454
              effect: "None"
            light.bathroom_tablet:
              state: on
              brightness: 24

  - alias: activate_light_profile_bathroom_night_brighter
    initial_state: true
    trigger:
      - platform: state
        entity_id: *room_light_profile
        to: "Night"
        for:
          minutes: 1
    condition:
      - condition: state
        entity_id: *room_light_profile
        state: "Night"
    action:
      - service: scene.apply
        data_template:
          transition: 30
          entities:
            light.badevaerelse_lampe:
              state: on
              brightness: 64
              color_temp: 370
              effect: "None"
      - delay:
          seconds: 30
      - service: scene.apply
        data_template:
          entities:
            light.badevaerelse_loft:
              state: on
              brightness: 127
              hs_color: [255, 0, 0]

  - alias: activate_light_profile_bathroom_off
    initial_state: true
    trigger:
      - platform: state
        entity_id: *room_light_profile
        to: "Off"
      - platform: event
        event_type: refresh_light_profile
    condition:
      - condition: state
        entity_id: *room_light_profile
        state: "Off"
    action:
      - service: scene.apply
        data_template:
          entities:
            light.badevaerelse_loft:
              state: off
      - service: scene.apply
        data_template:
          transition: "{{ (states('input_number.scene_transition_time') or 0.5) | float }}"
          entities:
            light.badevaerelse_lampe:
              state: off
            light.badevaerelse_skab:
              state: off
            light.bathroom_tablet:
              state: off

  - alias: activate_light_profile_bathroom_party
    initial_state: true
    trigger:
      - platform: state
        entity_id: *room_light_profile
        to: "Party"
      - platform: event
        event_type: refresh_light_profile
    condition:
      - condition: state
        entity_id: *room_light_profile
        state: "Party"
    action:
      - service: scene.apply
        data_template:
          entities:
            light.badevaerelse_loft:
              state: on
              brightness: 255
              hs_color: "{{ state_attr('sensor.theme', 'primary_color') }}"
              effect: "Solid"
      - service: scene.apply
        data_template:
          transition: "{{ (states('input_number.scene_transition_time') or 0.5) | float }}"
          entities:
            light.badevaerelse_lampe:
              state: on
              brightness: 255
              color_temp: 370
              effect: "None"
            light.badevaerelse_skab:
              state: on
              brightness: 172
              hs_color: "{{ state_attr('sensor.theme', 'secondary_color') }}"
              effect: "Solid"
            light.bathroom_tablet:
              state: on
              brightness: 127

input_boolean:
  bathroom_activity_override:
    icon: mdi:checkbox-multiple-marked
    name: Bathroom Activity Override
  bathroom_separate_light_profile:
    name: Bathroom Separate Light Profile
    icon: mdi:heart-broken

input_select:
  bathroom_room_state:
    name: Bathroom State
    options:
      - active
      - inactive
      - "off"

  bathroom_light_profile:
    name: bathroom Light Profile
    options:
      - Bright
      - Default
      - Dimmed
      - Ambient
      - Night
      - "Off"

light:
  - platform: template
    lights:
      bathroom_activity_override:
        friendly_name: Light Bathroom Activity Override
        icon_template: mdi:checkbox-multiple-marked
        value_template: "{{ is_state('input_boolean.bathroom_activity_override', 'on') }}"
        turn_on:
          service: input_boolean.turn_on
          data:
            entity_id: input_boolean.bathroom_activity_override
        turn_off:
          service: input_boolean.turn_off
          data:
            entity_id: input_boolean.bathroom_activity_override

      bathroom_separate_light_profile:
        friendly_name: Light Bathroom Separate Light Profile
        icon_template: mdi:heart-broken
        value_template: "{{ is_state('input_boolean.bathroom_separate_light_profile', 'on') }}"
        turn_on:
          service: input_boolean.turn_on
          data:
            entity_id: input_boolean.bathroom_separate_light_profile
        turn_off:
          service: input_boolean.turn_off
          data:
            entity_id: input_boolean.bathroom_separate_light_profile

      bathroom_light_profile_bright:
        friendly_name: Lyst
        icon_template: "mdi:brightness-7"
        value_template: "{{ is_state('sensor.bathroom_selected_light_profile', 'Bright') }}"
        turn_on:
          event: set_light_profile
          event_data:
            room: bathroom
            profile: Bright
        turn_off:
          event: bathroom_light_profile_off_null

      bathroom_light_profile_default:
        friendly_name: Normal
        icon_template: "mdi:brightness-5"
        value_template: "{{ is_state('sensor.bathroom_selected_light_profile', 'Default') }}"
        turn_on:
          event: set_light_profile
          event_data:
            room: bathroom
            profile: Default
        turn_off:
          event: bathroom_light_profile_off_null

      bathroom_light_profile_dimmed:
        friendly_name: DÃ¦mpet
        icon_template: "mdi:brightness-6"
        value_template: "{{ is_state('sensor.bathroom_selected_light_profile', 'Dimmed') }}"
        turn_on:
          event: set_light_profile
          event_data:
            room: bathroom
            profile: Dimmed
        turn_off:
          event: bathroom_light_profile_off_null

      bathroom_light_profile_ambient:
        friendly_name: Baggrund
        icon_template: "mdi:brightness-4"
        value_template: "{{ is_state('sensor.bathroom_selected_light_profile', 'Ambient') }}"
        turn_on:
          event: set_light_profile
          event_data:
            room: bathroom
            profile: Ambient
        turn_off:
          event: bathroom_light_profile_off_null

      bathroom_light_profile_night:
        friendly_name: Nat
        icon_template: "mdi:brightness-3"
        value_template: "{{ is_state('sensor.bathroom_selected_light_profile', 'Night') }}"
        turn_on:
          event: set_light_profile
          event_data:
            room: bathroom
            profile: Night
        turn_off:
          event: bathroom_light_profile_off_null

      bathroom_light_profile_off:
        friendly_name: "Slukket"
        icon_template: "mdi:power"
        value_template: "{{ is_state('sensor.bathroom_selected_light_profile', 'Off') }}"
        turn_on:
          event: set_light_profile
          event_data:
            room: bathroom
            profile: "Off"
        turn_off:
          event: bathroom_light_profile_off_null

group:
  bathroom_activity_entities:
    name: Bathroom Activity Entities
    entities:
      - input_boolean.bathroom_activity_override
      - input_select.bathroom_room_state
      - input_select.latest_motion
      - binary_sensor.badevaerelse_motion
      - input_boolean.showering
