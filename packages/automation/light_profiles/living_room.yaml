template:
  - sensor:
      - name: "Living Room Selected Light Profile"
        unique_id: ca86f7a7-a43a-4a25-b4d5-6cacc35d6423
        state: >-
          {%- from 'light_profile.jinja' import room_selected_light_profile -%}
          {{ room_selected_light_profile('living_room') }}

      - name: "Living Room Auto Light Profile"
        unique_id: b17cf83b-017a-4fbd-9430-9f6257b78837
        state: >-
          {%- from 'light_profile.jinja' import room_auto_light_profile -%}
          {%- set override_profile = 'Default' if is_state('binary_sensor.quest_in_use_delayed', 'on') else none -%}
          {%- set override_profile = '[[profile]]' if states('sensor.stue_gardin_position')|int(0) < 40 else override_profile -%}
          {{ room_auto_light_profile(
              'living_room',
              'sensor.average_balcony_brightness',
              override_profile
          ) }}

      - name: "Living Room Light Profile"
        unique_id: 93b0bd07-3bf5-4f95-9df2-4acc2bf0db31
        state: >-
          {%- from 'light_profile.jinja' import room_light_profile -%}
          {{ room_light_profile('living_room') }}

      - name: "Living Room Inactive Light Profile"
        unique_id: 0883338b-d4a1-4bc8-808a-478411d8b407
        state: >-
          {%- from 'light_profile.jinja' import room_inactive_light_profile -%}
          {{ room_inactive_light_profile('living_room') }}

      - name: "Living Room Active Light Profile"
        unique_id: b472e543-6c88-4095-8938-166e39b99c5a
        state: >-
          {%- from 'light_profile.jinja' import room_active_light_profile -%}
          {{ room_active_light_profile('living_room') }}

      - name: "Living Room Activity State"
        unique_id: 2a71154f-d7fd-41bd-bc83-dd641e4c2d1f
        state: >-
          {%- from 'light_profile.jinja' import room_activity_state -%}
          {{ room_activity_state('living_room') }}

  - binary_sensor:
      - name: "Living Room Activity"
        unique_id: 19b85710-348a-4efa-bfcb-68b20b64232e
        state: >
          {%- from 'light_profile.jinja' import room_activity -%}
          {{ room_activity('living_room') }}

group:
  living_room_activity_entities:
    name: Living Room Activity Entities
    entities:
      - input_boolean.living_room_activity_override
      - input_select.latest_motion
      - binary_sensor.stue_motion
      - binary_sensor.stue_tilstedevarelse_alle_zoner
      - binary_sensor.stue_tilstedevarelse_bar
      - binary_sensor.stue_tilstedevarelse_spisebord
      - binary_sensor.stue_tilstedevarelse_sofa
      - input_boolean.bar_open
      - media_player.stue_shield

automation:
  - alias: activate_light_profile_living_room_bright
    id: activate_light_profile_living_room_bright
    mode: restart
    initial_state: true
    trigger:
      - platform: state
        entity_id: &room_light_profile sensor.living_room_active_light_profile
        to: "Bright"
      - platform: event
        event_type: refresh_light_profile
    condition:
      - condition: state
        entity_id: *room_light_profile
        state: "Bright"
    action:
      - service: scene.apply
        data:
          transition: "{{ (states('input_number.scene_transition_time') | float or 0.5) }}"
          entities:
            group.living_room_lights:
              state: on
              brightness: 255
              color_temp: 250

  - alias: activate_light_profile_living_room_default
    id: activate_light_profile_living_room_default
    mode: restart
    initial_state: true
    trigger:
      - platform: state
        entity_id: *room_light_profile
        to: "Default"
      - platform: event
        event_type: refresh_light_profile
    condition:
      - condition: state
        entity_id: *room_light_profile
        state: "Default"
    action:
      - service: script.turn_on
        target:
          entity_id: script.hue_scene_or_light_profile
        data:
          variables:
            room: Stue
            scene: "{{ states('sensor.theme') }}"
            fallback_scene:
              transition: "{{ (states('input_number.scene_transition_time') | float or 0.5) }}"
              entities:
                light.stue_spots:
                  state: on
                  brightness: 128
                  color_temp: 430

                light.sofa_laeselampe:
                  state: on
                  brightness: 172
                  color_temp: 390

                light.sofalampe:
                  state: on
                  brightness: 128
                  color_temp: 430

                light.skaenk_lampe:
                  state: on
                  brightness: 128
                  color_temp: 430

                light.sofa_uplight:
                  state: on
                  brightness: 255
                  hs_color: "{{ state_attr('sensor.theme', 'primary_color_hue') }}"

                light.globe:
                  state: on
                  brightness: 192
                  hs_color: "{{ state_attr('sensor.theme', 'secondary_color_hue') }}"

                light.stue_tv:
                  state: on
                  brightness: 192
                  hs_color: "{{ state_attr('sensor.theme', 'primary_color_hue') }}"

                light.stue_tv_bund:
                  state: on
                  brightness: 255
                  hs_color: "{{ state_attr('sensor.theme', 'secondary_color_hue') }}"

      - service: script.turn_on
        target:
          entity_id: script.wled_preset_or_light_profile
        data:
          variables:
            preset: "{{ states('sensor.theme') }}"
            entities:
              light.stue_gardinstang:
                state: on
                brightness: 96
                hs_color: "{{ state_attr('sensor.theme', 'primary_color_12v') }}"
                effect: "Solid"
              light.tv_mobel:
                state: on
                brightness: 127
                hs_color: "{{ state_attr('sensor.theme', 'secondary_color') }}"
                effect: "Solid"
              light.stue_skaenk_gulv:
                state: on
                brightness: 127
                hs_color: "{{ state_attr('sensor.theme', 'secondary_color') }}"
                effect: "Solid"

      - service: scene.apply
        data:
          transition: "{{ (states('input_number.scene_transition_time') | float or 0.5) }}"
          entities:
            light.stue_skaenk:
              state: on
              brightness: 128
              hs_color: "{{ state_attr('sensor.theme', 'primary_color_hue') }}"
              effect: "{{ states('sensor.theme') if states('sensor.theme') is in state_attr('light.stue_skaenk', 'effect_list') else '' }}"

  - alias: activate_light_profile_living_room_dimmed
    id: activate_light_profile_living_room_dimmed
    mode: restart
    initial_state: true
    trigger:
      - platform: state
        entity_id: *room_light_profile
        to: "Dimmed"
      - platform: event
        event_type: refresh_light_profile
    condition:
      - condition: state
        entity_id: *room_light_profile
        state: "Dimmed"
    action:
      - service: script.turn_on
        target:
          entity_id: script.hue_scene_or_light_profile
        data:
          variables:
            room: Stue
            scene: "{{ states('sensor.theme') }}"
            fallback_scene:
              transition: "{{ (states('input_number.scene_transition_time') | float or 0.5) }}"
              entities:
                light.globe:
                  state: on
                  brightness: 127
                  hs_color: "{{ state_attr('sensor.theme', 'secondary_color_hue') }}"

                light.sofa_laeselampe:
                  state: on
                  brightness: 76
                  color_temp: 454

                light.sofa_uplight:
                  state: on
                  brightness: 172
                  hs_color: "{{ state_attr('sensor.theme', 'primary_color_hue') }}"

                light.sofalampe:
                  state: on
                  brightness: 76
                  color_temp: 454

                light.skaenk_lampe:
                  state: on
                  brightness: 76
                  color_temp: 454

                light.stue_spot_1:
                  state: on
                  brightness: 127
                  hs_color: "{{ state_attr('sensor.theme', 'secondary_color_hue') }}"

                light.stue_spot_2:
                  state: on
                  brightness: 127
                  hs_color: "{{ state_attr('sensor.theme', 'secondary_color_hue') }}"

                light.stue_spot_3:
                  state: on
                  brightness: 76
                  color_temp: 454

                light.stue_tv:
                  state: on
                  brightness: 127
                  hs_color: "{{ state_attr('sensor.theme', 'primary_color_hue') }}"

                light.stue_tv_bund:
                  state: on
                  brightness: 127
                  hs_color: "{{ state_attr('sensor.theme', 'secondary_color_hue') }}"

      - service: script.turn_on
        target:
          entity_id: script.wled_preset_or_light_profile
        data:
          variables:
            preset: "{{ states('sensor.theme') }}"
            entities:
              light.stue_gardinstang:
                state: on
                brightness: 48
                hs_color: "{{ state_attr('sensor.theme', 'primary_color_12v') }}"
                effect: "Solid"
              light.tv_mobel:
                state: on
                brightness: 48
                hs_color: "{{ state_attr('sensor.theme', 'secondary_color') }}"
                effect: "Solid"
              light.stue_skaenk_gulv:
                state: on
                brightness: 64
                hs_color: "{{ state_attr('sensor.theme', 'secondary_color') }}"
                effect: "Solid"

      - service: scene.apply
        data:
          transition: "{{ (states('input_number.scene_transition_time') | float or 0.5) }}"
          entities:
            light.stue_skaenk:
              state: on
              brightness: 64
              hs_color: "{{ state_attr('sensor.theme', 'primary_color_hue') }}"
              effect: "{{ states('sensor.theme') if states('sensor.theme') is in state_attr('light.stue_skaenk', 'effect_list') else '' }}"

  - alias: activate_light_profile_living_room_ambient
    id: activate_light_profile_living_room_ambient
    mode: restart
    initial_state: true
    trigger:
      - platform: state
        entity_id: *room_light_profile
        to: "Ambient"
      - platform: event
        event_type: refresh_light_profile
    condition:
      - condition: state
        entity_id: *room_light_profile
        state: "Ambient"
    action:
      - service: script.turn_on
        target:
          entity_id: script.hue_scene_or_light_profile
        data:
          variables:
            room: Stue
            scene: "{{ states('sensor.theme') }}"
            fallback_scene:
              transition: "{{ (states('input_number.scene_transition_time') | float or 0.5) }}"
              entities:
                light.stue_spots:
                  state: off
                light.sofa_laeselampe:
                  state: on
                  brightness: 32
                  hs_color: "{{ state_attr('sensor.theme', 'secondary_color_hue') }}"

                light.sofa_uplight:
                  state: on
                  brightness: 86
                  hs_color: "{{ state_attr('sensor.theme', 'primary_color_hue') }}"

                light.sofalampe:
                  state: on
                  brightness: 32
                  hs_color: "{{ state_attr('sensor.theme', 'secondary_color_hue') }}"

                light.skaenk_lampe:
                  state: on
                  brightness: 32
                  hs_color: "{{ state_attr('sensor.theme', 'primary_color_hue') }}"

                light.globe:
                  state: on
                  brightness: 32
                  hs_color: "{{ state_attr('sensor.theme', 'secondary_color_hue') }}"

                light.stue_tv:
                  state: on
                  brightness: 32
                  hs_color: "{{ state_attr('sensor.theme', 'primary_color_hue') }}"

                light.stue_tv_bund:
                  state: on
                  brightness: 32
                  hs_color: "{{ state_attr('sensor.theme', 'secondary_color_hue') }}"

      - service: script.turn_on
        target:
          entity_id: script.wled_preset_or_light_profile
        data:
          variables:
            preset: "{{ states('sensor.theme') }}"
            entities:
              light.stue_gardinstang:
                state: on
                brightness: 16
                hs_color: "{{ state_attr('sensor.theme', 'primary_color_12v') }}"
                effect: "Solid"
              light.tv_mobel:
                state: on
                brightness: 8
                hs_color: "{{ state_attr('sensor.theme', 'secondary_color') }}"
                effect: "Solid"
              light.stue_skaenk_gulv:
                state: on
                brightness: 8
                hs_color: "{{ state_attr('sensor.theme', 'secondary_color') }}"
                effect: "Solid"

      - service: scene.apply
        data:
          transition: "{{ (states('input_number.scene_transition_time') | float or 0.5) }}"
          entities:
            light.stue_skaenk:
              state: on
              brightness: 16
              hs_color: "{{ state_attr('sensor.theme', 'primary_color_hue') }}"
              effect: "{{ states('sensor.theme') if states('sensor.theme') is in state_attr('light.stue_skaenk', 'effect_list') else '' }}"

  - alias: activate_light_profile_living_room_night
    id: activate_light_profile_living_room_night
    mode: restart
    initial_state: true
    trigger:
      - platform: state
        entity_id: *room_light_profile
        to: "Night"
      - platform: event
        event_type: refresh_light_profile
    condition:
      - condition: state
        entity_id: *room_light_profile
        state: "Night"
    action:
      - service: scene.apply
        data:
          transition: "{{ (states('input_number.scene_transition_time') | float or 0.5) }}"
          entities:
            light.globe:
              state: on
              brightness: 12
              rgb_color: [255, 0, 0]

            light.tv_mobel:
              state: on
              brightness: 4
              rgb_color: [255, 0, 0]
              effect: "Solid"
            light.stue_gardinstang:
              state: on
              brightness: 6
              rgb_color: [255, 0, 0]
              effect: "Solid"
            light.sofa_laeselampe:
              state: on
              brightness: 12
              rgb_color: [255, 0, 0]

            light.sofa_uplight:
              state: on
              brightness: 12
              rgb_color: [255, 0, 0]

            light.stue_spots:
              state: off
            light.sofalampe:
              state: on
              brightness: 2
              rgb_color: [255, 0, 0]

            light.skaenk_lampe:
              state: on
              brightness: 2
              rgb_color: [255, 0, 0]

            light.stue_skaenk_gulv:
              state: on
              brightness: 4
              rgb_color: [255, 0, 0]
              effect: "Solid"
            light.stue_tv:
              state: on
              brightness: 2
              rgb_color: [255, 0, 0]

            light.stue_tv_bund:
              state: on
              brightness: 2
              rgb_color: [255, 0, 0]

            light.stue_skaenk:
              state: on
              brightness: 8
              rgb_color: [255, 0, 0]

  - alias: activate_light_profile_living_room_off
    id: activate_light_profile_living_room_off
    mode: restart
    initial_state: true
    trigger:
      - platform: state
        entity_id: *room_light_profile
        to: "Off"
      - platform: event
        event_type: refresh_light_profile
    condition:
      - condition: state
        entity_id: *room_light_profile
        state: "Off"
    action:
      - service: light.turn_off
        data:
          transition: "{{ (states('input_number.scene_transition_time') | float or 0.5) }}"
          entity_id: group.living_room_lights

  - alias: activate_light_profile_living_room_party
    id: activate_light_profile_living_room_party
    mode: restart
    initial_state: true
    trigger:
      - platform: state
        entity_id: *room_light_profile
        to: "Party"
      - platform: event
        event_type: refresh_light_profile
    condition:
      - condition: state
        entity_id: *room_light_profile
        state: "Party"
    action:
      - service: scene.apply
        data:
          transition: "{{ (states('input_number.scene_transition_time') | float or 0.5) }}"
          entities:
            light.sofa_laeselampe:
              state: on
              effect: "colorloop"
              brightness: 127
            light.stue_tv:
              state: on
              brightness: 32
              hs_color: "{{ state_attr('sensor.theme', 'primary_color_hue') }}"

            light.sofa_uplight:
              state: on
              effect: "colorloop"
              brightness: 127
            light.sofalampe:
              state: on
              brightness: 32
              hs_color: "{{ state_attr('sensor.theme', 'primary_color_hue') }}"

            light.skaenk_lampe:
              state: on
              brightness: 32
              hs_color: "{{ state_attr('sensor.theme', 'primary_color_hue') }}"

            light.globe:
              state: on
              brightness: 32
              hs_color: "{{ state_attr('sensor.theme', 'secondary_color_hue') }}"

            light.stue_spots:
              state: on
              brightness: 32
              hs_color: "{{ state_attr('sensor.theme', 'secondary_color_hue') }}"

            light.stue_tv_bund:
              state: on
              brightness: 32
              hs_color: "{{ state_attr('sensor.theme', 'secondary_color_hue') }}"

            light.tv_mobel:
              state: on
              effect: "Twinklefox"
              brightness: 255
            light.stue_gardinstang:
              state: on
              effect: "Twinklefox"
              brightness: 255
            light.stue_skaenk_gulv:
              state: on
              effect: "Twinklefox"
              brightness: 255
            light.stue_skaenk:
              state: on
              brightness: 24
              effect: "Pulse Pop Beats"

  - alias: activate_light_profile_living_room_dining_table
    id: activate_light_profile_living_room_dining_table
    mode: restart
    initial_state: true
    trigger:
      - platform: state
        entity_id: *room_light_profile
      - platform: state
        entity_id: binary_sensor.stue_tilstedevarelse_spisebord
        to: "on"
      - platform: state
        entity_id: binary_sensor.stue_tilstedevarelse_spisebord
        to: "off"
        for:
          seconds: 30
      - platform: event
        event_type: refresh_light_profile
    action:
      - service: script.turn_on
        target:
          entity_id: >-
            {% if (states('sensor.living_room_selected_light_profile')|lower) not in ['night', 'off'] and is_state('binary_sensor.stue_tilstedevarelse_spisebord', 'on') %}
              script.dining_table_lights_active
            {% else %}
              script.dining_table_lights_{{ (states('sensor.living_room_active_light_profile')|lower) }}
            {% endif %}

  - alias: activate_light_profile_living_room_bar
    id: activate_light_profile_living_room_bar
    mode: restart
    initial_state: true
    trigger:
      - platform: state
        entity_id: *room_light_profile
      - platform: state
        entity_id: input_boolean.bar_open
      - platform: state
        entity_id: binary_sensor.stue_tilstedevarelse_bar
        to: "on"
      - platform: state
        entity_id: binary_sensor.stue_tilstedevarelse_bar
        to: "off"
        for:
          seconds: 30
      - platform: event
        event_type: refresh_light_profile
    action:
      - service: script.turn_on
        target:
          entity_id: >-
            {% 
              if (states('sensor.living_room_selected_light_profile')|lower) not in ['night', 'off']
              and (
                is_state('binary_sensor.stue_tilstedevarelse_bar', 'on')
                or is_state('input_boolean.bar_open', 'on')
              )
            %}
              script.bar_lights_open
            {% else %}
              script.bar_lights_{{ (states('sensor.living_room_active_light_profile')|lower) }}
            {% endif %}

script:
  dining_table_lights_active:
    alias: "Dining Table Lights Active"
    sequence:
      - service: scene.apply
        data:
          transition: "{{ (states('input_number.scene_transition_time') | float or 0.5) }}"
          entities:
            light.spisebord:
              state: on
              brightness: 128
              color_temp: 430

  dining_table_lights_default:
    alias: "Dining Table Lights Default"
    sequence:
      - service: scene.apply
        data:
          transition: "{{ (states('input_number.scene_transition_time') | float or 0.5) }}"
          entities:
            light.spisebord:
              state: on
              brightness: 128
              color_temp: 430

  dining_table_lights_dimmed:
    alias: "Dining Table Lights Dimmed"
    sequence:
      - service: scene.apply
        data:
          transition: "{{ (states('input_number.scene_transition_time') | float or 0.5) }}"
          entities:
            light.spisebord:
              state: on
              brightness: 76
              color_temp: 500

  dining_table_lights_ambient:
    alias: "Dining Table Lights Ambient"
    sequence:
      - service: scene.apply
        data:
          transition: "{{ (states('input_number.scene_transition_time') | float or 0.5) }}"
          entities:
            light.spisebord:
              state: on
              brightness: 32
              hs_color: "{{ state_attr('sensor.theme', 'secondary_color_hue') }}"

  dining_table_lights_night:
    alias: "Dining Table Lights Night"
    sequence:
      - service: scene.apply
        data:
          transition: "{{ (states('input_number.scene_transition_time') | float or 0.5) }}"
          entities:
            light.spisebord:
              state: on
              brightness: 12
              rgb_color: [255, 0, 0]

  dining_table_lights_off:
    alias: "Dining Table Lights Off"
    sequence:
      - service: scene.apply
        data:
          transition: "{{ (states('input_number.scene_transition_time') | float or 0.5) }}"
          entities:
            light.spisebord:
              state: off

  dining_table_lights_party:
    alias: "Dining Table Lights Party"
    sequence:
      - service: scene.apply
        data:
          transition: "{{ (states('input_number.scene_transition_time') | float or 0.5) }}"
          entities:
            light.spisebord:
              state: on
              brightness: 32
              hs_color: "{{ state_attr('sensor.theme', 'secondary_color_hue') }}"

  bar_lights_open:
    alias: "Bar Lights Open"
    sequence:
      - service: script.turn_on
        target:
          entity_id: script.wled_preset_or_light_profile
        data:
          variables:
            preset: "{{ states('sensor.theme') }}"
            entities:
              light.bar:
                state: on
                brightness: 255
                hs_color: "{{ state_attr('sensor.theme', 'secondary_color') }}"
                effect: "Solid"
              light.barbord:
                state: on
                brightness: 255
                hs_color: "{{ state_attr('sensor.theme', 'secondary_color') }}"
                effect: "Solid"

      - service: scene.apply
        data:
          transition: "{{ (states('input_number.scene_transition_time') | float or 0.5) }}"
          entities:
            light.barskab_under:
              state: on
              brightness: 255

            light.barskab_over:
              state: on
              brightness: 255

            light.bar_hylde_spots:
              state: on
              brightness: 255

            light.bar_spots:
              state: on
              brightness: 255

            light.bar_uplight:
              state: on
              brightness: 255

            light.bar_skuffer:
              state: on
              brightness: 255

  bar_lights_default:
    alias: "Bar Lights Default"
    sequence:
      - service: script.turn_on
        target:
          entity_id: script.wled_preset_or_light_profile
        data:
          variables:
            preset: "{{ states('sensor.theme') }}"
            entities:
              light.bar:
                state: on
                brightness: 127
                hs_color: "{{ state_attr('sensor.theme', 'secondary_color') }}"
                effect: "Solid"
              light.barbord:
                state: on
                brightness: 172
                hs_color: "{{ state_attr('sensor.theme', 'secondary_color') }}"
                effect: "Solid"

      - service: scene.apply
        data:
          transition: "{{ (states('input_number.scene_transition_time') | float or 0.5) }}"
          entities:
            light.barskab_under:
              state: on
              brightness: 127

            light.barskab_over:
              state: on
              brightness: 127

            light.bar_hylde_spots:
              state: on
              brightness: 127

            light.bar_spots:
              state: on
              brightness: 127

            light.bar_uplight:
              state: on
              brightness: 127

            light.bar_skuffer:
              state: off

  bar_lights_dimmed:
    alias: "Bar Lights Dimmed"
    sequence:
      - service: script.turn_on
        target:
          entity_id: script.wled_preset_or_light_profile
        data:
          variables:
            preset: "{{ states('sensor.theme') }}"
            entities:
              light.bar:
                state: on
                brightness: 64
                hs_color: "{{ state_attr('sensor.theme', 'secondary_color') }}"
                effect: "Solid"
              light.barbord:
                state: on
                brightness: 72
                hs_color: "{{ state_attr('sensor.theme', 'secondary_color') }}"
                effect: "Solid"

      - service: scene.apply
        data:
          transition: "{{ (states('input_number.scene_transition_time') | float or 0.5) }}"
          entities:
            light.barskab_under:
              state: on
              brightness: 32
            light.barskab_over:
              state: on
              brightness: 32
            light.bar_hylde_spots:
              state: on
              brightness: 32
            light.bar_spots:
              state: on
              brightness: 32
            light.bar_uplight:
              state: on
              brightness: 32
            light.bar_skuffer:
              state: off

  bar_lights_ambient:
    alias: "Bar Lights Ambient"
    sequence:
      - service: script.turn_on
        target:
          entity_id: script.wled_preset_or_light_profile
        data:
          variables:
            preset: "{{ states('sensor.theme') }}"
            entities:
              light.bar:
                state: on
                brightness: 8
                hs_color: "{{ state_attr('sensor.theme', 'secondary_color') }}"
                effect: "Solid"
              light.barbord:
                state: on
                brightness: 26
                hs_color: "{{ state_attr('sensor.theme', 'secondary_color') }}"
                effect: "Solid"

      - service: scene.apply
        data:
          transition: "{{ (states('input_number.scene_transition_time') | float or 0.5) }}"
          entities:
            light.barskab_under:
              state: off
            light.barskab_over:
              state: off
            light.bar_hylde_spots:
              state: off
            light.bar_spots:
              state: off
            light.bar_uplight:
              state: off
            light.bar_skuffer:
              state: off

  bar_lights_night:
    alias: "Bar Lights Night"
    sequence:
      - service: scene.apply
        data:
          transition: "{{ (states('input_number.scene_transition_time') | float or 0.5) }}"
          entities:
            light.barskab_under:
              state: off
            light.barskab_over:
              state: off
            light.bar_hylde_spots:
              state: off
            light.bar_spots:
              state: off
            light.bar_uplight:
              state: off
            light.bar_skuffer:
              state: off
            light.bar:
              state: on
              brightness: 4
              rgb_color: [255, 0, 0]
              effect: "Solid"
            light.barbord:
              state: on
              brightness: 16
              rgb_color: [255, 0, 0]
              effect: "Solid"

  bar_lights_off:
    alias: "Bar Lights Off"
    sequence:
      - service: scene.apply
        data:
          transition: "{{ (states('input_number.scene_transition_time') | float or 0.5) }}"
          entities:
            light.barskab_under:
              state: off
            light.barskab_over:
              state: off
            light.bar_hylde_spots:
              state: off
            light.bar_spots:
              state: off
            light.bar_uplight:
              state: off
            light.bar_skuffer:
              state: off
            light.bar:
              state: off
            light.barbord:
              state: off

  bar_lights_party:
    alias: "Bar Lights Party"
    sequence:
      - service: scene.apply
        data:
          transition: "{{ (states('input_number.scene_transition_time') | float or 0.5) }}"
          entities:
            light.barskab_under:
              state: on
              brightness: 16
            light.barskab_over:
              state: on
              brightness: 16
            light.bar_hylde_spots:
              state: on
              brightness: 16
            light.bar_spots:
              state: on
              brightness: 16
            light.bar_uplight:
              state: on
              brightness: 16
            light.bar_skuffer:
              state: off
            light.bar:
              state: on
              effect: "Twinklefox"
              brightness: 255
            light.barbord:
              state: on
              effect: "Twinklefox"
              brightness: 255

input_boolean:
  living_room_activity_override:
    icon: mdi:checkbox-multiple-marked
    name: Livingroom Activity Override
  living_room_separate_light_profile:
    name: Living Room Separate Light Profile
    icon: mdi:heart-broken

input_select:
  living_room_room_state:
    name: Livingroom State
    options:
      - active
      - inactive
      - "off"

  living_room_light_profile:
    name: living room Light Profile
    options:
      - Bright
      - Default
      - Dimmed
      - Ambient
      - Night
      - "Off"

light:
  - platform: template
    lights:
      living_room_activity_override:
        friendly_name: Light Living Room Activity Override
        icon_template: mdi:checkbox-multiple-marked
        value_template: "{{ is_state('input_boolean.living_room_activity_override', 'on') }}"
        turn_on:
          service: input_boolean.turn_on
          data:
            entity_id: input_boolean.living_room_activity_override
        turn_off:
          service: input_boolean.turn_off
          data:
            entity_id: input_boolean.living_room_activity_override

      living_room_separate_light_profile:
        friendly_name: Light Living Room Separate Light Profile
        icon_template: mdi:heart-broken
        value_template: "{{ is_state('input_boolean.living_room_separate_light_profile', 'on') }}"
        turn_on:
          service: input_boolean.turn_on
          data:
            entity_id: input_boolean.living_room_separate_light_profile
        turn_off:
          service: input_boolean.turn_off
          data:
            entity_id: input_boolean.living_room_separate_light_profile

      living_room_light_profile_bright:
        friendly_name: Lyst
        icon_template: "mdi:brightness-7"
        value_template: "{{ is_state('sensor.living_room_selected_light_profile', 'Bright') }}"
        turn_on:
          event: set_light_profile
          event_data:
            room: living_room
            profile: Bright
        turn_off:
          event: living_room_light_profile_off_null

      living_room_light_profile_default:
        friendly_name: Normal
        icon_template: "mdi:brightness-5"
        value_template: "{{ is_state('sensor.living_room_selected_light_profile', 'Default') }}"
        turn_on:
          event: set_light_profile
          event_data:
            room: living_room
            profile: Default
        turn_off:
          event: living_room_light_profile_off_null

      living_room_light_profile_dimmed:
        friendly_name: Dæmpet
        icon_template: "mdi:brightness-6"
        value_template: "{{ is_state('sensor.living_room_selected_light_profile', 'Dimmed') }}"
        turn_on:
          event: set_light_profile
          event_data:
            room: living_room
            profile: Dimmed
        turn_off:
          event: living_room_light_profile_off_null

      living_room_light_profile_ambient:
        friendly_name: Baggrund
        icon_template: "mdi:brightness-4"
        value_template: "{{ is_state('sensor.living_room_selected_light_profile', 'Ambient') }}"
        turn_on:
          event: set_light_profile
          event_data:
            room: living_room
            profile: Ambient
        turn_off:
          event: living_room_light_profile_off_null

      living_room_light_profile_night:
        friendly_name: Nat
        icon_template: "mdi:brightness-3"
        value_template: "{{ is_state('sensor.living_room_selected_light_profile', 'Night') }}"
        turn_on:
          event: set_light_profile
          event_data:
            room: living_room
            profile: Night
        turn_off:
          event: living_room_light_profile_off_null

      living_room_light_profile_off:
        friendly_name: "Slukket"
        icon_template: "mdi:power"
        value_template: "{{ is_state('sensor.living_room_selected_light_profile', 'Off') }}"
        turn_on:
          event: set_light_profile
          event_data:
            room: living_room
            profile: "Off"
        turn_off:
          event: living_room_light_profile_off_null
