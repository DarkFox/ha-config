binary_sensor:
  - platform: template
    sensors:
      moved_from_living_room_to_hallway:
        value_template: "false"
        # value_template: >
        #   {% set from = 'stue_motion' %}
        #   {% set to = 'gang_motion' %}
        #   {% set window = 10 %}
        #   {{
        #     as_timestamp(states.binary_sensor[to].last_updated) - as_timestamp(states.binary_sensor[from].last_updated) < window
        #     and as_timestamp(states.binary_sensor[to].last_updated) - as_timestamp(states.binary_sensor[from].last_updated) > 0
        #     and is_state('binary_sensor.' ~ to ~ '_sensor', 'on')
        #   }}

      moved_from_bedroom_to_hallway:
        value_template: "false"
        # value_template: >
        #   {% set from = 'sovevaerelse_motion' %}
        #   {% set to = 'gang_motion' %}
        #   {% set window = 10 %}
        #   {{
        #     as_timestamp(states.binary_sensor[to].last_updated) - as_timestamp(states.binary_sensor[from].last_updated) < window
        #     and as_timestamp(states.binary_sensor[to].last_updated) - as_timestamp(states.binary_sensor[from].last_updated) > 0
        #     and is_state('binary_sensor.' ~ to ~ '_sensor', 'on')
        #   }}

      moved_from_toilet_to_hallway:
        value_template: "false"
        # value_template: >
        #   {% set from = 'kokken_motion' %}
        #   {% set to = 'gang_motion' %}
        #   {% set window = 10 %}
        #   {{
        #     as_timestamp(states.binary_sensor[to].last_updated) - as_timestamp(states.binary_sensor[from].last_updated) < window
        #     and as_timestamp(states.binary_sensor[to].last_updated) - as_timestamp(states.binary_sensor[from].last_updated) > 0
        #     and is_state('binary_sensor.' ~ to ~ '_sensor', 'on')
        #   }}

      moved_from_bathroom_to_hallway:
        value_template: "false"
        # value_template: >
        #   {% set from = 'badevaerelse_motion' %}
        #   {% set to = 'gang_motion' %}
        #   {% set window = 10 %}
        #   {{
        #     as_timestamp(states.binary_sensor[to].last_updated) - as_timestamp(states.binary_sensor[from].last_updated) < window
        #     and as_timestamp(states.binary_sensor[to].last_updated) - as_timestamp(states.binary_sensor[from].last_updated) > 0
        #     and is_state('binary_sensor.' ~ to ~ '_sensor', 'on')
        #   }}

      moved_from_hallway_to_living_room:
        value_template: "false"
        # value_template: >
        #   {% set from = 'gang_motion' %}
        #   {% set to = 'stue_motion' %}
        #   {% set window = 10 %}
        #   {{
        #     as_timestamp(states.binary_sensor[to].last_updated) - as_timestamp(states.binary_sensor[from].last_updated) < window
        #     and as_timestamp(states.binary_sensor[to].last_updated) - as_timestamp(states.binary_sensor[from].last_updated) > 0
        #     and is_state('binary_sensor.' ~ to ~ '_sensor', 'on')
        #   }}

      moved_from_living_room_to_office:
        value_template: "false"
        # value_template: >
        #   {% set from = 'stue_motion' %}
        #   {% set to = 'kontor_motion' %}
        #   {% set window = 10 %}
        #   {{
        #     as_timestamp(states.binary_sensor[to].last_updated) - as_timestamp(states.binary_sensor[from].last_updated) < window
        #     and as_timestamp(states.binary_sensor[to].last_updated) - as_timestamp(states.binary_sensor[from].last_updated) > 0
        #     and is_state('binary_sensor.' ~ to ~ '_sensor', 'on')
        #   }}

      moved_from_office_to_living_room:
        value_template: "false"
        # value_template: >
        #   {% set from = 'kontor_motion' %}
        #   {% set to = 'stue_motion' %}
        #   {% set window = 10 %}
        #   {{
        #     as_timestamp(states.binary_sensor[to].last_updated) - as_timestamp(states.binary_sensor[from].last_updated) < window
        #     and as_timestamp(states.binary_sensor[to].last_updated) - as_timestamp(states.binary_sensor[from].last_updated) > 0
        #     and is_state('binary_sensor.' ~ to ~ '_sensor', 'on')
        #   }}

      moved_from_bed:
        value_template: "false"
        # value_template: >
        #   {% set from = 'seng_bevaegelse' %}
        #   {% set to = 'sovevaerelse_gulv_bevaegelse' %}
        #   {% set window = 10 %}
        #   {{
        #     as_timestamp(states.binary_sensor[to].last_updated) - as_timestamp(states.binary_sensor[from].last_updated) < window
        #     and as_timestamp(states.binary_sensor[to].last_updated) - as_timestamp(states.binary_sensor[from].last_updated) > 0
        #     and is_state('binary_sensor.' ~ to, 'on')
        #   }}
