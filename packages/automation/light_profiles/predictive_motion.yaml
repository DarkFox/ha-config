binary_sensor:
  - platform: template
    sensors:
      moved_from_living_room_to_hallway:
        value_template: >
          {% set from = 'livingroom' %}
          {% set to = 'hallway' %}
          {% set window = 10 %}
          {{  
            as_timestamp(states.binary_sensor[to ~'_sensor'].last_updated) - as_timestamp(states.binary_sensor[from ~'_sensor'].last_updated) < window 
            and as_timestamp(states.binary_sensor[to ~'_sensor'].last_updated) - as_timestamp(states.binary_sensor[from ~'_sensor'].last_updated) > 0 
            and is_state('binary_sensor.' ~ to ~ '_sensor', 'on') 
          }}

      moved_from_bedroom_to_hallway:
        value_template: >
          {% set from = 'bedroom' %}
          {% set to = 'hallway' %}
          {% set window = 10 %}
          {{  
            as_timestamp(states.binary_sensor[to ~'_sensor'].last_updated) - as_timestamp(states.binary_sensor[from ~'_sensor'].last_updated) < window 
            and as_timestamp(states.binary_sensor[to ~'_sensor'].last_updated) - as_timestamp(states.binary_sensor[from ~'_sensor'].last_updated) > 0 
            and is_state('binary_sensor.' ~ to ~ '_sensor', 'on') 
          }}

      moved_from_toilet_to_hallway:
        value_template: >
          {% set from = 'kitchen' %}
          {% set to = 'hallway' %}
          {% set window = 10 %}
          {{  
            as_timestamp(states.binary_sensor[to ~'_sensor'].last_updated) - as_timestamp(states.binary_sensor[from ~'_sensor'].last_updated) < window 
            and as_timestamp(states.binary_sensor[to ~'_sensor'].last_updated) - as_timestamp(states.binary_sensor[from ~'_sensor'].last_updated) > 0 
            and is_state('binary_sensor.' ~ to ~ '_sensor', 'on') 
          }}

      moved_from_bathroom_to_hallway:
        value_template: >
          {% set from = 'toilet' %}
          {% set to = 'hallway' %}
          {% set window = 10 %}
          {{  
            as_timestamp(states.binary_sensor[to ~'_sensor'].last_updated) - as_timestamp(states.binary_sensor[from ~'_sensor'].last_updated) < window 
            and as_timestamp(states.binary_sensor[to ~'_sensor'].last_updated) - as_timestamp(states.binary_sensor[from ~'_sensor'].last_updated) > 0 
            and is_state('binary_sensor.' ~ to ~ '_sensor', 'on') 
          }}

      moved_from_hallway_to_living_room:
        value_template: >
          {% set from = 'hallway' %}
          {% set to = 'livingroom' %}
          {% set window = 10 %}
          {{  
            as_timestamp(states.binary_sensor[to ~'_sensor'].last_updated) - as_timestamp(states.binary_sensor[from ~'_sensor'].last_updated) < window 
            and as_timestamp(states.binary_sensor[to ~'_sensor'].last_updated) - as_timestamp(states.binary_sensor[from ~'_sensor'].last_updated) > 0 
            and is_state('binary_sensor.' ~ to ~ '_sensor', 'on') 
          }}

      moved_from_living_room_to_office:
        value_template: >
          {% set from = 'livingroom' %}
          {% set to = 'office' %}
          {% set window = 10 %}
          {{  
            as_timestamp(states.binary_sensor[to ~'_sensor'].last_updated) - as_timestamp(states.binary_sensor[from ~'_sensor'].last_updated) < window 
            and as_timestamp(states.binary_sensor[to ~'_sensor'].last_updated) - as_timestamp(states.binary_sensor[from ~'_sensor'].last_updated) > 0 
            and is_state('binary_sensor.' ~ to ~ '_sensor', 'on') 
          }}

      moved_from_office_to_living_room:
        value_template: >
          {% set from = 'office' %}
          {% set to = 'livingroom' %}
          {% set window = 10 %}
          {{  
            as_timestamp(states.binary_sensor[to ~'_sensor'].last_updated) - as_timestamp(states.binary_sensor[from ~'_sensor'].last_updated) < window 
            and as_timestamp(states.binary_sensor[to ~'_sensor'].last_updated) - as_timestamp(states.binary_sensor[from ~'_sensor'].last_updated) > 0 
            and is_state('binary_sensor.' ~ to ~ '_sensor', 'on') 
          }}

      moved_from_bed:
        value_template: >
          {% set from = 'seng_bevaegelse' %}
          {% set to = 'sovevaerelse_gulv_bevaegelse' %}
          {% set window = 10 %}
          {{  
            as_timestamp(states.binary_sensor[to].last_updated) - as_timestamp(states.binary_sensor[from].last_updated) < window 
            and as_timestamp(states.binary_sensor[to].last_updated) - as_timestamp(states.binary_sensor[from].last_updated) > 0 
            and is_state('binary_sensor.' ~ to, 'on') 
          }}
