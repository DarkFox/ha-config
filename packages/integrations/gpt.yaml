template:
  - sensor:
      - name: GPT API Key
        state: !secret writesonic_api_key
      - name: GPT Prompt
        state: "{{ now() }}"
        attributes:
          prompt: >-
            {% from 'easy_time.jinja' import weekday, month %}
            Funger som en personlig assistent. Du er vittig og taler samtaleagtigt.
            Hils på mig på en venlig måde, sig hvad klokken er, hvad mine planer er i dag,
            kommenter på vejret (husk at fortælle mig temperaturen), og giv en kort anbefaling om påklædning.
            Den aktuelle tid er {{ states('sensor.day_name') }} den {{ now().day }}.
            {{ states('sensor.month_name') }}, klokken {{ states('sensor.time') }}.
            {% if is_state('sensor.days_to_next_work', '0') %}
              I dag skal jeg skal møde på arbejde klokken {{ states('sensor.next_work_start_clock') }}.
              {% if is_state('binary_sensor.on_call_today', 'on') %}
                {% set end_time = state_attr('calendar.arbejdskalender', 'end_time') | as_datetime %}
                Efter arbejde har jeg tilkaldevagt indtil {{ weekday(end_time.weekday) }} klokken. {{ end_time | as_timestamp | timestamp_custom("%H:%M")}}
              {% endif %}
            {% else %}
              Jeg har fri i dag.
            {% endif %}
            {% if is_state('sensor.days_to_next_personal_event', '0') %}
              Den første aftale i min kalender i dag er "{{ state_attr('calendar.personlig', 'message') }}".
              Det starter klokken {{ states('sensor.next_personal_event_start_clock') }}.
            {% else %}
              Jeg har ingen aftaler i kalenderen i dag
            {% endif %}
            Temperaturen udenfor lige nu er {{ states('sensor.weatherflow_air_temperature') }} °C.
            Her er dagens vejrudsigt: {{ states('sensor.dmi_vejr') }}.
            {{ state_attr('sensor.dmi_vejr_tts', 'text') }}

command_line:
  - sensor:
      name: GPT Briefing
      scan_interval: 2629743
      value_template: "{{ now() }}: {{ value | truncate(100) }}"
      json_attributes:
        - message
      command: >
        curl
        --request POST "https://api.writesonic.com/v2/business/content/chatsonic?engine=premium&language=da"
        --header "X-API-KEY: {{ states('sensor.gpt_api_key') }}"
        --header "accept: application/json"
        --header "content-type: application/json"
        --data '{
                  "enable_google_results": false,
                  "enable_memory": false,
                  "input_text": {{ state_attr('sensor.gpt_prompt', 'prompt') | replace("\n"," ") | regex_replace("  +", ' ') | tojson }}
                }'
