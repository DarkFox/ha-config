input_text:
  translation_output:
    name: Translation output
    icon: mdi:comment-text-outline

script:
  translate:
    fields:
      message:
        description: The message to translate
        example: "Hello, how are you?"
      force_translate:
        description: Force translation even if cached
        example: true
    sequence:
      - choose:
          # Check if the translation is cached
          - conditions:
              - condition: template
                value_template: "{{ not (force_translate|bool(false)) }}"
              - condition: template
                value_template: >-
                  {{ true if state_attr('sensor.translation_cache', 'translations') and message in state_attr('sensor.translation_cache', 'translations') else false }}
            sequence:
              - variables:
                  translation: "{{ state_attr('sensor.translation_cache', 'translations')[message] }}"
              - service: input_text.set_value
                target:
                  entity_id: input_text.translation_output
                data:
                  value: "{{ translation }}"
        default:
          - service: conversation.process
            data:
              text: "Oversæt dette til dansk (returner kun den oversatte tekst): {{message}}"
              language: DA
              agent_id: 4e0a875b09f8a19a405e1bf3e5c4adac
            response_variable: agent
          - variables:
              translation: "{{ agent.response.speech.plain.speech }}"
          - event: translation_response_received
            event_data:
              message: "{{ message }}"
              translation: "{{ translation }}"
          - service: input_text.set_value
            target:
              entity_id: input_text.translation_output
            data:
              value: "{{ translation }}"
      - variables:
          output:
            translation: "{{ states('input_text.translation_output') }}"
      - stop: "Return translation"
        response_variable: output

  insert_translation:
    fields:
      message:
        description: The message to translate
        example: "Hello, how are you?"
      translation:
        description: The translation to insert
        example: "Hej, hvordan har du det?"
    sequence:
      - event: translation_response_received
        event_data:
          message: "{{ message }}"
          translation: "{{ translation }}"

intent_script:
  AskNabu:
    action:
      - service: conversation.process
        data:
          text: "{{query}}"
          language: DA
          agent_id: 4e0a875b09f8a19a405e1bf3e5c4adac
        response_variable: agent
      - event: openai_response_received
        event_data:
          full_response: "{{ agent.response.speech.plain.speech }}"
    speech:
      text: "{{ states['sensor.openai_query_response'].attributes.full_response }}"

template:
  - trigger:
      platform: event
      event_type: translation_response_received
    sensor:
      - name: "Translation Cache"
        state: "{{ as_timestamp(now()) | timestamp_custom('%H:%M:%S %d %b %Y', true) }}"
        attributes:
          translations: >
            {% set old_translations = state_attr('sensor.translation_cache', 'translations') or {} %}
            {% set new_message = trigger.event.data.message %}
            {% set new_translation = trigger.event.data.translation %}
            {
              {% for message, translation in old_translations.items() %}
                "{{ message }}": "{{ translation }}",
              {% endfor %}
              "{{ new_message }}": "{{ new_translation }}"
            }

  - trigger:
      platform: event
      event_type: openai_response_received
    sensor:
      - name: "OpenAI query response"
        state: "{{now()}}"
        attributes:
          full_response: "{{ trigger.event.data.full_response }}"

  - sensor:
      - name: GPT Briefing Prompt
        state: "{{ now() }}"
        attributes:
          prompt: >-
            Start med en venlig hilsen, informer mig om den aktuelle dag og tid, og gennemgå min daglige plan punkt for punkt. 
            Gennemgå de seneste overskrifter fra DR nyheder.
            Kommenter på dagens vejr, og husk at inkludere temperaturen.
            Afslut med en anbefaling om hvilken påklædning der ville være passende i dag.

      - name: GPT Prompt
        state: "{{ now() }}"
        attributes:
          prompt: >-
            Jeg vil have, at du fungerer som smart home manager for Home Assistant.
            Jeg vil give information om smart home sammen med et spørgsmål, du vil ærligt korrigere eller svare ved hjælp af informationen i en sætning i hverdags sprog.

            Nuværende dag og tid: {{ state_attr('calendar.helligdage', 'message')+', ' if is_state('calendar.helligdage', 'on') }}
            {{ states('sensor.day_name') }}, den {{ now().day }}. {{ states('sensor.month_name') }}, klokken {{ states('sensor.time') }}.

            Tilgængelige enheder:
            ```csv
            entity_id,name,state,aliases
            {% for entity in exposed_entities %}
            {{ entity.entity_id }},{{ entity.name }},{{ entity.state }},{{entity.aliases | join('/')}}
            {% endfor %}
            ```

            DR nyheder: 
            ```csv
            overskrift
            {% for overskrift in state_attr('sensor.dr_seneste_nyt', 'latest') %}
            "{{ overskrift }}"
            {% endfor %}
            ```

            Agenda:
            ```json
            {{ (state_attr('sensor.vagtplan_agenda', 'agenda')
            + state_attr('sensor.arbejde_agenda', 'agenda')
            + state_attr('sensor.personlig_agenda', 'agenda')
            + state_attr('sensor.tripit_agenda', 'agenda'))|sort(attribute='start') | list }}
            ```

            Temperaturen udenfor er {{ states('sensor.ude_temperatur')|replace('.',',') }} °C.
            Vejrudsigten er: {{ states('sensor.dmi_vejr') }}. {{ state_attr('sensor.dmi_vejr_tts', 'text') }}

            Den nuværende tilstand af enhederne er angivet i tilgængelige enheder.
            De seneste overskrifter fra DR nyheder er angivet i DR nyheder.
            Brug kun execute_services funktionen til den anmodede handling, ikke til nuværende tilstande.

            Du er ikke begrænset til kun at svare om smart home, du kan også svare på generelle spørgsmål.
