weather:
  - platform: darksky
    api_key: !secret darksky_api_key
    mode: daily

sensor:
  - platform: rest
    name: dmi_weather_raw
    resource: !secret dmi_weather_url
    scan_interval: 300
    value_template: "{{ value_json.regiondata[0].products[0].timestamp }}"
    json_attributes:
      - regiondata

  - platform: mqtt
    name: "DMI Vejr"
    state_topic: "dmi_weather/state"
    json_attributes_topic: "dmi_weather/attributes"

  - platform: rest
    name: dmi_warnings_raw
    resource: !secret dmi_warnings_url
    scan_interval: 300
    force_update: True
    value_template: "{{ value_json.warnings[0].time or 0 }}"
    json_attributes:
      - locationWarnings
      - actualWarnings
      - fivedayWarnings

  - platform: mqtt
    name: "DMI Aktuel Varsel"
    state_topic: "dmi_current_warning/state"
    json_attributes_topic: "dmi_current_warning/attributes"

  - platform: mqtt
    name: "DMI Aktuelle Varsler"
    state_topic: "dmi_current_warnings/state"
    json_attributes_topic: "dmi_current_warnings/attributes"

  - platform: mqtt
    name: "DMI Kommende Varsler"
    state_topic: "dmi_future_warnings/state"
    json_attributes_topic: "dmi_future_warnings/attributes"

  # https://www.dmi.dk/fileadmin/assets/Varselsikoner/tage-risiko.svg
  # https://dmi.dk/Varsler/

automation:
  - alias: update_dmi_weather_sensor
    initial_state: true
    trigger:
      - platform: state
        entity_id: sensor.dmi_weather_raw
    action:
      - service: mqtt.publish
        data_template:
          topic: "dmi_weather/state"
          retain: True
          payload: >-
            {{ states.sensor.dmi_weather_raw.attributes.regiondata[0].products[0].text | regex_findall_index("<overskriftkoebenhavnognordsjaelland.+><text>(.*?)<\/text><\/overskriftkoebenhavnognordsjaelland>", 0) }}
      - service: mqtt.publish
        data_template:
          topic: "dmi_weather/attributes"
          retain: True
          payload: >-
            {%- set text = states.sensor.dmi_weather_raw.attributes.regiondata[0].products[0].text %}
            {
              "date": "{{ text | regex_findall_index("<dato.+><text>(.*?)<\/text><\/dato>", 0) }}",
              "validity": "{{ text | regex_findall_index("<reggyld.+><text>(.*?)<\/text><\/reggyld>", 0) }}",
              "content": "{{ text | regex_findall_index("<koebenhavnognordsjaelland.+><text>(.*?)<\/text><\/koebenhavnognordsjaelland>", 0) }}"
            }

  - alias: update_dmi_warning_sensor
    initial_state: true
    trigger:
      - platform: state
        entity_id: sensor.dmi_warning_raw
    action:
      - service: downloader.download_file
        data_template:
          url: "https://www.dmi.dk/fileadmin/assets/Varselsikoner/{{ states.sensor.dmi_warnings_raw.attributes.actualWarnings[0].icon }}"
          subdir: dmi_warning_icons
      - service: mqtt.publish
        data_template:
          topic: "dmi_current_warning/state"
          retain: True
          payload: >-
            {{ states.sensor.dmi_warnings_raw.attributes.actualWarnings[0].warningTitle }}
      - service: mqtt.publish
        data_template:
          topic: "dmi_current_warning/attributes"
          retain: True
          payload: >-
            {
              "text": "{{ states.sensor.dmi_warnings_raw.attributes.actualWarnings[0].warningText }}",
              "additional_text": "{{ states.sensor.dmi_warnings_raw.attributes.actualWarnings[0].additionalText }}",
              "valid_from": "{{ states.sensor.dmi_warnings_raw.attributes.actualWarnings[0].validFromText }}",
              "valid_to": "{{ states.sensor.dmi_warnings_raw.attributes.actualWarnings[0].validToText }}",
              "issued_at": "{{ states.sensor.dmi_warnings_raw.attributes.actualWarnings[0].issuedAtText }}",
              "category": "{{ states.sensor.dmi_warnings_raw.attributes.actualWarnings[0].formattedCategory }}",
              "valid_from_timestamp": "{{ states.sensor.dmi_warnings_raw.attributes.actualWarnings[0].validFrom }}",
              "valid_to_timestamp": "{{ states.sensor.dmi_warnings_raw.attributes.actualWarnings[0].validTo }}",
              "entity_picture": "/local/downloads/dmi_warning_icons/{{ states.sensor.dmi_warnings_raw.attributes.actualWarnings[0].icon }}"
            }

      - service: mqtt.publish
        data_template:
          topic: "dmi_current_warnings/state"
          retain: True
          payload: >-
            {{ states.sensor.dmi_warnings_raw.attributes.actualWarnings | length }}
      - service: mqtt.publish
        data_template:
          topic: "dmi_current_warnings/attributes"
          retain: True
          payload: >-
            {
            {% for warning in states.sensor.dmi_warnings_raw.attributes.actualWarnings %}
              "{{ warning.issuedAtText }} {{warning.warningTitle}}": {{ warning | string | replace("'", '"') }}{%- if not loop.last %},{%- endif %}
            {% endfor %}
            }
      - service: mqtt.publish
        data_template:
          topic: "dmi_future_warnings/state"
          retain: True
          payload: >-
            {{ states.sensor.dmi_warnings_raw.attributes.fivedayWarnings | length }}
      - service: mqtt.publish
        data_template:
          topic: "dmi_future_warnings/attributes"
          retain: True
          payload: >-
            {
            {% for warning in states.sensor.dmi_warnings_raw.attributes.fivedayWarnings %}
              "{{ warning.issuedAtText }} {{warning.warningTitle}}": {{ warning | string | replace("'", '"') }}{%- if not loop.last %},{%- endif %}
            {% endfor %}
            }