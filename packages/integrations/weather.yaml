sun:

weather:
  - platform: darksky
    api_key: !secret darksky_api_key
    mode: daily
    scan_interval:
      minutes: 3

sensor:
  - platform: darksky
    api_key: !secret darksky_api_key
    language: da
    scan_interval:
      minutes: 3
    monitored_conditions:
      - cloud_cover
      - uv_index
      - nearest_storm_distance
      - nearest_storm_bearing
      - alerts

  - platform: season
    type: meteorological

  - platform: template
    sensors:
      sun_elevation:
        friendly_name: "Sol Højde"
        value_template: "{{ state_attr('sun.sun', 'elevation') }}"
        unit_of_measurement: "°"
      sun_elevation_pct:
        # Between 0-58 (Max possible at home location) to 0-100 (Cuts out negative elevation)
        friendly_name: "Sol Elevation %"
        value_template: "{{ 0.0 if states('sensor.sun_elevation') | float < 0 else (states('sensor.sun_elevation') | float * 100 / 58.0) | round(2) }}"
        unit_of_measurement: "%"
      sun_pct:
        # Amount of sun, minus cloud cover. Totally imaginary number, really :P
        friendly_name: "Sol%"
        value_template: "{{ states('sensor.sun_elevation_pct')|float * (1-(states('sensor.dark_sky_cloud_coverage')|float/100))  }}"
        unit_of_measurement: "%"
      sun_azimuth:
        friendly_name: "Sol Retning"
        value_template: "{{ state_attr('sun.sun', 'azimuth') }}"
        unit_of_measurement: "°"
      outside_temperature:
        friendly_name: "Outside Temperature"
        value_template: "{{ states('sensor.udenfor_temp') }}"
        device_class: temperature
        unit_of_measurement: "°C"
      outside_sealevel_pressure:
        friendly_name: "Udenfor Lufttryk (Havniveau)"
        # Calculated as 0.125 per meter above sea level
        value_template: "{{ states('sensor.udenfor_pressure') | float + 6 }}"
        device_class: pressure
        unit_of_measurement: "hPa"

  - platform: thermal_comfort
    sensors:
      udenfor:
        friendly_name: Udenfor
        temperature_sensor: sensor.udenfor_temp
        humidity_sensor: sensor.udenfor_humidity
        pressure_sensor: sensor.udenfor_pressure

  - platform: rest
    name: dmi_weather_raw
    resource: !secret dmi_weather_url
    headers:
      User-Agent: !secret user_agent
    scan_interval: 300
    value_template: "{{ value_json.regiondata[0].products[0].timestamp }}"
    json_attributes:
      - regiondata

  - platform: mqtt
    name: "DMI Vejr"
    state_topic: "dmi_weather/state"
    json_attributes_topic: "dmi_weather/attributes"

  - platform: rest
    name: dmi_warnings_raw
    resource: !secret dmi_warnings_url
    headers:
      User-Agent: !secret user_agent
    scan_interval: 300
    force_update: True
    value_template: "{{ 0 if value_json.warnings|length < 1 else value_json.warnings[0].time }}"
    json_attributes:
      - warnings
      - day0
      - day1
      - day2
      - day3
      - day4
      - day5
      - vandstand
      - favorite
      
  - platform: rest
    name: dmi_warnings_specific_raw
    resource: !secret dmi_warnings_url
    headers:
      User-Agent: !secret user_agent
    scan_interval: 31536000
    force_update: True
    value_template: "{{ 0 if value_json.warnings|length < 1 else value_json.warnings[0].time }}"
    json_attributes:
      - locationWarnings
      - actualWarnings
      - fivedayWarnings

  - platform: mqtt
    name: "DMI Aktuel Varsel"
    state_topic: "dmi_current_warning/state"
    json_attributes_topic: "dmi_current_warning/attributes"

  - platform: mqtt
    name: "DMI Aktuelle Varsler"
    state_topic: "dmi_current_warnings/state"
    json_attributes_topic: "dmi_current_warnings/attributes"

  - platform: mqtt
    name: "DMI Kommende Varsler"
    state_topic: "dmi_future_warnings/state"
    json_attributes_topic: "dmi_future_warnings/attributes"

binary_sensor:
  - platform: template
    sensors:
      show_weather_warnings:
        value_template: "{{ not is_state('sensor.dmi_aktuelle_varsler', '0') }}"
  - platform: template
    sensors:
      show_coming_weather_warnings:
        value_template: "{{ not is_state('sensor.dmi_kommende_varsler', '0') }}"


automation:
  - alias: severe_weather_warning
    initial_state: true
    trigger:
      platform: template
      value_template: "{{ (state_attr('sensor.dmi_aktuel_varsel', 'category') | int) > 1 }}"
    action:
      - service: notify.phone
        data_template:
          title: "Vejr Varsel: {{ states('sensor.dmi_aktuel_varsel') }}"
          message: "Kategori {{ state_attr('sensor.dmi_aktuel_varsel', 'category') }} varsel: {{ state_attr('sensor.dmi_aktuel_varsel', 'text') }}"
          data:
            icon: "https://goo.gl/xeetdy"
            vibration: "0,500,500,500,500,500,500,500,500,500,500"


  - alias: update_dmi_weather_sensor
    initial_state: true
    trigger:
      - platform: state
        entity_id: sensor.dmi_weather_raw
      - platform: state
        entity_id: binary_sensor.home_assistant_loaded
        to: 'on'
    action:
      - service: mqtt.publish
        data_template:
          topic: "dmi_weather/state"
          retain: True
          payload: >-
            {{ states.sensor.dmi_weather_raw.attributes.regiondata[0].products[0].text | regex_findall_index("<overskriftkoebenhavnognordsjaelland.+><text>(.*?)<\/text><\/overskriftkoebenhavnognordsjaelland>", 0) }}
      - service: mqtt.publish
        data_template:
          topic: "dmi_weather/attributes"
          retain: True
          payload: >-
            {%- set text = states.sensor.dmi_weather_raw.attributes.regiondata[0].products[0].text %}
            {
              "date": "{{ text | regex_findall_index("<dato.+><text>(.*?)<\/text><\/dato>", 0) }}",
              "validity": "{{ text | regex_findall_index("<reggyld.+><text>(.*?)<\/text><\/reggyld>", 0) }}",
              "content": "{{ text | regex_findall_index("<koebenhavnognordsjaelland.+><text>(.*?)<\/text><\/koebenhavnognordsjaelland>", 0) }}"
            }

  - alias: update_dmi_warning_specific_sensor
    trigger:
      - platform: state
        entity_id: sensor.dmi_warnings_raw
      - platform: state
        entity_id: binary_sensor.home_assistant_loaded
        to: 'on'
    condition:
      - condition: template
        value_template: "{{ states.sensor.dmi_warnings_raw.attributes.warnings|length > 0 }}"
    action:
      service: homeassistant.update_entity
      data:
        entity_id: sensor.dmi_warnings_specific_raw

  - alias: update_dmi_warning_sensor
    initial_state: true
    trigger:
      - platform: state
        entity_id: sensor.dmi_warnings_raw
      - platform: state
        entity_id: binary_sensor.home_assistant_loaded
        to: 'on'
    action:
      - delay:
          seconds: 10

      - service: mqtt.publish
        data_template:
          topic: "dmi_current_warning/state"
          retain: True
          payload: >-
            {{ "" if states.sensor.dmi_warnings_raw.attributes.warnings|length < 1 else states.sensor.dmi_warnings_specific_raw.attributes.actualWarnings[0].warningTitle }}
      
      - service: mqtt.publish
        data_template:
          topic: "dmi_current_warning/attributes"
          retain: True
          payload: >-
            {% if states.sensor.dmi_warnings_raw.attributes.warnings|length < 1 %}
              {}
            {% else %}
              {
                "text": "{{ states.sensor.dmi_warnings_specific_raw.attributes.actualWarnings[0].warningText }}",
                "additional_text": "{{ states.sensor.dmi_warnings_specific_raw.attributes.actualWarnings[0].additionalText }}",
                "valid_from": "{{ states.sensor.dmi_warnings_specific_raw.attributes.actualWarnings[0].validFromText }}",
                "valid_to": "{{ states.sensor.dmi_warnings_specific_raw.attributes.actualWarnings[0].validToText }}",
                "issued_at": "{{ states.sensor.dmi_warnings_specific_raw.attributes.actualWarnings[0].issuedAtText }}",
                "category": "{{ states.sensor.dmi_warnings_specific_raw.attributes.actualWarnings[0].formattedCategory }}",
                "valid_from_timestamp": "{{ states.sensor.dmi_warnings_specific_raw.attributes.actualWarnings[0].validFrom }}",
                "valid_to_timestamp": "{{ states.sensor.dmi_warnings_specific_raw.attributes.actualWarnings[0].validTo }}",
                "entity_picture": "/local/downloads/dmi_warning_icons/{{ states.sensor.dmi_warnings_specific_raw.attributes.actualWarnings[0].icon }}"
              }
            {% endif %}

      - service: mqtt.publish
        data_template:
          topic: "dmi_current_warnings/state"
          retain: True
          payload: >-
            {{ 0 if states.sensor.dmi_warnings_raw.attributes.warnings|length < 1 else states.sensor.dmi_warnings_specific_raw.attributes.actualWarnings | length }}

      - service: mqtt.publish
        data_template:
          topic: "dmi_current_warnings/attributes"
          retain: True
          payload: >-
            {% if states.sensor.dmi_warnings_raw.attributes.warnings|length < 1 %}
              {}
            {% else %}
              {
              {% for warning in states.sensor.dmi_warnings_specific_raw.attributes.actualWarnings %}
                "{{ warning.issuedAtText }} {{warning.warningTitle}}": {{ warning | string | replace("'", '"') }}{%- if not loop.last %},{%- endif %}
              {% endfor %}
              }
            {% endif %}

      - service: mqtt.publish
        data_template:
          topic: "dmi_future_warnings/state"
          retain: True
          payload: >-
            {{ 0 if states.sensor.dmi_warnings_raw.attributes.warnings|length < 1 else states.sensor.dmi_warnings_specific_raw.attributes.fivedayWarnings|length }}

      - service: mqtt.publish
        data_template:
          topic: "dmi_future_warnings/attributes"
          retain: True
          payload: >-
            {% if states.sensor.dmi_warnings_raw.attributes.warnings|length < 1 %}
              {}
            {% else %}
              {
              {% for warning in states.sensor.dmi_warnings_specific_raw.attributes.fivedayWarnings %}
                "{{ warning.issuedAtText }} {{warning.warningTitle}}": {{ warning | string | replace("'", '"') }}{%- if not loop.last %},{%- endif %}
              {% endfor %}
              }
            {% endif %}

      - service: downloader.download_file
        data_template:
          url: "https://www.dmi.dk/fileadmin/assets/Varselsikoner/{{ states.sensor.dmi_warnings_specific_raw.attributes.actualWarnings[0].icon }}"
          subdir: dmi_warning_icons
          overwrite: true
