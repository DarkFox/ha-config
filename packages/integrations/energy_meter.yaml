mqtt:
  sensor:
    - name: "Pow K Uptime Seconds"
      state_topic: "kamstrup/uptime"

    - name: "Pow K Meter Clock"
      state_topic: "kamstrup/meter/clock"

    - name: "Pow K VCC"
      state_topic: "kamstrup/vcc"
      unit_of_measurement: V
      device_class: voltage

    - name: "Pow K RSSI"
      state_topic: "kamstrup/rssi"
      unit_of_measurement: dBm
      device_class: signal_strength

    - name: Pow K Temperature
      state_topic: kamstrup/temperature
      unit_of_measurement: °C
      device_class: temperature

    - name: Pow K Power Factor
      state_topic: kamstrup/meter/powerfactor
      value_template: "{{ ((value|float) * 100.0)|round(1) }}"
      device_class: power_factor
      unit_of_measurement: "%"

    - name: Pow K Import Reactive Accumulated
      state_topic: kamstrup/meter/import/reactive/accumulated
      state_class: total_increasing
      unit_of_measurement: kWh
      device_class: energy

    - name: Pow K Import Active Accumulated
      state_topic: kamstrup/meter/import/active/accumulated
      state_class: total_increasing
      unit_of_measurement: kWh
      device_class: energy

    - name: Pow K Export Reactive Accumulated
      state_topic: kamstrup/meter/export/reactive/accumulated
      state_class: total_increasing
      unit_of_measurement: kWh
      device_class: energy

    - name: Pow K Export Active Accumulated
      state_topic: kamstrup/meter/export/active/accumulated
      state_class: total_increasing
      unit_of_measurement: kWh
      device_class: energy

    - name: Pow K L1 Current
      state_topic: kamstrup/meter/l1/current
      unit_of_measurement: A
      device_class: current

    - name: Pow K L1 Voltage
      state_topic: kamstrup/meter/l1/voltage
      unit_of_measurement: V
      device_class: voltage

    - name: Pow K L1 Power Factor
      state_topic: kamstrup/meter/l1/powerfactor
      value_template: "{{ ((value|float) * 100.0)|round(1) }}"
      device_class: power_factor
      unit_of_measurement: "%"

    - name: Pow K L2 Current
      state_topic: kamstrup/meter/l2/current
      unit_of_measurement: A
      device_class: current

    - name: Pow K L2 Voltage
      state_topic: kamstrup/meter/l2/voltage
      unit_of_measurement: V
      device_class: voltage

    - name: Pow K L2 Power Factor
      state_topic: kamstrup/meter/l2/powerfactor
      value_template: "{{ ((value|float) * 100.0)|round(1) }}"
      device_class: power_factor
      unit_of_measurement: "%"

    - name: Pow K L3 Current
      state_topic: kamstrup/meter/l3/current
      unit_of_measurement: A
      device_class: current

    - name: Pow K L3 Voltage
      state_topic: kamstrup/meter/l3/voltage
      unit_of_measurement: V
      device_class: voltage

    - name: Pow K L3 Power Factor
      state_topic: kamstrup/meter/l3/powerfactor
      value_template: "{{ ((value|float) * 100.0)|round(1) }}"
      device_class: power_factor
      unit_of_measurement: "%"

    - name: Pow K Export Reactive
      state_topic: kamstrup/meter/export/reactive
      state_class: measurement
      unit_of_measurement: W
      device_class: power

    - name: Pow K Export Active
      state_topic: kamstrup/meter/export/active
      state_class: measurement
      unit_of_measurement: W
      device_class: power

    - name: Pow K Import Reactive
      state_topic: kamstrup/meter/import/reactive
      state_class: measurement
      unit_of_measurement: W
      device_class: power

    - name: Pow K Import Active
      state_topic: kamstrup/meter/import/active
      state_class: measurement
      unit_of_measurement: W
      device_class: power

    - name: Pow K Import Hour
      state_topic: kamstrup/realtime/import/hour
      state_class: total_increasing
      unit_of_measurement: kWh
      device_class: energy

    - name: Pow K Import Day
      state_topic: kamstrup/realtime/import/day
      state_class: total_increasing
      unit_of_measurement: kWh
      device_class: energy

    - name: Pow K Import Threshold
      state_topic: kamstrup/realtime/import/threshold
      state_class: measurement
      unit_of_measurement: kWh
      device_class: energy

    - name: Pow K Import Monthmax
      state_topic: kamstrup/realtime/import/monthmax
      state_class: total_increasing
      unit_of_measurement: kWh
      device_class: energy

utility_meter:
  energy_hourly:
    source: sensor.pow_k_import_active_accumulated
    cycle: hourly
  energy_daily:
    source: sensor.pow_k_import_active_accumulated
    cycle: daily
  energy_monthly:
    source: sensor.pow_k_import_active_accumulated
    cycle: monthly
  energy_quarterly:
    source: sensor.pow_k_import_active_accumulated
    cycle: quarterly
  energy_yearly:
    source: sensor.pow_k_import_active_accumulated
    cycle: yearly

  3d_printer_energy_hourly:
    source: sensor.3d_printer_afbryder_dagligt_forbrug
    cycle: hourly
  3d_printer_energy_daily:
    source: sensor.3d_printer_afbryder_dagligt_forbrug
    cycle: daily
  3d_printer_energy_monthly:
    source: sensor.3d_printer_afbryder_dagligt_forbrug
    cycle: monthly
  3d_printer_energy_quarterly:
    source: sensor.3d_printer_afbryder_dagligt_forbrug
    cycle: quarterly
  3d_printer_energy_yearly:
    source: sensor.3d_printer_afbryder_dagligt_forbrug
    cycle: yearly

energy_meter:
  energy_cost_hourly:
    unique_id: 6149e4b8-836b-4a4c-91d3-9f8db931504e
    name: Elforbrug denne time
    source: sensor.energy_hourly
    price_entity: sensor.energi_data_service
    cycle: hourly
  energy_cost_daily:
    unique_id: 81dc7e32-fbd8-442a-8558-ac7b323626d0
    name: Elforbrug i dag
    source: sensor.energy_daily
    price_entity: sensor.energi_data_service
    cycle: daily
  energy_cost_monthly:
    unique_id: 2617d86e-81c5-4147-b046-69be69443962
    name: Elforbrug denne måned
    source: sensor.energy_monthly
    price_entity: sensor.energi_data_service
    cycle: monthly
  energy_cost_quarterly:
    unique_id: 537bf328-9d0f-435a-a028-f3312aea2afb
    name: Elforbrug dette kvartal
    source: sensor.energy_quarterly
    price_entity: sensor.energi_data_service
    cycle: quarterly
  energy_cost_yearly:
    unique_id: e7e1e6ee-275b-4a90-bb01-d3440ee1a6c0
    name: Elforbrug dette kvartal
    source: sensor.energy_yearly
    price_entity: sensor.energi_data_service
    cycle: yearly

template:
  - sensor:
      - name: Pow K Uptime
        state: >
          {% from 'datediff.jinja' import format_seconds %}
          {{ format_seconds(states('sensor.pow_k_uptime_seconds')) }}
        attributes:
          icon: mdi:clock-outline

      - name: Pow K Up Since
        state: >
          {{
            (
              as_timestamp(states.sensor.pow_k_uptime_seconds.last_changed)
              - states('sensor.pow_k_uptime_seconds') | int
            ) | int | timestamp_custom('%Y-%m-%d %H:%M:%S%z')
            if has_value('sensor.pow_k_uptime_seconds')
            else none
          }}
        device_class: timestamp
        attributes:
          icon: mdi:calendar-clock

      - name: Pow K L1 Power
        state: >-
          {{
            (states('sensor.pow_k_l1_voltage')|float) *
            (states('sensor.pow_k_l1_current')|float) *
            (states('sensor.pow_k_l1_power_factor')|float/100.0)
          }}
        device_class: power
        unit_of_measurement: W
      - name: Pow K L2 Power
        state: >-
          {{
            (states('sensor.pow_k_l2_voltage')|float) *
            (states('sensor.pow_k_l2_current')|float) *
            (states('sensor.pow_k_l2_power_factor')|float/100.0)
          }}
        device_class: power
        unit_of_measurement: W
      - name: Pow K L3 Power
        state: >-
          {{
            (states('sensor.pow_k_l3_voltage')|float) *
            (states('sensor.pow_k_l3_current')|float) *
            (states('sensor.pow_k_l3_power_factor')|float/100.0)
          }}
        device_class: power
        unit_of_measurement: W

        # Create duplicates of sensor.pow_k_import_active_accumulated for energy_meter sensors
        # Because its auto-naming is crap
      - name: energy_import_daily
        state: "{{ states('sensor.pow_k_import_active_accumulated') }}"
        device_class: energy
        state_class: total_increasing
        unit_of_measurement: kWh
      - name: energy_import_hourly
        state: "{{ states('sensor.pow_k_import_active_accumulated') }}"
        device_class: energy
        state_class: total_increasing
        unit_of_measurement: kWh
      - name: energy_import_monthly
        state: "{{ states('sensor.pow_k_import_active_accumulated') }}"
        device_class: energy
        state_class: total_increasing
        unit_of_measurement: kWh
      - name: energy_import_quarterly
        state: "{{ states('sensor.pow_k_import_active_accumulated') }}"
        device_class: energy
        state_class: total_increasing
        unit_of_measurement: kWh
      - name: energy_import_yearly
        state: "{{ states('sensor.pow_k_import_active_accumulated') }}"
        device_class: energy
        state_class: total_increasing
        unit_of_measurement: kWh

      - name: energy_stats_table
        state: "{{ now() }}"
        attributes:
          table: >-
            {%- from 'utils.jinja' import pad_number -%}
            {{
              [
                {
                  'period': 'Time',
                  'used': pad_number(states('sensor.energy_hourly'), 3) + ' kWh',
                  'last_period': pad_number(states('sensor.energy_last_hour'), 3) + ' kWh',
                  'cost': pad_number(states('sensor.energy_hourly_energi_data_service_cost'), 3) + ' kr'
                },
                {
                  'period': 'Dag',
                  'used': pad_number(states('sensor.energy_daily'), 3) + ' kWh',
                  'last_period': pad_number(states('sensor.energy_last_day'), 3) + ' kWh',
                  'cost': pad_number(states('sensor.energy_daily_energi_data_service_cost'), 3) + ' kr'
                },
                {
                  'period': 'Måned',
                  'used': pad_number(states('sensor.energy_monthly'), 3) + ' kWh',
                  'last_period': pad_number(states('sensor.energy_last_month'), 3) + ' kWh',
                  'cost': pad_number(states('sensor.energy_monthly_energi_data_service_cost'), 3) + ' kr'
                },
                {
                  'period': 'Kvartal',
                  'used': pad_number(states('sensor.energy_quarterly'), 3) + ' kWh',
                  'last_period': pad_number(states('sensor.energy_last_quarter'), 3) + ' kWh',
                  'cost': pad_number(states('sensor.energy_quarterly_energi_data_service_cost'), 3) + ' kr'
                },
                {
                  'period': 'År',
                  'used': pad_number(states('sensor.energy_yearly'), 3) + ' kWh',
                  'last_period': pad_number(states('sensor.energy_last_year'), 3) + ' kWh',
                  'cost': pad_number(states('sensor.energy_yearly_energi_data_service_cost'), 3) + ' kr'
                }
              ]
            }}

sensor:
  - platform: integration
    source: sensor.pow_k_l1_power
    name: Pow K L1 Power Accumulated
    unit_prefix: k
    round: 3
    method: left
  - platform: integration
    source: sensor.pow_k_l2_power
    name: Pow K L2 Power Accumulated
    unit_prefix: k
    round: 3
    method: left
  - platform: integration
    source: sensor.pow_k_l3_power
    name: Pow K L3 Power Accumulated
    unit_prefix: k
    round: 3
    method: left

  - platform: template
    sensors:
      energy_cost_hourly:
        friendly_name: "Elomkostning"
        value_template: |
          {% if states('sensor.pow_k_import_active') not in ['unavailable', 'unknown'] and states('sensor.energi_data_service') not in ['unavailable', 'unknown'] %}
            {{ (((states('sensor.pow_k_import_active')|float)/1000) * (states('sensor.energi_data_service')|float)) | round(3) }}
          {% else %}
            unavailable
          {% endif %}
        unit_of_measurement: kr/t
        device_class: monetary

      energy_cost_this_hour:
        friendly_name: "Elomkostning Denne Time"
        # make sure none of these are unavailable or unknown
        value_template: |
          {% if states('sensor.energy_hourly') not in ['unavailable', 'unknown'] and states('sensor.energi_data_service') not in ['unavailable', 'unknown'] %}
            {{ ((states('sensor.energy_hourly')|float) * (states('sensor.energi_data_service')|float)) | round(3) }}
          {% else %}
            0
          {% endif %}
        unit_of_measurement: kr
        device_class: monetary

      energy_last_hour:
        friendly_name: "Elforbrug Sidste Time"
        value_template: "{{ state_attr('sensor.energy_hourly', 'last_period') }}"
        unit_of_measurement: kWh
        device_class: energy
      energy_last_day:
        friendly_name: "Elforbrug I Går"
        value_template: "{{ state_attr('sensor.energy_daily', 'last_period') }}"
        unit_of_measurement: kWh
        device_class: energy
      energy_last_month:
        friendly_name: "Elforbrug Sidste Måned"
        value_template: "{{ state_attr('sensor.energy_monthly', 'last_period') }}"
        unit_of_measurement: kWh
        device_class: energy
      energy_last_quarter:
        friendly_name: "Elforbrug Sidste Kvartal"
        value_template: "{{ state_attr('sensor.energy_quarterly', 'last_period') }}"
        unit_of_measurement: kWh
        device_class: energy
      energy_last_year:
        friendly_name: "Elforbrug Sidste År"
        value_template: "{{ state_attr('sensor.energy_yearly', 'last_period') }}"
        unit_of_measurement: kWh
        device_class: energy
