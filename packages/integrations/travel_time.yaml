homeassistant:
  customize:
    sensor.s_train_c_status:
      friendly_name: S-Tog Linje C Status
      entity_picture: !secret s_tog_icon_url
    sensor.s_train_message:
      friendly_name: S-Tog Driftbesked
      icon: mdi:train

binary_sensor:
  - platform: template
    sensors:
      s_train_message_present:
        value_template: >-
          {{ (states('sensor.s_train_message') | regex_match('.*(\sC(\W|$)|alle|Alle).*')) or not is_state('sensor.s_train_c_status', 'Til tiden') }}
      s_train_message_about_c:
        value_template: >-
          {{ (states('sensor.s_train_message') | regex_match('.*(\sC(\W|$)|alle|Alle).*')) }}
      commute_soon:
        value_template: >-
          {%- set time_to_leave_car_commute = strptime(states('sensor.car_commute_leave_at'), '%Y-%m-%dT%H:%M:%S%z', '-1') -%}
          {%- if time_to_leave_car_commute != '-1' -%}
            {{ time_to_leave_car_commute - timedelta(minutes=30) < now() and strptime(states('sensor.work_start_time'), '%Y-%m-%dT%H:%M:%S%z') > now() }}
          {%- else -%}
            False
          {%- endif -%}
      time_to_leave_car_commute:
        value_template: >-
          {%- set time_to_leave_car_commute = strptime(states('sensor.car_commute_leave_at'), '%Y-%m-%dT%H:%M:%S%z', '-1') -%}
          {%- if time_to_leave_car_commute != '-1' -%}
            {{ time_to_leave_car_commute < now() and strptime(states('sensor.work_start_time'), '%Y-%m-%dT%H:%M:%S%z') > now() }}
          {%- else -%}
            False
          {%- endif -%}
      going_home_soon:
        value_template: >-
          {%- set work_end_time = strptime(states('sensor.work_end_time'), '%Y-%m-%dT%H:%M:%S%z', '-1') -%}
          {%- if work_end_time != '-1' -%}
            {{ work_end_time - timedelta(minutes=5) < now() }}
          {%- else -%}
            False
          {%- endif -%}

sensor:
  - platform: template
    sensors:
      google_maps_embed_key:
        value_template: !secret google_maps_embed_key
      next_work_in:
        value_template: >
          {{ (as_timestamp(state_attr('calendar.arbejdskalender_bil', 'start_time'))|int)  - as_timestamp(now()) | int }}
      work_url_coords:
        value_template: >
          {% set zone = 'zone.rsh' %}
          {{ state_attr(zone, 'latitude') }}%2C{{ state_attr(zone, 'longitude') }}
      home_url_coords:
        value_template: >
          {% set zone = 'zone.home' %}
          {{ state_attr(zone, 'latitude') }}%2C{{ state_attr(zone, 'longitude') }}
      car_commute_leave_at:
        value_template: >
          {% set start = states('sensor.work_start_time') %}
          {{
            ((strptime(start, '%Y-%m-%dT%H:%M:%S%z')
            - timedelta(minutes=states('sensor.hjem_til_rsh')|int(0)+15))|as_local).isoformat()
            if start and start not in ['unavailable', 'unknown']
          }}
        device_class: timestamp
      car_commute_leave_in:
        value_template: >
          {% set time = states('sensor.car_commute_leave_at') %}
          {{ (((time|as_timestamp) - (now()|as_timestamp))/60)|int if time and time not in ['unavailable', 'unknown'] else -1 }}
        unit_of_measurement: min
        device_class: duration
      work_start_time:
        value_template: "{{ (strptime(state_attr('calendar.arbejdskalender_bil', 'start_time'), '%Y-%m-%d %H:%M:%S')|as_local).isoformat() }}"
        device_class: timestamp
      work_end_time:
        value_template: "{{ (strptime(state_attr('calendar.arbejdskalender_bil', 'end_time'), '%Y-%m-%d %H:%M:%S')|as_local).isoformat() }}"
        device_class: timestamp
      commute_status_car:
        value_template: >
          {%- if states('sensor.hjem_til_rsh')|int(0) > 45 -%}
            bad
          {%- elif states('sensor.hjem_til_rsh')|int(0) > 25 -%}
            ok
          {%- else -%}
            good
          {%- endif -%}
      commute_status_transit:
        value_template: >
          {%- if states('sensor.precip_today')|int(0) > 5 or states('sensor.s_train_c_status') != 'Til tiden' -%}
            bad
          {%- elif states('sensor.precip_today')|int(0) > 1 or states('sensor.s_train_message') != '' -%}
            ok
          {%- else -%}
            good
          {%- endif -%}
      commute_status_bike:
        value_template: >
          {%- set headwind = (state_attr('weather.forecast_home', 'wind_bearing')|int(0) > 35 and state_attr('weather.forecast_home', 'wind_bearing')|int(0) < 146) -%}
          {%- if states('sensor.temperature')|int(0) < 0
              or states('sensor.precip_today')|int(0) > 5
              or (headwind and states('sensor.beaufort')|int(0) > 6) -%}
            bad
          {%- elif states('sensor.temperature')|int(0) < 10
              or states('sensor.precip_today')|int(0) > 1
              or (headwind and states('sensor.beaufort')|int(0) > 5) -%}
            ok
          {%- else -%}
            good
          {%- endif -%}
      martin_next_scheduled_destination:
        friendly_name: "Next Scheduled Destination"
        value_template: "{{ state_attr('calendar.personlig_bil', 'location') }}"
      martin_next_scheduled_at:
        friendly_name: "Next Scheduled at"
        value_template: >-
          {{
            (strptime(state_attr('calendar.personlig_bil', 'start_time'), '%Y-%m-%d %H:%M:%S')|as_local).isoformat()
            if state_attr('calendar.personlig_bil', 'location') else ''
          }}
        device_class: timestamp
      next_scheduled_leave_at:
        value_template: >-
          {{
            ((
              strptime(state_attr('calendar.personlig_bil', 'start_time'), '%Y-%m-%d %H:%M:%S')
              - timedelta(minutes=states('sensor.martin_til_destination')|int+15)
            )|as_local).isoformat()
            if state_attr('calendar.personlig_bil', 'location') else ''
          }}
        device_class: timestamp
      next_scheduled_leave_in:
        value_template: >-
          {%- set timestamp = states('sensor.next_scheduled_leave_at')|as_timestamp(-1) -%}
          {%- if timestamp != -1 -%}
            {{ (((states('sensor.next_scheduled_leave_at')|as_timestamp) - (now()|as_timestamp))/60)|int }}
          {% else %}
            -1
          {%- endif -%}
        unit_of_measurement: min
        device_class: duration

  - platform: rejseplanen
    name: S-Tog Måløv
    stop_id: "8600709"
    route:
      - C
      - H
    departure_type: S

  - platform: rejseplanen
    name: S-Tog Nørreport Mod Frederikssund
    stop_id: "008600646"
    route:
      - C
      - H
    departure_type: S
    direction:
      - Frederikssund St.

  - platform: dsb_trafikinfo
    name: DSB Trafikinfo
    sender: S-tog

template:
  - sensor:
      - name: "Next Leave In"
        state: |
          {%- set car_commute_leave_in = states('sensor.car_commute_leave_in')|int(-1) -%}
          {%- set next_scheduled_leave_in = states('sensor.next_scheduled_leave_in')|int(-1) -%}
          {%- if car_commute_leave_in > 0 and next_scheduled_leave_in > 0 -%}
            {{ min(car_commute_leave_in, next_scheduled_leave_in) }}
          {%- elif car_commute_leave_in > 0 -%}
            {{ car_commute_leave_in }}
          {%- elif next_scheduled_leave_in > 0 -%}
            {{ next_scheduled_leave_in }}
          {%- else -%}
            -1
          {%- endif -%}
        attributes:
          unit_of_measurement: min
          device_class: duration

automation:
  - alias: "Commute - Update sensors before commute"
    initial_state: true
    trigger:
      - platform: time_pattern
        minutes: "/5"
    condition:
      - condition: state
        entity_id: binary_sensor.commute_soon
        state: "on"
    action:
      - service: homeassistant.update_entity
        target:
          entity_id: sensor.hjem_til_rsh

  - alias: "Commute - Update sensors outside commute time"
    initial_state: true
    trigger:
      - platform: time_pattern
        minutes: "/20"
    condition:
      - condition: state
        entity_id: binary_sensor.commute_soon
        state: "off"
    action:
      - service: homeassistant.update_entity
        target:
          entity_id: sensor.hjem_til_rsh

  - alias: "Next destination - Update sensors with high frequency when close to leave time"
    initial_state: true
    trigger:
      - platform: time_pattern
        minutes: "/5"
    condition:
      - condition: state
        entity_id: binary_sensor.martin_next_scheduled_destination_leave_soon
        state: "on"
    action:
      - service: homeassistant.update_entity
        target:
          entity_id: sensor.martin_til_destination

  - alias: "Next destination - Update sensors slowly 12 hours before"
    initial_state: true
    trigger:
      - platform: time_pattern
        minutes: "/20"
    condition:
      - condition: state
        entity_id: binary_sensor.martin_next_scheduled_destination_active
        state: "on"
    action:
      - service: homeassistant.update_entity
        target:
          entity_id: sensor.martin_til_destination

  - id: time_to_leave_notification
    alias: time_to_leave_notification
    initial_state: true
    mode: single
    trigger:
      - platform: numeric_state
        entity_id: sensor.next_leave_in
        below: 46
      - platform: numeric_state
        entity_id: sensor.next_leave_in
        below: 31
      - platform: numeric_state
        entity_id: sensor.next_leave_in
        below: 21
      - platform: numeric_state
        entity_id: sensor.next_leave_in
        below: 16
      - platform: numeric_state
        entity_id: sensor.next_leave_in
        below: 11
      - platform: numeric_state
        entity_id: sensor.next_leave_in
        below: 6
      - platform: numeric_state
        entity_id: sensor.next_leave_in
        below: 1
    condition:
      - alias: "If at home"
        condition: state
        entity_id: person.martin
        state: "home"
      - alias: "Not from unavailable/unknown"
        condition: template
        value_template: "{{ not trigger.from_state.state in ['unavailable', 'unknown'] }}"
    action:
      - service: script.notify_everywhere
        data:
          message: >-
            {% if trigger.to_state.state|int(0) < 1 %}
              Tid til at tage afsted.
            {% else %}
              Tag afsted om {{ trigger.to_state.state|int(0) }} minutter.
            {% endif %}
