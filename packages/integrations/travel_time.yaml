homeassistant:
  customize:
    sensor.s_train_c_status:
      friendly_name: S-Tog Linje C Status
      entity_picture: !secret s_tog_icon_url
    sensor.s_train_message:
      friendly_name: S-Tog Driftbesked
      icon: mdi:train

binary_sensor:
  - platform: template
    sensors:
      s_train_message_present:
        value_template: "{{ not is_state('sensor.s_train_message', '') or not is_state('sensor.s_train_c_status', 'Til tiden') }}"
      commute_soon:
        value_template: >-
          {%- set time_to_leave_car_commute = strptime(states('sensor.time_to_leave_car_commute'), '%Y-%m-%dT%H:%M:%S%z') -%}
          {%- if time_to_leave_car_commute != 'unavailable' -%}
            {{ time_to_leave_car_commute - timedelta(minutes=30) < now() and strptime(states('sensor.work_start_time'), '%Y-%m-%dT%H:%M:%S%z') > now() }}
          {%- else -%}
            False
          {%- endif -%}
      going_home_soon:
        value_template: >-
          {%- set work_end_time = strptime(states('sensor.work_end_time'), '%Y-%m-%dT%H:%M:%S%z') -%}
          {%- if work_end_time != 'unavailable' -%}
            {{ work_end_time - timedelta(minutes=15) < now() }}
          {%- else -%}
            False
          {%- endif -%}
      going_home_early_trigger:
        value_template: >-
          {%- set work_end_time = strptime(states('sensor.work_end_time'), '%Y-%m-%dT%H:%M:%S%z') -%}
          {%- if work_end_time != 'unavailable' -%}
            {{ work_end_time - timedelta(minutes=30) < now() }}
          {%- else -%}
            False
          {%- endif -%}

sensor:
  - platform: template
    sensors:
      google_maps_embed_key:
        value_template: !secret google_maps_embed_key
      next_work_in:
        value_template: >
          {{ (as_timestamp(state_attr('calendar.arbejde_pa_'+states('sensor.next_work_at'), 'start_time'))|int)  - as_timestamp(now()) | int }}
      next_work_at:
        value_template: >
          {% set rsr_time = as_timestamp(state_attr('calendar.arbejde_pa_rsr', 'start_time')) %}
          {% set rsh_time = as_timestamp(state_attr('calendar.arbejde_pa_rsh', 'start_time')) %}
          {% if not rsr_time and not rsh_time %}
            unknown
          {% elif not rsr_time or (rsr_time and rsh_time and (rsh_time|int) < (rsr_time|int)) %}
            rsh
          {% elif not rsh_time or (rsr_time and rsh_time and (rsr_time|int) < (rsh_time|int)) %}
            rsr
          {% endif %}
      next_work_at_url_coords:
        value_template: >
          {% set zone = 'zone.'+states('sensor.next_work_at') %}
          {{ state_attr(zone, 'latitude') }}%2C{{ state_attr(zone, 'longitude') }}
      home_url_coords:
        value_template: >
          {% set zone = 'zone.home' %}
          {{ state_attr(zone, 'latitude') }}%2C{{ state_attr(zone, 'longitude') }}
      time_to_leave_car_commute:
        value_template: "{{ ((strptime(states('sensor.work_start_time'), '%Y-%m-%dT%H:%M:%S%z') - timedelta(minutes=states('sensor.hjem_til_'+states('sensor.next_work_at'))|int+10))|as_local).isoformat() }}"
        device_class: timestamp
      work_start_time:
        value_template: "{{ (strptime(state_attr('calendar.arbejde_pa_'+states('sensor.next_work_at'), 'start_time'), '%Y-%m-%d %H:%M:%S')|as_local).isoformat() }}"
        device_class: timestamp
      work_end_time:
        value_template: "{{ (strptime(state_attr('calendar.arbejde_pa_rsr', 'end_time') if is_state('calendar.arbejde_pa_rsr', 'on') else state_attr('calendar.arbejde_pa_rsh', 'end_time'), '%Y-%m-%d %H:%M:%S')|as_local).isoformat() }}"
        device_class: timestamp
      commute_status_car:
        value_template: >
          {%- if is_state('sensor.next_work_at', 'rsr') -%}
            {%- if states('sensor.hjem_til_rsr')|int > 50 -%}
              bad
            {%- elif states('sensor.hjem_til_rsr')|int > 35 -%}
              ok
            {%- else -%}
              good
            {%- endif -%}
          {%- elif is_state('sensor.next_work_at', 'rsh') -%}
            {%- if states('sensor.hjem_til_rsh')|int > 45 -%}
              bad
            {%- elif states('sensor.hjem_til_rsh')|int > 25 -%}
              ok
            {%- else -%}
              good
            {%- endif -%}
          {%- else -%}
            unknown
          {%- endif -%}
      commute_status_transit:
        value_template: >
          {%- if states('sensor.precip_today')|int > 5 or states('sensor.s_train_c_status') != 'Til tiden' -%}
            bad
          {%- elif states('sensor.precip_today')|int > 1 or states('sensor.s_train_message') != '' -%}
            ok
          {%- else -%}
            good
          {%- endif -%}
      commute_status_bike:
        value_template: >
          {%- set headwind = (states('sensor.wind_bearing')|int > 35 and states('sensor.wind_bearing')|int < 146) -%}
          {%- if states('sensor.udenfor_temperature_feels_like')|int < 0
              or states('sensor.precip_today')|int > 5
              or (headwind and states('sensor.wind_speed')|int > 39) -%}
            bad
          {%- elif states('sensor.udenfor_temperature_feels_like')|int < 10
              or states('sensor.precip_today')|int > 1
              or (headwind and states('sensor.wind_speed')|int > 19) -%}
            ok
          {%- else -%}
            good
          {%- endif -%}

  - platform: rejseplanen
    name: S-Tog Måløv
    stop_id: "8600709"
    route:
      - C
      - H
    departure_type: S

  - platform: rejseplanen
    name: S-Tog Nørreport Mod Frederikssund
    stop_id: "008600646"
    route:
      - C
      - H
    departure_type: S
    direction:
      - Frederikssund St.

  - platform: rejseplanen
    name: S-Tog Nørreport
    stop_id: "008600646"
    departure_type: S

  - platform: rejseplanen
    name: København H Afgange
    stop_id: "8600626"

  - platform: rejseplanen
    name: "Departure to Denmark"
    stop_id: 7401585
    departure_type: "REG"
    direction:
      - "Østerport St."

  - platform: rejseplanen
    name: "Departure to Lund C."
    stop_id: 7401585
    direction:
      - "Helsingborg C"
      - "Karlskrona C og Kristiansstad C"
      - "Karlskrona C"
      - "Kristiansstad C"
      - "Hässleholm C"
      - "Växjö C"

  - platform: dsb_trafikinfo
    name: DSB Trafikinfo
    sender: S-tog

  - platform: scrape
    resource: http://www.dsb.dk/trafikinformation/s-tog-overblik/
    name: s_train_message
    select: "div.FooterFreeText"
    value_template: >-
      {{ value | trim  | reverse | regex_replace(find='.*(ppA BSD|nalpesjeR|nenalpesjeR|erem eS).*?(\.|\Z)', replace='', ignorecase=True) | reverse }}
    scan_interval: 600

  - platform: scrape
    resource: http://www.dsb.dk/trafikinformation/s-tog-overblik/
    name: s_train_c_status
    select: "table.RepeaterTable tr:nth-of-type(4) td.TDItemLabel div b"
    value_template: "{{ value | trim }}"
    scan_interval: 600
