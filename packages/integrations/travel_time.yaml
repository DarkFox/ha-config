homeassistant:
  customize:
    sensor.s_train_c_status:
      friendly_name: S-Tog Linje C Status
      entity_picture: !secret s_tog_icon_url
    sensor.s_train_message:
      friendly_name: S-Tog Driftbesked
      icon: mdi:train

binary_sensor:
  - platform: template
    sensors:
      s_train_message_present:
        value_template: "{{ not is_state('sensor.s_train_message', '') or not is_state('sensor.s_train_c_status', 'Til tiden') }}"
      commute_soon:
        value_template: >-
          {%- set time_to_leave_car_commute = strptime(states('sensor.car_commute_leave_at'), '%Y-%m-%dT%H:%M:%S%z', '-1') -%}
          {%- if time_to_leave_car_commute != '-1' -%}
            {{ time_to_leave_car_commute - timedelta(minutes=30) < now() and strptime(states('sensor.work_start_time'), '%Y-%m-%dT%H:%M:%S%z') > now() }}
          {%- else -%}
            False
          {%- endif -%}
      time_to_leave_car_commute:
        value_template: >-
          {%- set time_to_leave_car_commute = strptime(states('sensor.car_commute_leave_at'), '%Y-%m-%dT%H:%M:%S%z', '-1') -%}
          {%- if time_to_leave_car_commute != '-1' -%}
            {{ time_to_leave_car_commute < now() and strptime(states('sensor.work_start_time'), '%Y-%m-%dT%H:%M:%S%z') > now() }}
          {%- else -%}
            False
          {%- endif -%}
      going_home_soon:
        value_template: >-
          {%- set work_end_time = strptime(states('sensor.work_end_time'), '%Y-%m-%dT%H:%M:%S%z', '-1') -%}
          {%- if work_end_time != '-1' -%}
            {{ work_end_time - timedelta(minutes=5) < now() }}
          {%- else -%}
            False
          {%- endif -%}

sensor:
  - platform: template
    sensors:
      google_maps_embed_key:
        value_template: !secret google_maps_embed_key
      next_work_in:
        value_template: >
          {{ (as_timestamp(state_attr('calendar.arbejdskalender_arbejde' 'start_time'))|int)  - as_timestamp(now()) | int }}
      work_url_coords:
        value_template: >
          {% set zone = 'zone.rsh' %}
          {{ state_attr(zone, 'latitude') }}%2C{{ state_attr(zone, 'longitude') }}
      home_url_coords:
        value_template: >
          {% set zone = 'zone.home' %}
          {{ state_attr(zone, 'latitude') }}%2C{{ state_attr(zone, 'longitude') }}
      car_commute_leave_at:
        value_template: >-
          {{
            ((strptime(states('sensor.work_start_time'), '%Y-%m-%dT%H:%M:%S%z')
            - timedelta(minutes=states('sensor.hjem_til_rsh')|int+15))|as_local).isoformat()
          }}
        device_class: timestamp
      car_commute_leave_in:
        value_template: >-
          {{ (((states('sensor.car_commute_leave_at')|as_timestamp) - (now()|as_timestamp))/60)|int }}
        unit_of_measurement: m
        device_class: duration
      work_start_time:
        value_template: "{{ (strptime(state_attr('calendar.arbejdskalender_arbejde', 'start_time'), '%Y-%m-%d %H:%M:%S')|as_local).isoformat() }}"
        device_class: timestamp
      work_end_time:
        value_template: "{{ (strptime(state_attr('calendar.arbejdskalender_arbejde', 'end_time'), '%Y-%m-%d %H:%M:%S')|as_local).isoformat() }}"
        device_class: timestamp
      commute_status_car:
        value_template: >
          {%- if states('sensor.hjem_til_rsh')|int > 45 -%}
            bad
          {%- elif states('sensor.hjem_til_rsh')|int > 25 -%}
            ok
          {%- else -%}
            good
          {%- endif -%}
      commute_status_transit:
        value_template: >
          {%- if states('sensor.precip_today')|int > 5 or states('sensor.s_train_c_status') != 'Til tiden' -%}
            bad
          {%- elif states('sensor.precip_today')|int > 1 or states('sensor.s_train_message') != '' -%}
            ok
          {%- else -%}
            good
          {%- endif -%}
      commute_status_bike:
        value_template: >
          {%- set headwind = (state_attr('weather.forecast_home', 'wind_bearing')|int > 35 and state_attr('weather.forecast_home', 'wind_bearing')|int < 146) -%}
          {%- if states('sensor.temperature')|int < 0
              or states('sensor.precip_today')|int > 5
              or (headwind and states('sensor.beaufort')|int > 6) -%}
            bad
          {%- elif states('sensor.temperature')|int < 10
              or states('sensor.precip_today')|int > 1
              or (headwind and states('sensor.beaufort')|int > 5) -%}
            ok
          {%- else -%}
            good
          {%- endif -%}
      martin_next_scheduled_destination:
        friendly_name: "Next Scheduled Destination"
        value_template: "{{ state_attr('calendar.personlig_bil', 'location') }}"
      martin_next_scheduled_at:
        friendly_name: "Next Scheduled at"
        value_template: >-
          {{
            (strptime(state_attr('calendar.personlig_bil', 'start_time'), '%Y-%m-%d %H:%M:%S')|as_local).isoformat()
            if state_attr('calendar.personlig_bil', 'location') else ''
          }}
        device_class: timestamp
      next_scheduled_leave_at:
        value_template: >-
          {{
            ((
              strptime(state_attr('calendar.personlig_bil', 'start_time'), '%Y-%m-%d %H:%M:%S')
              - timedelta(minutes=states('sensor.martin_til_destination')|int+15)
            )|as_local).isoformat()
            if state_attr('calendar.personlig_bil', 'location') else ''
          }}
        device_class: timestamp
      next_scheduled_leave_in:
        value_template: >-
          {{ (((states('sensor.next_scheduled_leave_at')|as_timestamp) - (now()|as_timestamp))/60)|int }}
        unit_of_measurement: m
        device_class: duration

  - platform: rejseplanen
    name: S-Tog Måløv
    stop_id: "8600709"
    route:
      - C
      - H
    departure_type: S

  - platform: rejseplanen
    name: S-Tog Nørreport Mod Frederikssund
    stop_id: "008600646"
    route:
      - C
      - H
    departure_type: S
    direction:
      - Frederikssund St.

  - platform: rejseplanen
    name: S-Tog Nørreport
    stop_id: "008600646"
    departure_type: S

  - platform: rejseplanen
    name: København H Afgange
    stop_id: "8600626"

  - platform: dsb_trafikinfo
    name: DSB Trafikinfo
    sender: S-tog

  # - platform: scrape
  #   resource: http://www.dsb.dk/trafikinformation/s-tog-overblik/
  #   name: s_train_message
  #   select: "div.FooterFreeText"
  #   value_template: >-
  #     {{ value | trim  | reverse | regex_replace(find='.*(ppA BSD|nalpesjeR|nenalpesjeR|erem eS).*?(\.|\Z)', replace='', ignorecase=True) | reverse }}
  #   scan_interval: 600

  # - platform: scrape
  #   resource: http://www.dsb.dk/trafikinformation/s-tog-overblik/
  #   name: s_train_c_status
  #   select: "table.RepeaterTable tr:nth-of-type(3) td.TDItemLabel div b"
  #   value_template: "{{ value | trim }}"
  #   scan_interval: 600

automation:
  - alias: "Commute - Update sensors before commute"
    initial_state: true
    trigger:
      - platform: time_pattern
        minutes: "/5"
    condition:
      - condition: state
        entity_id: binary_sensor.commute_soon
        state: "on"
    action:
      - service: homeassistant.update_entity
        target:
          entity_id: sensor.hjem_til_rsh

  - alias: "Commute - Update sensors outside commute time"
    initial_state: true
    trigger:
      - platform: time_pattern
        minutes: "/20"
    condition:
      - condition: state
        entity_id: binary_sensor.commute_soon
        state: "off"
    action:
      - service: homeassistant.update_entity
        target:
          entity_id: sensor.hjem_til_rsh

  - alias: "Next destination - Update sensors with high frequency when close to leave time"
    initial_state: true
    trigger:
      - platform: time_pattern
        minutes: "/5"
    condition:
      - condition: state
        entity_id: binary_sensor.martin_next_scheduled_destination_leave_soon
        state: "on"
    action:
      - service: homeassistant.update_entity
        target:
          entity_id: sensor.martin_til_destination

  - alias: "Next destination - Update sensors slowly 12 hours before"
    initial_state: true
    trigger:
      - platform: time_pattern
        minutes: "/20"
    condition:
      - condition: state
        entity_id: binary_sensor.martin_next_scheduled_destination_active
        state: "on"
    action:
      - service: homeassistant.update_entity
        target:
          entity_id: sensor.martin_til_destination
