homeassistant:
  customize:
    sensor.s_train_b_status:
      friendly_name: S-Tog Linje B Status
      entity_picture: !secret s_tog_icon_url
    sensor.s_train_b_next:
      friendly_name: S-Tog Linje B Næste Afgang
      entity_picture: !secret s_tog_icon_url
    sensor.s_train_message:
      friendly_name: S-Tog Driftbesked
      icon: mdi:train

group:
  travel_time:
    name: Travel Time
    entities:
      - sensor.travel_time_to_work_driving
      - sensor.s_train_b_status
      - sensor.s_train_message
      - sensor.s_tog_brondbyoster_til_kbh

sensor:
  - platform: rejseplanen
    name: S-Tog Brøndbyøster til KBH
    stop_id: '008600679'
    route: B
    departure_type: S
    direction:
      - Farum St.
      - Valby St.
      - København H
      - Nørreport St.
      - Østerport St.

  - platform: rejseplanen
    name: S-Tog Nørreport til Brøndbyøster
    stop_id: '008600646'
    route: B
    departure_type: S
    direction:
      - Høje Taastrup St.
      - Glostrup St.

  - platform: rejseplanen
    stop_id: '008600646'
    route: B
    departure_type: S
    direction:
      - Bramming

  - platform: dsb_trafikinfo
    name: DSB Trafikinfo
    sender: S-tog

  - platform: google_travel_time
    name: Martin to Home
    api_key: !secret google_directions_secret
    origin: device_tracker.google_maps_102040676821115196041
    destination: zone.home
    options:
      mode: driving

  - platform: scrape
    resource: http://www.dsb.dk/trafikinformation/s-tog-overblik/
    name: s_train_message
    select: 'div.FooterFreeText'
    value_template: >-
      {{ value | trim  | reverse | regex_replace(find='.*(ppA BSD|nalpesjeR|nenalpesjeR).*?\.', replace='.', ignorecase=True) | reverse}}
    scan_interval: 300

  - platform: scrape
    resource: http://www.dsb.dk/trafikinformation/s-tog-overblik/
    name: s_train_b_status
    select: 'table.RepeaterTable tr:nth-of-type(2) td.TDItemLabel div b'
    value_template: "{{ value | trim }}"
    scan_interval: 300

  - platform: template
    sensors:
      s_train_b_next_fmt:
        friendly_name: "Næste afgang"
        value_template: >
          {% set ct = states('sensor.s_tog_brondbyoster_til_kbh') | int %}
          {% if ct > 60 %}
            {{ ct // 60 }}:{{ '{:0>2d}'.format(ct%60) }}
          {% else %}
            {{ ct }}
          {% endif %}

  - platform: template
    sensors:
      s_train_b_later_fmt:
        friendly_name: "Efterfølgende afgang"
        value_template: >
          {% set ct = state_attr('sensor.s_tog_brondbyoster_til_kbh', 'next_departures')[0]['due_in'] | int %}
          {% if ct > 60 %}
            {{ ct // 60 }}:{{ '{:0>2d}'.format(ct%60) }}
          {% else %}
            {{ ct }}
          {% endif %}

binary_sensor:
  - platform: template
    sensors:
      s_train_message_present:
        entity_id: sensor.s_train_message
        value_template: "{{ not is_state('sensor.s_train_message', '') }}"
