sensor:
  - platform: rest
    name: puzzel_login
    scan_interval: 1740
    resource: https://auth.puzzel.com/api/Authenticate/LogIn
    method: POST
    payload: !secret puzzel_login
    # {"CustomerKey":"12345","UserName":"xxx","Password":"xxx","ClientName":"Agent","ClientVersion":"0.26.0-69185"}
    headers:
      Content-Type: application/json
    value_template: "{{ value_json.refreshToken.sessionId }}"
    json_attributes:
      - accessToken
      - refreshToken

command_line:
  - sensor:
      name: puzzel_user
      scan_interval: 86400
      command: >
        curl
        --request GET "https://agent.puzzel.com/contactcentre5/accessTokenExtendedInformation"
        --header "Authorization: Bearer {{ state_attr('sensor.puzzel_login', 'accessToken') }}"
        --header "Content-Type: application/json"
      value_template: "{{ value_json.result.accessTokenExpiryIso }}"
      json_attributes:
        - result
  - sensor:
      name: puzzel_user_state
      scan_interval: 30
      command: >
        curl
        --request GET "https://agent.puzzel.com/contactcentre5/{{ states('sensor.puzzel_customer_key') }}/users/{{ states('sensor.puzzel_user_id') }}"
        --header "Authorization: Bearer {{ state_attr('sensor.puzzel_login', 'accessToken') }}"
        --header "Content-Type: application/json"
      value_template: "{{ value_json.result.contactCentreStatus }}"
      json_attributes:
        - result

template:
  - sensor:
      - name: "Puzzel Customer Key"
        state: "{{ state_attr('sensor.puzzel_user', 'result').customerKey }}"
      - name: "Puzzel User ID"
        state: "{{ state_attr('sensor.puzzel_user', 'result').userId }}"
      - name: "Puzzel Nummer"
        state: "{{ state_attr('sensor.puzzel_user_state', 'result').mobilePhone }}"
      - name: "Puzzel Status"
        state: "{{ state_attr('sensor.puzzel_user_state', 'result').contactCentreStatus }}"
      - name: "Puzzel Profil"
        state: "{{ 'Logget af' if is_state('sensor.puzzel_state', 'Logget af') else states('sensor.puzzel_ko') }}"
      - name: "Puzzel Kø"
        state: "{{ (state_attr('sensor.puzzel_user_state', 'result').profiles | selectattr('id', 'equalto', state_attr('sensor.puzzel_user_state', 'result').currentProfileId) | first).name }}"
        attributes:
          profile_id: "{{ state_attr('sensor.puzzel_user_state', 'result').currentProfileId }}"
          available_profiles: "{{ state_attr('sensor.puzzel_user_state', 'result').profiles }}"
      - name: "Puzzel State"
        state: >-
          {% if is_state('sensor.puzzel_user_state', 'Pause') %}
            Pause
          {% elif is_state('sensor.puzzel_user_state', 'LoggedOff') %}
            Logget af
          {% elif is_state('sensor.puzzel_user_state', 'LoggedOn') %}
            Ledig
          {% else %}
            unknown
          {% endif %}
  - binary_sensor:
      - name: "Puzzel Status"
        state: "{{ states('sensor.puzzel_user_state') in ['LoggedOn', 'Pause'] }}"
        attributes:
          profil: "{{ states('sensor.puzzel_ko') }}"
          state: "{{ states('sensor.puzzel_state') }}"
          nummer: "{{ states('sensor.puzzel_nummer') }}"

switch:
  - platform: template
    switches:
      puzzel:
        friendly_name: "Puzzel"
        value_template: "{{ is_state('binary_sensor.puzzel_status', 'on') }}"
        turn_on:
          service: script.puzzel_log_on
          data:
            queue_id: "{{ state_attr('sensor.puzzel_ko', 'profile_id') }}"
        turn_off:
          service: script.puzzel_log_off
      puzzel_pause:
        friendly_name: "Puzzel Pause"
        value_template: "{{ is_state('sensor.puzzel_state', 'Pause') }}"
        turn_on:
          service: script.puzzel_pause_on
        turn_off:
          service: script.puzzel_pause_off

script:
  puzzel_contacts_lookup:
    alias: "Puzzel Contacts Lookup"
    fields:
      phone_number:
        description: "Phone number to lookup in Puzzel contacts"
        example: "12345678"
    sequence:
      - variables:
          # Take only the last 8 digits of the phone number.
          phone_number: "{{ (phone_number|string)[-8:] }}"

      - service: shell_command.curl
        response_variable: result
        data:
          url: "https://agent.puzzel.com/contactcentre5/{{ states('sensor.puzzel_customer_key') }}/users/{{ states('sensor.puzzel_user_id')|string }}/catalog/contacts/search"
          method: post
          headers:
            Content-Type: application/json
            Authorization: "Bearer {{ state_attr('sensor.puzzel_login', 'accessToken') }}"
          payload:
            phoneNumber: "{{ phone_number|string }}"

      - variables:
          # Convert stdout from JSON to dict
          stdout: "{{ result.stdout | from_json }}"
          # Extract first result from JSON
          caller: "{{ stdout.result | first }}"

      - stop: "Return caller info"
        response_variable: caller

  puzzel_external_contacts_lookup:
    alias: "Puzzel External Contacts Lookup"
    fields:
      phone_number:
        description: "Phone number to lookup in Puzzel contacts"
        example: "12345678"
    sequence:
      - variables:
          # Take only the last 8 digits of the phone number.
          phone_number: "{{ (phone_number|string)[-8:] }}"

      - service: shell_command.curl
        response_variable: result
        data:
          url: "https://agent.puzzel.com/contactcentre5/{{ states('sensor.puzzel_customer_key') }}/externalcontact/contacts/search"
          method: post
          headers:
            Content-Type: application/json
            Authorization: "Bearer {{ state_attr('sensor.puzzel_login', 'accessToken') }}"
          payload:
            phoneNumber: "{{ phone_number|string }}"

      - variables:
          # Convert stdout from JSON to dict
          stdout: "{{ result.stdout | from_json }}"
          # Extract first result from JSON
          caller: "{{ stdout.result | first }}"

      - stop: "Return caller info"
        response_variable: caller

  puzzel_lookup_caller:
    alias: "Puzzel Caller Lookup"
    fields:
      phone_number:
        description: "Phone number to lookup in Puzzel contacts"
        example: "12345678"
    sequence:
      - service: script.puzzel_contacts_lookup
        response_variable: puzzel_contacts_lookup_result
        data:
          phone_number: "{{ phone_number }}"
      - service: script.puzzel_external_contacts_lookup
        response_variable: puzzel_external_contacts_lookup_result
        data:
          phone_number: "{{ phone_number }}"

      - variables:
          caller: "{{ puzzel_contacts_lookup_result if (puzzel_contacts_lookup_result != none and puzzel_contacts_lookup_result != {}) else puzzel_external_contacts_lookup_result }}"

      - stop: "Return caller info"
        response_variable: caller

  puzzel_get_current_request:
    alias: "Puzzel Get Current Request"
    sequence:
      - service: shell_command.curl
        response_variable: result
        data:
          url: "https://agent.puzzel.com/contactcentre5/{{ states('sensor.puzzel_customer_key') }}/users/{{ states('sensor.puzzel_user_id') }}/visualqueues"
          method: get
          headers:
            Content-Type: application/json
            Authorization: "Bearer {{ state_attr('sensor.puzzel_login', 'accessToken') }}"

      - variables:
          # Convert stdout from JSON to dict
          stdout: "{{ result.stdout | from_json }}"
          # Extract first result from JSON
          request: "{{ stdout.result | first }}"

      - stop: "Return request info"
        response_variable: request

  puzzel_log_on:
    alias: "Log onto Puzzel queue"
    fields:
      queue:
        description: "Name of queue to log on to (case sensitive)"
        example: "LSS Sekundær"
      queue_id:
        description: "ID of queue to log on to (overrides queue name)"
        example: 12345
    variables:
      profile_id: "{{ (queue_id|int) or (state_attr('sensor.puzzel_ko', 'available_profiles') | selectattr('name', 'equalto', queue) | first).id }}"
      phone_number: !secret work_phone_number
    sequence:
      - alias: "ensure all variables"
        condition: template
        value_template: "{{ not not (profile_id and phone_number) }}"
      - alias: "Log off if already logged on"
        choose:
          - conditions:
              - condition: state
                entity_id: sensor.puzzel_state
                state:
                  - "Ledig"
                  - "Pause"
            sequence:
              - service: script.turn_on
                target:
                  entity_id: script.puzzel_log_off
              - delay:
                  seconds: 2
      - service: shell_command.curl
        data:
          url: "https://agent.puzzel.com/contactcentre5/{{ states('sensor.puzzel_customer_key') }}/users/{{ states('sensor.puzzel_user_id')|string }}/logon"
          method: post
          headers:
            Content-Type: application/json
            Authorization: "Bearer {{ state_attr('sensor.puzzel_login', 'accessToken') }}"
          payload:
            phoneType: "Phone"
            profileId: "{{ profile_id|int }}"
            phoneNumber: "{{ phone_number|string }}"
      - delay:
          seconds: 1
      - service: automation.trigger
        target:
          entity_id: automation.update_puzzel_user_info

  puzzel_log_off:
    alias: "Log off Puzzel"
    sequence:
      - service: shell_command.curl
        data:
          url: "https://agent.puzzel.com/contactcentre5/{{ states('sensor.puzzel_customer_key') }}/users/{{ states('sensor.puzzel_user_id') }}/logoff"
          method: post
          headers:
            Content-Type: application/json
            Authorization: "Bearer {{ state_attr('sensor.puzzel_login', 'accessToken') }}"
          payload_string: "{}"
      - delay:
          seconds: 1
      - service: automation.trigger
        target:
          entity_id: automation.update_puzzel_user_info

  puzzel_pause_on:
    alias: "Puzzel Pause On"
    sequence:
      - service: shell_command.curl
        data:
          url: "https://agent.puzzel.com/contactcentre5/{{ states('sensor.puzzel_customer_key') }}/users/{{ states('sensor.puzzel_user_id') }}/pauseon"
          method: post
          headers:
            Content-Type: application/json
            Authorization: "Bearer {{ state_attr('sensor.puzzel_login', 'accessToken') }}"
          payload_string: "{}"
      - delay:
          seconds: 1
      - service: automation.trigger
        target:
          entity_id: automation.update_puzzel_user_info

  puzzel_pause_off:
    alias: "Puzzel Pause Off"
    sequence:
      - service: shell_command.curl
        data:
          url: "https://agent.puzzel.com/contactcentre5/{{ states('sensor.puzzel_customer_key') }}/users/{{ states('sensor.puzzel_user_id') }}/pauseoff"
          method: post
          headers:
            Content-Type: application/json
            Authorization: "Bearer {{ state_attr('sensor.puzzel_login', 'accessToken') }}"
          payload_string: "{}"
      - delay:
          seconds: 1
      - service: automation.trigger
        target:
          entity_id: automation.update_puzzel_user_info

automation:
  - id: update_puzzel_user_info
    alias: Update Puzzel user info
    trigger:
      - platform: state
        entity_id: sensor.puzzel_login
      - platform: homeassistant
        event: start
    action:
      - delay:
          seconds: 1
      - service: homeassistant.update_entity
        target:
          entity_id: sensor.puzzel_user
      - delay:
          seconds: 1
      - service: homeassistant.update_entity
        target:
          entity_id: sensor.puzzel_user_state

  - id: puzzel_state_confirmation
    alias: Puzzel state confirmation
    mode: single
    trigger:
      - platform: state
        entity_id: sensor.puzzel_profil
      - platform: state
        entity_id: binary_sensor.puzzel_user_state
        attribute: state
    condition:
      - condition: template
        value_template: "{{ trigger.from_state.state != 'unknown' and trigger.from_state.state != '' and trigger.from_state.state != 'unavailable' }}"
      - condition: not
        conditions:
          - condition: state
            entity_id: sensor.puzzel_profil
            state: "unknown"
    action:
      - service: notify.telegram_darkfox
        data:
          message: >-
            {% if is_state('sensor.puzzel_state', 'Logget af') %}
              Logget af Puzzel
            {% else %}
              Logget på Puzzel - {{ states('sensor.puzzel_ko') }}. Status: {{ states('sensor.puzzel_state') }}
            {% endif %}

  - id: puzzel_state_notification
    alias: Puzzel State Notification
    initial_state: true
    mode: queued
    trigger:
      - platform: state
        entity_id: sensor.puzzel_profil
      - platform: state
        entity_id: sensor.puzzel_state
        attribute: state
    action:
      - service: notify.mobile_app_arbejdstelefon
        data:
          title: "Puzzel Status: {{ 'Logget af' if is_state('sensor.puzzel_profil', 'Logget af') else 'Logget på' }}"
          message: "Profil: {{ states('sensor.puzzel_profil') }}. Status: {{ states('sensor.puzzel_state') }}"
          data:
            tag: "puzzel_status"
            channel: "Puzzel Status"
            importance: low
            ttl: 0
            priority: high
            persistent: true
            clickAction: noAction
            notification_icon: >-
              {%- if is_state('sensor.puzzel_state', 'Logget af') -%}
                mdi:phone-classic-off
              {%- elif is_state('sensor.puzzel_state', 'Pause') -%}
                mdi:pause-circle-outline
              {%- elif is_state('sensor.puzzel_state', 'Ledig') -%}
                mdi:phone-classic
              {%- else -%}
                mdi:help
              {%- endif -%}
            actions:
              - action: "puzzel_switch"
                title: "{{ 'Log på' if is_state('sensor.puzzel_profil', 'Logget af') else 'log_af' }}"
              - action: "puzzel_pause"
                title: "{{ 'Ledig' if is_state('sensor.puzzel_state', 'Pause') else 'Pause' }}"
              - action: "URI"
                title: "Menu"
                uri: "/lovelace-work/work"

  - id: notification_action_puzzel_switch
    alias: Notification Action Puzzel Switch
    initial_state: true
    trigger:
      - platform: event
        event_type: mobile_app_notification_action
        event_data:
          action: "puzzel_switch"
    action:
      - service: switch.toggle
        target:
          entity_id: switch.puzzel

  - id: notification_action_puzzel_pause
    alias: Notification Action Puzzel Pause
    initial_state: true
    trigger:
      - platform: event
        event_type: mobile_app_notification_action
        event_data:
          action: "puzzel_pause"
    action:
      - service: switch.toggle
        target:
          entity_id: switch.puzzel_pause

  - id: telegram_bot_puzzel_menu
    initial_state: true
    alias: Puzzel menu
    trigger:
      - platform: event
        event_type: telegram_callback
        event_data:
          command: "/puzzel"
      - platform: event
        event_type: telegram_command
        event_data:
          command: "/puzzel"
    action:
      - service: notify.telegram_darkfox
        data:
          message: >-
            {% if is_state('sensor.puzzel_profil', 'Logget af') %}
              Logget af Puzzel
            {% else %}
              Logget på Puzzel - {{ states('sensor.puzzel_profil') }}. Status: {{ states('sensor.puzzel_state') }}
            {% endif %}
            Menu:
          data:
            inline_keyboard: >-
              {% if is_state('sensor.puzzel_profil', 'Logget af') %}
                {{ (
                  state_attr('sensor.puzzel_ko', 'available_profiles')
                  | map(attribute='name')
                  | map('regex_replace', '\A(.*)\Z', '\\1:/puzzel_login \\1')
                  | list
                ) }}
              {% else %}
                {{ ['Log af:/puzzel_log_off']
                + ['Skift kø:/puzzel_login']
                + ['Ledig:/puzzel_pause off']
                + ['Pause:/puzzel_pause on'] }}
              {% endif %}

  - id: telegram_bot_puzzel_log_on_menu
    initial_state: true
    alias: Puzzel log on menu
    trigger:
      - platform: state
        entity_id: binary_sensor.working
        to: "on"
        for:
          minutes: 5
    condition:
      - alias: "Not logged into an on call queue"
        condition: template
        value_template: "{{ is_state('sensor.puzzel_profil', 'Logget af') }}"
    action:
      - service: notify.telegram_darkfox
        data:
          message: "Log på Puzzel?"
          data:
            inline_keyboard: >-
              {{ state_attr('sensor.puzzel_ko', 'available_profiles') | map(attribute='name') | map('regex_replace', '\A(.*)\Z', '\\1:/puzzel_login \\1') | list }}

  - id: telegram_bot_log_off_puzzel
    alias: "Telegram bot log off puzzel"
    initial_state: true
    trigger:
      - platform: event
        event_type: telegram_callback
        event_data:
          command: "/puzzel_log_off"
      - platform: event
        event_type: telegram_command
        event_data:
          command: "/puzzel_log_off"
    action:
      - service: telegram_bot.answer_callback_query
        data:
          callback_query_id: "{{ trigger.event.data.id }}"
          message: "Logger af Puzzel..."
      - service: script.puzzel_log_off

  - id: telegram_bot_log_on_puzzel
    alias: "Telegram bot log on Puzzel"
    initial_state: true
    trigger:
      - platform: event
        event_type: telegram_callback
        event_data:
          command: "/puzzel_login"
      - platform: event
        event_type: telegram_command
        event_data:
          command: "/puzzel_login"
    action:
      - choose:
          - conditions:
              - condition: template
                value_template: "{{ not trigger.event.data['args'] }}"
            sequence:
              - service: automation.trigger
                target:
                  entity_id: automation.puzzel_log_on_menu
        default:
          - service: telegram_bot.answer_callback_query
            data:
              callback_query_id: "{{ trigger.event.data.id }}"
              message: "Logger på {{ trigger.event.data['args'] | join(' ') }}..."
          - service: script.puzzel_log_on
            data:
              queue: "{{ trigger.event.data['args'] | join(' ') }}"

  - id: telegram_bot_pause_puzzel
    alias: "Telegram bot pause Puzzel"
    initial_state: true
    trigger:
      - platform: event
        event_type: telegram_callback
        event_data:
          command: "/puzzel_pause"
      - platform: event
        event_type: telegram_command
        event_data:
          command: "/puzzel_pause"
    action:
      - choose:
          - conditions:
              - condition: template
                value_template: "{{ not trigger.event.data['args'] }}"
            sequence:
              - service: telegram_bot.answer_callback_query
                data:
                  callback_query_id: "{{ trigger.event.data.id }}"
                  message: "Sætter på pause..."
              - service: script.puzzel_pause_on
          - conditions:
              - condition: template
                value_template: "{{ trigger.event.data['args'][0] == 'off' }}"
            sequence:
              - service: telegram_bot.answer_callback_query
                data:
                  callback_query_id: "{{ trigger.event.data.id }}"
                  message: "Sætter ledig..."
              - service: script.puzzel_pause_off
