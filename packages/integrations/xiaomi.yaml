camera:
  - platform: xiaomi_cloud_map_extractor
    host: 192.168.42.180
    token: !secret xiaomi_token
    username: !secret xiaomi_cloud_username
    password: !secret xiaomi_cloud_password
    country: "de"
    colors:
      # color_map_outside: [64, 64, 64]
      color_path: [64, 128, 255]
      color_goto_path: [255, 0, 0]
      color_predicted_path: [0, 172, 0]
    room_colors:
      "16": [172, 172, 172]
      "17": [245, 217, 91] # Køkken
      "18": [255, 180, 117] # Kontor
      "19": [172, 172, 172]
      "20": [172, 172, 172]
      "21": [255, 176, 235] # Gang
      "22": [172, 172, 172]
      "23": [250, 126, 112] # Stue
      "24": [184, 133, 204] # Soveværelse
    map_transformation:
      scale: 2
      trim:
        left: 22
        right: 26
        top: 25
        bottom: 23
    draw:
      - charger
      - path
      - goto_path
      - predicted_path
      - no_go_zones
      - no_mopping_zones
      - vacuum_position
      - virtual_walls
      # - zones
    attributes:
      - calibration_points
      - charger
      - goto
      - goto_path
      - goto_predicted_path
      - image
      - map_name
      - no_go_areas
      - no_mopping_areas
      - obstacles
      - path
      - room_numbers
      - rooms
      - vacuum_position
      - vacuum_room
      - walls
      - zones
    scan_interval:
      seconds: 10
    auto_update: true

script:
  vacuum_follow_path:
    mode: single
    alias: Vacuum follow path
    fields:
      path:
        name: Path
      entity_id:
        name: Vacuum entity
    sequence:
      - repeat:
          count: "{{ path | length }}"
          sequence:
            - service: vacuum.send_command
              data:
                entity_id: "{{ entity_id }}"
                command: app_goto_target
                params: "{{ path[repeat.index-1] }}"
            - wait_template: "{{ is_state(entity_id, 'cleaning') }}"
              timeout: 00:00:30
              continue_on_timeout: false
            - delay: 00:00:01
            - wait_template: "{{ is_state(entity_id, 'idle') or is_state(entity_id, 'paused') }}"
              timeout: 00:05:00
              continue_on_timeout: false

  send_vacuum_to_emptying_position:
    alias: "Send støvsuger til tømmeposition"
    sequence:
      - service: xiaomi_miio.vacuum_goto
        data:
          entity_id: vacuum.xiaomi_vacuum_cleaner
          x_coord: 27500
          y_coord: 19500
      - alias: "update last empty count"
        service: input_text.set_value
        data:
          entity_id: input_text.vacuum_last_empty
          value: "{{ states('sensor.xiaomi_vacuum_cleaner_total_clean_area') }}"

input_boolean:
  vacuum_show_card:
    name: Vis Støvsuger Menu
    icon: mdi:menu

input_text:
  vacuum_last_empty:
    name: Vacuum Last Empty
    icon: mdi:delete

binary_sensor:
  - platform: template
    sensors:
      vacuum_show_card:
        friendly_name: "Vis Støvsuger Menu"
        value_template: >-
          {{ 
            is_state('input_boolean.vacuum_show_card', 'on')
            or not (
              is_state('vacuum.xiaomi_vacuum_cleaner', 'docked')
              or  is_state('vacuum.xiaomi_vacuum_cleaner', 'charging')
            )
          }}

sensor:
  - platform: template
    sensors:
      vacuum_area_cleaned_since_last_empty:
        friendly_name: "Areal støvsuget siden sidste tømning"
        value_template: "{{ (states('sensor.xiaomi_vacuum_cleaner_total_clean_area')|float) - (states('input_text.vacuum_last_empty')|float) }}"

automation:
  - id: vacuum_while_at_work
    initial_state: true
    alias: Støvsug mens jeg er på arbejde
    trigger:
      - platform: time_pattern
        hours: "11"
        minutes: "/5"
        seconds: "0"
      - platform: time_pattern
        hours: "15"
        minutes: "/5"
        seconds: "0"
    condition:
      - condition: state
        entity_id: vacuum.xiaomi_vacuum_cleaner
        state: "docked"
      - condition: state
        entity_id: binary_sensor.location_at_work
        state: "on"
      - alias: "Last clean was more than 8 hours ago"
        condition: template
        value_template: "{{ states('sensor.xiaomi_vacuum_cleaner_last_clean_start')|as_timestamp < now()|as_timestamp - 8*60*60 }}"
    action:
      - service: script.debug_notification
        data_template:
          message: "Vacuum all rooms"
          title: "Vacuum"
      - service: xiaomi_miio.vacuum_clean_segment
        target:
          entity_id: vacuum.xiaomi_vacuum_cleaner
        data:
          segments: [17, 17, 21, 21, 24, 24, 23, 23, 18, 18]

  - id: vacuum_go_to_empty_position_before_coming_home
    initial_state: true
    trigger:
      - platform: state
        entity_id: binary_sensor.martin_home_soon
        from: "off"
        to: "on"
    condition:
      - condition: template
        value_template: "{{ states('sensor.vacuum_area_cleaned_since_last_empty')|int > 50 }}"
    action:
      - service: script.send_vacuum_to_emptying_position

  - id: vacuum_hide_menu_when_docked
    initial_state: true
    trigger:
      - platform: state
        entity_id: vacuum.xiaomi_vacuum_cleaner
        to: "docked"
    action:
      - service: input_boolean.turn_off
        target:
          entity_id: input_boolean.vacuum_show_card
