# command_line:
#   - switch:
#       name: Gang Sk√¶rm
#       unique_id: 6878d64a-b2f4-48d4-8175-a19ff5a49e94
#       icon: mdi:image-frame
#       command_on: ssh -i /config/ssh/id_rsa -o 'StrictHostKeyChecking=no' martin@gang-skaerm.local 'export DISPLAY=:0 && xset dpms force on && xset -q'
#       command_off: ssh -i /config/ssh/id_rsa -o 'StrictHostKeyChecking=no' martin@gang-skaerm.local 'export DISPLAY=:0 && xset dpms force off && xset -q'
#       command_state: ssh -i /config/ssh/id_rsa -o 'StrictHostKeyChecking=no' martin@gang-skaerm.local 'DISPLAY=:0 xset -q'
#       value_template: "{{ 'Monitor is On' in value }}"

script:
  reload_lovelace_on_tablets:
    alias: "Reload lovelace on all tablets"
    sequence:
      - service: light.turn_on
        target:
          entity_id:
            - light.kitchen_tablet
            - light.bathroom_tablet
            - light.bedroom_tablet
            - light.hallway_tablet
      - delay:
          seconds: 5
      - service: browser_mod.javascript
        data:
          code: "lovelace_reload();"
      - delay:
          seconds: 10
      - service: browser_mod.refresh
      - delay:
          seconds: 20
      - event: refresh_light_profile

  trigger_tasker_task:
    alias: "Trigger Tasker Task"
    fields:
      action:
        description: The Mobile App to send the command to
        example: "notify.mobile_app_foxtablet"
        selector:
          action:
      task_id:
        description: The Tasker task to trigger
        example: "TASK_NAME"
        selector:
          text:
      extra_data:
        description: Extra data to send to Tasker
        example: "KEY1=:=VALUE1;KEY2=:=VALUE2"
        selector:
          text:
    sequence:
      - service: "{{ action }}"
        data:
          message: "command_broadcast_intent"
          data:
            intent_package_name: "net.dinglisch.android.taskerm"
            intent_action: "net.dinglisch.android.taskerm.{{ task_id }}"
            intent_extras: "{{ extra_data if extra_data is defined else none }}"
            ttl: 0
            priority: high

automation:
  - alias: charge_kitchen_tablet
    trigger:
      - platform: numeric_state
        entity_id: sensor.kokken_tablet_battery_level
        below: 60
      - platform: state
        entity_id: sensor.kokken_tablet_battery_level
        to:
          - "unknown"
          - "unavailable"
      - platform: state
        entity_id: binary_sensor.home_assistant_loaded
        to: "on"
    condition:
      - condition: numeric_state
        entity_id: sensor.kokken_tablet_battery_level
        below: 60
    action:
      - service: switch.turn_on
        data:
          entity_id: switch.kokken_tablet_lader
  - alias: discharge_kokken_tablet
    trigger:
      - platform: numeric_state
        entity_id: sensor.kokken_tablet_battery_level
        above: 80
      - platform: state
        entity_id: binary_sensor.home_assistant_loaded
        to: "on"
    condition:
      - condition: numeric_state
        entity_id: sensor.kokken_tablet_battery_level
        above: 80
    action:
      - service: switch.turn_off
        data:
          entity_id: switch.kokken_tablet_lader

  - alias: charge_hallway_tablet
    trigger:
      - platform: numeric_state
        entity_id: sensor.gang_tablet_battery_level
        below: 60
      - platform: state
        entity_id: sensor.gang_tablet_battery_level
        to:
          - "unknown"
          - "unavailable"
      - platform: state
        entity_id: binary_sensor.home_assistant_loaded
        to: "on"
    condition:
      - condition: numeric_state
        entity_id: sensor.gang_tablet_battery_level
        below: 60
    action:
      - service: switch.turn_on
        data:
          entity_id: switch.gang_tablet_lader
  - alias: discharge_gang_tablet
    trigger:
      - platform: numeric_state
        entity_id: sensor.gang_tablet_battery_level
        above: 80
      - platform: state
        entity_id: binary_sensor.home_assistant_loaded
        to: "on"
    condition:
      - condition: numeric_state
        entity_id: sensor.gang_tablet_battery_level
        above: 80
    action:
      - service: switch.turn_off
        data:
          entity_id: switch.gang_tablet_lader

  - alias: charge_bedroom_tablet
    trigger:
      - platform: numeric_state
        entity_id: sensor.sovevaerelse_tablet_battery_level
        below: 60
      - platform: state
        entity_id: binary_sensor.bedroom_activity
        to: "on"
    action:
      - service: switch.turn_on
        data:
          entity_id: switch.bedroom_tablet_charger

  - alias: discharge_bedroom_tablet
    trigger:
      - platform: numeric_state
        entity_id: sensor.sovevaerelse_tablet_battery_level
        above: 80
      - platform: state
        entity_id: binary_sensor.bedroom_activity
        to: "off"
    condition:
      - condition: numeric_state
        entity_id: sensor.sovevaerelse_tablet_battery_level
        above: 80
      - condition: state
        entity_id: binary_sensor.bedroom_activity
        state: "off"
    action:
      - service: switch.turn_off
        data:
          entity_id: switch.bedroom_tablet_charger

light:
  - platform: template
    lights:
      kitchen_tablet:
        friendly_name: "Kitchen Tablet"
        level_template: "{{ states('sensor.kokken_tablet_screen_brightness')|int }}"
        value_template: "{{ is_state('binary_sensor.kokken_tablet_interactive', 'on') }}"
        turn_on:
          - service: notify.mobile_app_kokken_tablet
            data:
              message: "command_screen_on"
              data:
                command: "keep_screen_on"
                ttl: 0
                priority: high
        turn_off:
          - service: script.trigger_tasker_task
            data:
              action: notify.mobile_app_kokken_tablet
              task_id: "SCREEN_OFF"
              extra_data: "state:false"
        set_level:
          - service: notify.mobile_app_kokken_tablet
            data:
              message: "command_screen_on"
              data:
                command: "keep_screen_on"
                ttl: 0
                priority: high
          - service: notify.mobile_app_kokken_tablet
            data:
              message: "command_screen_brightness_level"
              data:
                command: "{{ brightness }}"
                ttl: 0
                priority: high
          - delay:
              seconds: 1
          - service: notify.mobile_app_kokken_tablet
            data:
              message: "command_screen_brightness_level"
              data:
                command: "{{ brightness }}"
                ttl: 0
                priority: high

      hallway_tablet:
        friendly_name: "Hallway Tablet"
        level_template: "{{ states('sensor.gang_tablet_screen_brightness')|int }}"
        value_template: "{{ is_state('binary_sensor.gang_tablet_interactive', 'on') }}"
        turn_on:
          - service: notify.mobile_app_gang_tablet
            data:
              message: "command_screen_on"
              data:
                command: "keep_screen_on"
                ttl: 0
                priority: high
        turn_off:
          - service: script.trigger_tasker_task
            data:
              action: notify.mobile_app_gang_tablet
              task_id: "SCREEN_OFF"
              extra_data: "state:false"
        set_level:
          - service: notify.mobile_app_gang_tablet
            data:
              message: "command_screen_on"
              data:
                command: "keep_screen_on"
                ttl: 0
                priority: high
          - service: notify.mobile_app_gang_tablet
            data:
              message: "command_screen_brightness_level"
              data:
                command: "{{ brightness }}"
                ttl: 0
                priority: high
          - delay:
              seconds: 1
          - service: notify.mobile_app_gang_tablet
            data:
              message: "command_screen_brightness_level"
              data:
                command: "{{ brightness }}"
                ttl: 0
                priority: high

      bathroom_tablet:
        friendly_name: "Bathroom Tablet"
        level_template: "{{ states('sensor.badevaerelse_tablet_screen_brightness')|int }}"
        value_template: "{{ is_state('binary_sensor.badevaerelse_tablet_interactive', 'on') }}"
        turn_on:
          - service: notify.mobile_app_badevaerelse_tablet
            data:
              message: "command_screen_on"
              data:
                command: "keep_screen_on"
                ttl: 0
                priority: high
        turn_off:
          - service: script.trigger_tasker_task
            data:
              action: notify.mobile_app_badevaerelse_tablet
              task_id: "SCREEN_OFF"
              extra_data: "state:false"
        set_level:
          - service: notify.mobile_app_badevaerelse_tablet
            data:
              message: "command_screen_on"
              data:
                command: "keep_screen_on"
                ttl: 0
                priority: high
          - service: notify.mobile_app_badevaerelse_tablet
            data:
              message: "command_screen_brightness_level"
              data:
                command: "{{ brightness }}"
                ttl: 0
                priority: high
          - delay:
              seconds: 1
          - service: notify.mobile_app_badevaerelse_tablet
            data:
              message: "command_screen_brightness_level"
              data:
                command: "{{ brightness }}"
                ttl: 0
                priority: high

      bedroom_tablet:
        friendly_name: "Bedroom Tablet"
        level_template: "{{ states('sensor.sovevaerelse_tablet_screen_brightness')|int }}"
        value_template: "{{ is_state('binary_sensor.sovevaerelse_tablet_interactive', 'on') }}"
        turn_on:
          - service: notify.mobile_app_sovevaerelse_tablet
            data:
              message: "command_screen_on"
              data:
                command: "keep_screen_on"
                ttl: 0
                priority: high
        turn_off:
          - service: script.trigger_tasker_task
            data:
              action: notify.mobile_app_sovevaerelse_tablet
              task_id: "SCREEN_OFF"
              extra_data: "state:false"
        set_level:
          - service: notify.mobile_app_sovevaerelse_tablet
            data:
              message: "command_screen_on"
              data:
                command: "keep_screen_on"
                ttl: 0
                priority: high
          - service: notify.mobile_app_sovevaerelse_tablet
            data:
              message: "command_screen_brightness_level"
              data:
                command: "{{ brightness }}"
                ttl: 0
                priority: high
          - delay:
              seconds: 1
          - service: notify.mobile_app_sovevaerelse_tablet
            data:
              message: "command_screen_brightness_level"
              data:
                command: "{{ brightness }}"
                ttl: 0
                priority: high

      bedroom_tablet_screensaver:
        friendly_name: "Bedroom Tablet Screensaver"
        value_template: >-
          {{
            states('sensor.sovevaerelse_tablet_last_used_app') in ['com.firebirdberlin.nightdream']
            and is_state('binary_sensor.sovevaerelse_tablet_interactive', 'on')
          }}
        turn_on:
          - service: script.trigger_tasker_task
            data:
              action: notify.mobile_app_sovevaerelse_tablet
              task_id: "SCREENSAVER"
              extra_data: "state:true"
        turn_off:
          - service: script.trigger_tasker_task
            data:
              action: notify.mobile_app_sovevaerelse_tablet
              task_id: "SCREENSAVER"
              extra_data: "state:false"
