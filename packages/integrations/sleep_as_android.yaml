input_select:
  sleep_as_android_state:
    icon: mdi:sleep
    options:
      - awake
      - bedtime
      - sleeping
      - paused
      - smart wake
      - alarm
      - snoozing

counter:
  snooze_counter:
    name: Snooze Counter
    icon: mdi:alarm-snooze

script:
  sleep_as_android_start_tracking:
    alias: "Sleep As Android Start Tracking"
    sequence:
      - service: notify.mobile_app_sovevaerelse_tablet
        data:
          message: "command_broadcast_intent"
          data:
            intent_package_name: "com.urbandroid.sleep"
            intent_action: "com.urbandroid.sleep.alarmclock.START_SLEEP_TRACK"

  sleep_as_android_stop_tracking:
    alias: "Sleep As Android Stop Tracking"
    sequence:
      - service: notify.mobile_app_sovevaerelse_tablet
        data:
          message: "command_broadcast_intent"
          data:
            intent_package_name: "com.urbandroid.sleep"
            intent_action: "com.urbandroid.sleep.alarmclock.STOP_SLEEP_TRACK"

  sleep_as_android_pause_tracking:
    alias: "Sleep As Android Pause Tracking"
    sequence:
      - service: notify.mobile_app_sovevaerelse_tablet
        data:
          message: "command_broadcast_intent"
          data:
            intent_package_name: "com.urbandroid.sleep"
            intent_action: "com.urbandroid.sleep.ACTION_PAUSE_TRACKING"

  sleep_as_android_snooze_alarm:
    alias: "Sleep As Android Snooze Alarm"
    sequence:
      - service: notify.mobile_app_sovevaerelse_tablet
        data:
          message: "command_broadcast_intent"
          data:
            intent_package_name: "com.urbandroid.sleep"
            intent_action: "com.urbandroid.sleep.alarmclock.ALARM_SNOOZE"
            intent_extras: "extra_snooze_time:{{ snooze_time if snooze_time else 5 }}"

  sleep_as_android_dismiss_alarm:
    alias: "Sleep As Android Dismiss Alarm"
    sequence:
      - service: notify.mobile_app_sovevaerelse_tablet
        data:
          message: "command_broadcast_intent"
          data:
            intent_package_name: "com.urbandroid.sleep"
            intent_action: "com.urbandroid.sleep.alarmclock.ALARM_DISMISS_CAPTCHA"

  sleep_as_android_set_alarm:
    alias: "Set Sleep As Android Alarm (args: [message], timehour, timemin)"
    sequence:
      - service: notify.mobile_app_sovevaerelse_tablet
        data:
          message: "command_activity"
          data:
            intent_package_name: "com.urbandroid.sleep"
            intent_action: "android.intent.action.SET_ALARM"
            intent_extras: "android.intent.extra.alarm.MESSAGE:{{ message if message else 'HA' }},android.intent.extra.alarm.HOUR:{{ timehour }},android.intent.extra.alarm.MINUTES:{{ timemin }},android.intent.extra.alarm.SKIP_UI:true"

  sleep_as_android_start_lullaby:
    alias: "Sleep As Android Start Lullaby"
    sequence:
      - service: notify.mobile_app_sovevaerelse_tablet
        data:
          message: "command_broadcast_intent"
          data:
            intent_package_name: "com.urbandroid.sleep"
            intent_action: "com.urbandroid.sleep.media.lullaby.LullabyService"
            intent_extras: "extra_lullaby:{{ name if name else 'STORM' }}"

  sleep_as_android_stop_lullaby:
    alias: "Sleep As Android Stop Lullaby"
    sequence:
      - service: notify.mobile_app_sovevaerelse_tablet
        data:
          message: "command_broadcast_intent"
          data:
            intent_package_name: "com.urbandroid.sleep"
            intent_action: "com.urbandroid.sleep.ACTION_LULLABY_STOP_PLAYBACK"

automation:
  ###########################
  # SLEEP AS ANDROID EVENTS #
  ###########################

  ## Possible Sleep as Android events
  # - sleep_tracking_started
  # - sleep_tracking_stopped
  # - sleep_tracking_paused
  # - sleep_tracking_resumed
  # - alarm_snooze_clicked
  # - alarm_snooze_cancelled
  #     Only from Tasker! - When cancelled from snooze notification
  # - time_to_bed_alarm_alert
  #     fires when you get a bedtime notification
  # - alarm_alert_start
  # - alarm_alert_dismiss
  #     fires when you dismiss alarm (after you solve CAPTCHA, if itâ€™s set)
  # - rem
  #     fires when we estimate the start of REM phase
  # - antisnoring
  #     fires when we detect snoring
  # - smart_period
  #     fires 45 minutes before the smart wakeup period starts
  # - lullaby
  #     Only from Tasker!

  # - alias: Sleep as Android event
  #   initial_state: True
  #   trigger:
  #     - platform: webhook
  #       webhook_id: !secret sleep_as_android_webhook
  #     # - platform: mqtt
  #     #   topic: "SleepAsAndroid/Martin"
  #   action:
  #     - event: sleep_as_android
  #       event_data:
  #         value: "{{ trigger.json.event }}"
  #     - service: script.debug_notification
  #       data:
  #         message: "{{ trigger.json.event }}"
  #         title: "Sleep As Android Webhook Event"

  - alias: Sleep as Android MQTT event
    initial_state: True
    trigger:
      - platform: mqtt
        topic: "SleepAsAndroid"
    action:
      - event: sleep_as_android
        event_data:
          value: "{{ trigger.payload_json.event }}"
      # - service: script.debug_notification
      #   data:
      #     message: "{{ trigger.payload_json.event }}"
      #     title: "Sleep As Android MQTT Event"

  - alias: sleep_as_android_state_bedtime
    initial_state: true
    trigger:
      - platform: event
        event_type: sleep_as_android
        event_data:
          value: time_to_bed_alarm_alert
    condition:
      condition: and
      conditions:
        - condition: state
          entity_id: binary_sensor.bedtime
          state: "on"
        - condition: state
          entity_id: input_select.sleep_as_android_state
          state: "awake"
    action:
      service: input_select.select_option
      data:
        entity_id: input_select.sleep_as_android_state
        option: bedtime

  - alias: sleep_as_android_state_sleeping
    initial_state: true
    trigger:
      - platform: event
        event_type: sleep_as_android
        event_data:
          value: sleep_tracking_started
      - platform: event
        event_type: sleep_as_android
        event_data:
          value: sleep_tracking_resumed
    condition:
      - condition: or
        conditions:
          - condition: state
            entity_id: input_select.sleep_as_android_state
            state: bedtime
          - condition: state
            entity_id: input_select.sleep_as_android_state
            state: paused
    action:
      - service: input_select.select_option
        data:
          entity_id: input_select.sleep_as_android_state
          option: sleeping

  - alias: sleep_as_android_state_sleeping_cancelled
    initial_state: true
    trigger:
      platform: event
      event_type: sleep_as_android
      event_data:
        value: sleep_tracking_stopped
    condition:
      condition: and
      conditions:
        - condition: time
          after: "18:00:00"
          before: "04:00:00"
        - condition: or
          conditions:
            - condition: state
              entity_id: input_select.sleep_as_android_state
              state: sleeping
            - condition: state
              entity_id: input_select.sleep_as_android_state
              state: paused
    action:
      - service: input_select.select_option
        data:
          entity_id: input_select.sleep_as_android_state
          option: bedtime

  - alias: sleep_as_android_state_paused
    initial_state: true
    trigger:
      - platform: event
        event_type: sleep_as_android
        event_data:
          value: sleep_tracking_paused
    condition:
      - condition: state
        entity_id: input_select.sleep_as_android_state
        state: sleeping
    action:
      service: input_select.select_option
      data:
        entity_id: input_select.sleep_as_android_state
        option: paused

  - alias: sleep_as_android_state_smart_wake
    initial_state: true
    trigger:
      platform: event
      event_type: sleep_as_android
      event_data:
        value: smart_period
    condition:
      - condition: or
        conditions:
          - condition: state
            entity_id: input_select.sleep_as_android_state
            state: sleeping
          - condition: state
            entity_id: input_select.sleep_as_android_state
            state: paused
    action:
      - service: input_select.select_option
        data:
          entity_id: input_select.sleep_as_android_state
          option: smart wake

  - alias: sleep_as_android_state_alarm
    initial_state: true
    trigger:
      platform: event
      event_type: sleep_as_android
      event_data:
        value: alarm_alert_start
    condition:
      - condition: or
        conditions:
          - condition: state
            entity_id: input_select.sleep_as_android_state
            state: sleeping
          - condition: state
            entity_id: input_select.sleep_as_android_state
            state: paused
          - condition: state
            entity_id: input_select.sleep_as_android_state
            state: smart wake
    action:
      - service: input_select.select_option
        data:
          entity_id: input_select.sleep_as_android_state
          option: alarm

  - alias: sleep_as_android_state_snoozing
    initial_state: true
    trigger:
      platform: event
      event_type: sleep_as_android
      event_data:
        value: alarm_snooze_clicked
    condition:
      - condition: state
        entity_id: input_select.sleep_as_android_state
        state: alarm
    action:
      - service: input_select.select_option
        data:
          entity_id: input_select.sleep_as_android_state
          option: snoozing

  - alias: sleep_as_android_state_awake
    initial_state: true
    trigger:
      - platform: event
        event_type: sleep_as_android
        event_data:
          value: alarm_alert_dismiss
      - platform: event
        event_type: sleep_as_android
        event_data:
          value: alarm_snooze_cancelled
      - platform: event
        event_type: sleep_as_android
        event_data:
          value: sleep_tracking_stopped
    condition:
      condition: or
      conditions:
        - condition: state
          entity_id: input_select.sleep_as_android_state
          state: paused
        - condition: state
          entity_id: input_select.sleep_as_android_state
          state: alarm
        - condition: state
          entity_id: input_select.sleep_as_android_state
          state: snoozing
    action:
      - service: input_select.select_option
        data:
          entity_id: input_select.sleep_as_android_state
          option: awake

  # Snooze Counter
  - alias: sleep_as_android_reset_snooze_counter
    initial_state: true
    trigger:
      - platform: event
        event_type: sleep_as_android
        event_data:
          value: alarm_snooze_clicked
    action:
      - service: counter.reset
        data:
          entity_id: counter.snooze_counter

  - alias: sleep_as_android_snoozing
    initial_state: true
    trigger:
      - platform: event
        event_type: sleep_as_android
        event_data:
          value: sleep_tracking_started
    action:
      - service: counter.increment
        data:
          entity_id: counter.snooze_counter
