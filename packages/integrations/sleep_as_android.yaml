input_select:
  sleep_as_android_state:
    icon: mdi:sleep
    options:
      - awake
      - bedtime
      - sleeping
      - paused
      - smart wake
      - alarm
      - snoozing

counter:
  snooze_counter:
    name: Snooze Counter
    icon: mdi:alarm-snooze

sensor:
  - platform: template
    sensors:
      sleep_as_android_notification:
        friendly_name: "Sleep As Android Notification"
        value_template: "{{ state_attr('sensor.darkphone_active_notification_count', 'android.title_com.urbandroid.sleep') }}"

template:
  - binary_sensor:
      - name: Sleep as Android Bedtime
        state: "{{ is_state('sensor.sleep_as_android_notification', 'Sengetid') }}"
        icon: mdi:bed
      - name: Sleep as Android Tracking
        state: "{{ is_state('sensor.sleep_as_android_notification', 'Søvnanalyse') }}"
        icon: mdi:sleep
      - name: Sleep as Android Alarm
        state: "{{ is_state('sensor.sleep_as_android_notification', 'Søvnanalyse') }}"
        icon: mdi:alarm
      - name: Sleep as Android Snoozed
        state: "{{ 'Udsæt' in states('sensor.sleep_as_android_notification') }}"
        icon: mdi:alarm-snooze

automation:
  ###########################
  # SLEEP AS ANDROID EVENTS #
  ###########################

  ## Possible Sleep as Android events
  # - sleep_tracking_started
  # - sleep_tracking_stopped
  # - sleep_tracking_paused
  # - sleep_tracking_resumed
  # - alarm_snooze_clicked
  # - alarm_snooze_cancelled
  #     Only from Tasker! - When cancelled from snooze notification
  # - time_to_bed_alarm_alert
  #     fires when you get a bedtime notification
  # - alarm_alert_start
  # - alarm_alert_dismiss
  #     fires when you dismiss alarm (after you solve CAPTCHA, if it’s set)
  # - rem
  #     fires when we estimate the start of REM phase
  # - antisnoring
  #     fires when we detect snoring
  # - smart_period
  #     fires 45 minutes before the smart wakeup period starts
  # - lullaby
  #     Only from Tasker!

  - alias: Sleep as Android event
    initial_state: True
    trigger:
      - platform: webhook
        webhook_id: !secret sleep_as_android_webhook
      # - platform: mqtt
      #   topic: "SleepAsAndroid/Martin"
    action:
      - event: sleep_as_android
        event_data:
          value: "{{ trigger.json.event }}"
      # - service: script.debug_notification
      #   data:
      #     message: "{{ trigger.json.event }}"
      #     title: "Sleep As Android Event"

  - alias: sleep_as_android_state_bedtime
    initial_state: true
    trigger:
      - platform: event
        event_type: sleep_as_android
        event_data:
          value: time_to_bed_alarm_alert
    condition:
      condition: and
      conditions:
        - condition: state
          entity_id: binary_sensor.bedtime
          state: "on"
        - condition: state
          entity_id: input_select.sleep_as_android_state
          state: "awake"
    action:
      service: input_select.select_option
      data:
        entity_id: input_select.sleep_as_android_state
        option: bedtime

  - alias: sleep_as_android_state_sleeping
    initial_state: true
    trigger:
      - platform: event
        event_type: sleep_as_android
        event_data:
          value: sleep_tracking_started
      - platform: event
        event_type: sleep_as_android
        event_data:
          value: sleep_tracking_resumed
    condition:
      - condition: or
        conditions:
          - condition: state
            entity_id: input_select.sleep_as_android_state
            state: bedtime
          - condition: state
            entity_id: input_select.sleep_as_android_state
            state: paused
    action:
      - service: input_select.select_option
        data:
          entity_id: input_select.sleep_as_android_state
          option: sleeping

  - alias: sleep_as_android_state_sleeping_cancelled
    initial_state: true
    trigger:
      platform: event
      event_type: sleep_as_android
      event_data:
        value: sleep_tracking_stopped
    condition:
      condition: and
      conditions:
        - condition: time
          after: "18:00:00"
          before: "04:00:00"
        - condition: or
          conditions:
            - condition: state
              entity_id: input_select.sleep_as_android_state
              state: sleeping
            - condition: state
              entity_id: input_select.sleep_as_android_state
              state: paused
    action:
      - service: input_select.select_option
        data:
          entity_id: input_select.sleep_as_android_state
          option: bedtime

  - alias: sleep_as_android_state_paused
    initial_state: true
    trigger:
      - platform: event
        event_type: sleep_as_android
        event_data:
          value: sleep_tracking_paused
    condition:
      - condition: state
        entity_id: input_select.sleep_as_android_state
        state: sleeping
    action:
      service: input_select.select_option
      data:
        entity_id: input_select.sleep_as_android_state
        option: paused

  - alias: sleep_as_android_state_smart_wake
    initial_state: true
    trigger:
      platform: event
      event_type: sleep_as_android
      event_data:
        value: smart_period
    condition:
      - condition: or
        conditions:
          - condition: state
            entity_id: input_select.sleep_as_android_state
            state: sleeping
          - condition: state
            entity_id: input_select.sleep_as_android_state
            state: paused
    action:
      - service: input_select.select_option
        data:
          entity_id: input_select.sleep_as_android_state
          option: smart wake

  - alias: sleep_as_android_state_alarm
    initial_state: true
    trigger:
      platform: event
      event_type: sleep_as_android
      event_data:
        value: alarm_alert_start
    condition:
      - condition: or
        conditions:
          - condition: state
            entity_id: input_select.sleep_as_android_state
            state: sleeping
          - condition: state
            entity_id: input_select.sleep_as_android_state
            state: paused
          - condition: state
            entity_id: input_select.sleep_as_android_state
            state: smart wake
    action:
      - service: input_select.select_option
        data:
          entity_id: input_select.sleep_as_android_state
          option: alarm

  - alias: sleep_as_android_state_snoozing
    initial_state: true
    trigger:
      platform: event
      event_type: sleep_as_android
      event_data:
        value: alarm_snooze_clicked
    condition:
      - condition: state
        entity_id: input_select.sleep_as_android_state
        state: alarm
    action:
      - service: input_select.select_option
        data:
          entity_id: input_select.sleep_as_android_state
          option: snoozing

  - alias: sleep_as_android_state_awake
    initial_state: true
    trigger:
      - platform: event
        event_type: sleep_as_android
        event_data:
          value: alarm_alert_dismiss
      - platform: event
        event_type: sleep_as_android
        event_data:
          value: alarm_snooze_cancelled
      - platform: event
        event_type: sleep_as_android
        event_data:
          value: sleep_tracking_stopped
    condition:
      condition: or
      conditions:
        - condition: state
          entity_id: input_select.sleep_as_android_state
          state: paused
        - condition: state
          entity_id: input_select.sleep_as_android_state
          state: alarm
        - condition: state
          entity_id: input_select.sleep_as_android_state
          state: snoozing
    action:
      - service: input_select.select_option
        data:
          entity_id: input_select.sleep_as_android_state
          option: awake

  # Snooze Counter
  - alias: sleep_as_android_reset_snooze_counter
    initial_state: true
    trigger:
      - platform: event
        event_type: sleep_as_android
        event_data:
          value: alarm_snooze_clicked
    action:
      - service: counter.reset
        data:
          entity_id: counter.snooze_counter

  - alias: sleep_as_android_snoozing
    initial_state: true
    trigger:
      - platform: event
        event_type: sleep_as_android
        event_data:
          value: sleep_tracking_started
    action:
      - service: counter.increment
        data:
          entity_id: counter.snooze_counter
