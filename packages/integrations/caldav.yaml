calendar:
  - platform: caldav
    username: !secret caldav_user
    password: !secret caldav_pass
    url: !secret caldav_url
    days: 3
    custom_calendars:
      - name: Vagt
        calendar: Vagtplan
        search: '((\d{2})R(\d{2})|R([W]?)) - .+'
      - name: Arbejde
        calendar: Vagtplan
        search: '^(.*)(\d+)-(\d+).+'
      - name: Fri
        calendar: Vagtplan
        search: "^(FRI|Afspadsering|Ferie|Andet fravær|Sygdom).+"
      - name: Ferie
        calendar: Vagtplan
        search: "^(Ferie).+"
      - name: Vagt
        calendar: Arbejdskalender
        search: "Vagt"
      - name: Arbejde
        calendar: Arbejdskalender
        search: "På (RSH|RSR)"
      - name: RSR
        calendar: Arbejdskalender
        search: "På RSR"
      - name: RSH
        calendar: Arbejdskalender
        search: "På RSH"
      - name: WFH
        calendar: Arbejdskalender
        search: "WFH"
      - name: Vagtskema
        calendar: Arbejdskalender
        search: "(På RSH|På RSR|Vagt|WFH|Kursus)"
      - name: Ferie
        calendar: Arbejdskalender
        search: "^(Ferie).+"
      - name: Bil
        calendar: Personlig
        search: ".*(#bil).*"

  - platform: caldav
    username: !secret caldav_user
    password: !secret caldav_pass
    url: !secret caldav_url
    days: 15
    calendars:
      - Personlig
      - Helligdage
      - Tripit
      - Vagtplan
      - Arbejdskalender

template:
  - sensor:
      - name: Agenda
        state: >-
          {{ states('sensor.vagtplan_agenda')|int(0)
            + states('sensor.arbejde_agenda')|int(0)
            + states('sensor.personlig_agenda')|int(0)
            + states('sensor.tripit_agenda')|int(0) }}
        attributes:
          events: >-
            {% if has_value('sensor.vagtplan_agenda') and 'agenda' in states.sensor.vagtplan_agenda.attributes
              and has_value('sensor.arbejde_agenda') and 'agenda' in states.sensor.arbejde_agenda.attributes
              and has_value('sensor.personlig_agenda') and 'agenda' in states.sensor.personlig_agenda.attributes
              and has_value('sensor.tripit_agenda') and 'agenda' in states.sensor.tripit_agenda.attributes %}
              {{ (state_attr('sensor.vagtplan_agenda', 'agenda')
                + state_attr('sensor.arbejde_agenda', 'agenda')
                + state_attr('sensor.personlig_agenda', 'agenda')
                + state_attr('sensor.tripit_agenda', 'agenda'))|sort(attribute='start') | list }}
            {% else %}
              []
            {% endif %}
      - name: Agenda Tomorrow
        state: >-
          {% if has_value('sensor.vagtplan_agenda') and 'tomorrow' in states.sensor.vagtplan_agenda.attributes
            and has_value('sensor.arbejde_agenda') and 'tomorrow' in states.sensor.arbejde_agenda.attributes
            and has_value('sensor.personlig_agenda') and 'tomorrow' in states.sensor.personlig_agenda.attributes
            and has_value('sensor.tripit_agenda') and 'tomorrow' in states.sensor.tripit_agenda.attributes %}
              {{ state_attr('sensor.vagtplan_agenda', 'tomorrow')|length
                + state_attr('sensor.arbejde_agenda', 'tomorrow')|length
                + state_attr('sensor.personlig_agenda', 'tomorrow')|length
                + state_attr('sensor.tripit_agenda', 'tomorrow')|length }}
            {% else %}
              0
            {% endif %}
        attributes:
          events: >-
            {% if has_value('sensor.vagtplan_agenda') and 'tomorrow' in states.sensor.vagtplan_agenda.attributes
              and has_value('sensor.arbejde_agenda') and 'tomorrow' in states.sensor.arbejde_agenda.attributes
              and has_value('sensor.personlig_agenda') and 'tomorrow' in states.sensor.personlig_agenda.attributes
              and has_value('sensor.tripit_agenda') and 'tomorrow' in states.sensor.tripit_agenda.attributes %}
              {{ (state_attr('sensor.vagtplan_agenda', 'tomorrow')
                + state_attr('sensor.arbejde_agenda', 'tomorrow')
                + state_attr('sensor.personlig_agenda', 'tomorrow')
                + state_attr('sensor.tripit_agenda', 'tomorrow'))|sort(attribute='start') | list }}
            {% else %}
              []
            {% endif %}
      - name: Full Agenda
        state: >-
          {{ states('sensor.agenda')|int(0)
            + states('sensor.agenda_tomorrow')|int(0) }}
        attributes:
          events: >-
            {% set agendas = [state_attr('sensor.agenda', 'events'),
                              state_attr('sensor.agenda_tomorrow', 'events')] %}
            {% if (agendas | select('!=', None) | list | length) > 0 %}
              {{ (state_attr('sensor.agenda', 'events')
                + state_attr('sensor.agenda_tomorrow', 'events'))|sort(attribute='start') | list }}
            {% else %}
              []
            {% endif %}

      - name: Upcoming Events
        state: >-
          {% set start = now().strftime('%Y-%m-%d %H:%M:%S') %}
          {% set end = (now() + timedelta(days=1)).strftime('%Y-%m-%d %H:%M:%S') %}
          {{ state_attr('sensor.full_agenda', 'events')|selectattr('start', 'ge', start)|selectattr('start', 'lt', end)|list|length }}
        attributes:
          events: >-
            {% set start = now().strftime('%Y-%m-%d %H:%M:%S') %}
            {% set end = (now() + timedelta(days=1)).strftime('%Y-%m-%d %H:%M:%S') %}
            {{ state_attr('sensor.full_agenda', 'events')|selectattr('start', 'ge', start)|selectattr('start', 'lt', end)|list }}

      - name: Upcoming Driving Event
        state: >-
          {% set start = (state_attr('sensor.upcoming_events', 'events')|selectattr('bil', 'eq', true)|list|first).get('start') %}
          {{ as_timestamp(start) | timestamp_local('unavailable') }}
        device_class: timestamp
        attributes:
          event: >-
            {{ state_attr('sensor.upcoming_events', 'events')|selectattr('bil', 'eq', true)|list|first }}

      - name: Waking Event
        state: >-
          {% set start = (state_attr('sensor.full_agenda', 'events')|selectattr('wake', 'eq', true)|list|first).get('start') %}
          {{ as_timestamp(start) | timestamp_local('unavailable') }}
        device_class: timestamp
        attributes:
          event: >-
            {{ state_attr('sensor.full_agenda', 'events')|selectattr('wake', 'eq', true)|list|first }}

      - name: Next personal event start clock
        unique_id: next_personal_event_start_clock
        state: >-
          {% if has_value('calendar.personlig') and 'start_time' in states.calendar.personlig.attributes %}
            {{ state_attr('calendar.personlig', 'start_time').split(' ')[1][:-3] }}
          {% else %}
            unknown
          {% endif %}
      - name: Days to next personal event
        state: >-
          {% from 'easy_time.jinja' import count_the_days %}
          {% if has_value('calendar.personlig') and 'start_time' in states.calendar.personlig.attributes %}
            {% set start_time = state_attr('calendar.personlig', 'start_time') | as_datetime | as_local %}
            {{ count_the_days(start_time) }}
          {% else %}
            unknown
          {% endif %}

mqtt:
  sensor:
    - name: Vagtplan Agenda
      state_topic: virtual/agenda/vagtplan/state
      json_attributes_topic: virtual/agenda/vagtplan/events
      unit_of_measurement: "events"
    - name: Arbejde Agenda
      state_topic: virtual/agenda/arbejde/state
      json_attributes_topic: virtual/agenda/arbejde/events
      unit_of_measurement: "events"
    - name: Personlig Agenda
      state_topic: virtual/agenda/personlig/state
      json_attributes_topic: virtual/agenda/personlig/events
      unit_of_measurement: "events"
    - name: Tripit Agenda
      state_topic: virtual/agenda/tripit/state
      json_attributes_topic: virtual/agenda/tripit/events
      unit_of_measurement: "events"

automation:
  - id: update_vagtplan_agenda
    alias: Update Vagtplan Agenda
    initial_state: true
    trigger:
      - platform: time_pattern
        hours: "*"
        minutes: "/1"
        seconds: "0"
      - platform: state
        entity_id: binary_sensor.home_assistant_loaded
        to: "on"
    action:
      - service: calendar.get_events
        data:
          start_date_time: "{{ now().strftime('%Y-%m-%d %H:%M:%S') }}"
          end_date_time: "{{ now().strftime('%Y-%m-%d') }} 23:59:59"
        target:
          entity_id: calendar.arbejdskalender_vagtskema
        response_variable: agenda
      - service: calendar.get_events
        data:
          start_date_time: "{{ (now() + timedelta(days=1)).strftime('%Y-%m-%d') }} 00:00:00"
          end_date_time: "{{ (now() + timedelta(days=1)).strftime('%Y-%m-%d') }} 23:59:59"
        target:
          entity_id: calendar.arbejdskalender_vagtskema
        response_variable: tomorrow
      - service: mqtt.publish
        data:
          topic: virtual/agenda/vagtplan/events
          retain: true
          payload: >
            {
              "agenda": [
                {% for event in agenda['calendar.arbejdskalender_vagtskema'].events|sort(attribute='start') | list -%}
                  {
                    "calendar": "Vagtplan",
                    {%- set start = (event.start | as_datetime) -%}
                    {%- set end = (event.end | as_datetime) -%}
                    "start": "{{ start.strftime('%Y-%m-%d %H:%M:%S') }}",
                    "end": "{{ end.strftime('%Y-%m-%d %H:%M:%S') }}",
                    {% if 'location' in event %}
                      "location": "{{ event.location }}",
                    {% endif %}
                    {%- if event.summary|regex_match('På (RSR|RSH)') -%}
                      "bil": true,
                      "wake": true,
                      "summary": "Arbejde - {{ event.summary | replace('På ', '') | replace('RSH', 'Herlev Hospital') | replace('RSR', 'Rigshospitalet') }}"
                    {%- elif event.summary|regex_match('Vagt') -%}
                      "summary": "Tilkaldevagt"
                    {%- elif event.summary|regex_match('Kursus') -%}
                      "bil": true,
                      "wake": true,
                      "summary": "{{ event.summary }}"
                    {%- else -%}
                      "summary": "{{ event.summary }}"
                    {%- endif -%}
                  }{%- if not loop.last %},{% endif %}
                {%- endfor -%}
              ],
              "tomorrow": [
                {% for event in tomorrow['calendar.arbejdskalender_vagtskema'].events|sort(attribute='start') | list -%}
                  {
                    "calendar": "Vagtplan",
                    {%- set start = (event.start | as_datetime) -%}
                    {%- set end = (event.end | as_datetime) -%}
                    "start": "{{ start.strftime('%Y-%m-%d %H:%M:%S') }}",
                    "end": "{{ end.strftime('%Y-%m-%d %H:%M:%S') }}",
                    {% if 'location' in event %}
                      "location": "{{ event.location }}",
                    {% endif %}
                    {%- if event.summary|regex_match('På (RSR|RSH)') -%}
                      "bil": true,
                      "wake": true,
                      "summary": "Arbejde - {{ event.summary | replace('På ', '') | replace('RSH', 'Herlev Hospital') | replace('RSR', 'Rigshospitalet') }}"
                    {%- elif event.summary|regex_match('Vagt') -%}
                      "summary": "Tilkaldevagt"
                    {%- else -%}
                      "summary": "{{ event.summary }}"
                    {%- endif -%}
                  }{%- if not loop.last %},{% endif %}
                {%- endfor -%}
              ]
            }

  - id: update_vagtplan_agenda_state
    alias: Update Vagtplan Agenda State
    initial_state: true
    trigger:
      - platform: mqtt
        topic: virtual/agenda/vagtplan/events
    action:
      - service: mqtt.publish
        data:
          topic: virtual/agenda/vagtplan/state
          retain: true
          payload: "{{ trigger.payload_json.agenda | length }}"

  - id: update_arbejde_agenda
    alias: Update Arbejde Agenda
    initial_state: true
    trigger:
      - platform: mqtt
        topic: virtual/agenda/vagtplan/events
    action:
      - delay:
          seconds: 5
      - service: calendar.get_events
        data:
          start_date_time: "{{ state_attr('sensor.vagtplan_agenda', 'agenda')[0]['start'] if state_attr('sensor.vagtplan_agenda', 'agenda') else '1970-01-01 00:00:00' }}"
          end_date_time: "{{ state_attr('sensor.vagtplan_agenda', 'agenda')[0]['end'] if state_attr('sensor.vagtplan_agenda', 'agenda') else '1970-01-01 00:00:00' }}"
        target:
          entity_id: calendar.arbejdskalender
        response_variable: agenda
      - service: calendar.get_events
        data:
          start_date_time: "{{ state_attr('sensor.vagtplan_agenda', 'tomorrow')[0]['start'] if state_attr('sensor.vagtplan_agenda', 'tomorrow') else '1970-01-01 00:00:00' }}"
          end_date_time: "{{ state_attr('sensor.vagtplan_agenda', 'tomorrow')[0]['end'] if state_attr('sensor.vagtplan_agenda', 'tomorrow') else '1970-01-01 00:00:00' }}"
        target:
          entity_id: calendar.arbejdskalender
        response_variable: tomorrow
      - service: mqtt.publish
        data:
          topic: virtual/agenda/arbejde/events
          retain: true
          payload: >
            {%- set ns = namespace(events=[],tomorrow=[]) -%}
            {%- for event in agenda['calendar.arbejdskalender'].events|sort(attribute='start') | list -%}
                {%- if not (event.summary|regex_match('På (RSR|RSH)|Frokost|Aftensmad|Vagt|Fri|Opstartstid')) -%}
                  {%- set ns.events = ns.events + [event] -%}
                {%- endif -%}
            {%- endfor -%}
            {%- for event in tomorrow['calendar.arbejdskalender'].events|sort(attribute='start') | list -%}
                {%- if not (event.summary|regex_match('På (RSR|RSH)|Frokost|Aftensmad|Vagt|Fri|Opstartstid')) -%}
                  {%- set ns.tomorrow = ns.tomorrow + [event] -%}
                {%- endif -%}
            {%- endfor -%}
            {
              "agenda": [
                {% for event in ns.events %}
                  {
                    "calendar": "Arbejdskalender",
                    {%- set start = (event.start | as_datetime) -%}
                    {%- set end = (event.end | as_datetime) -%}
                    "start": "{{ start.strftime('%Y-%m-%d %H:%M:%S') }}",
                    "end": "{{ end.strftime('%Y-%m-%d %H:%M:%S') }}",
                    {% if 'location' in event %}
                      "location": "{{ event.location }}",
                    {% endif %}
                    "summary": "{{ event.summary }}"
                  }{{ ',' if not loop.last }}
                {% endfor %}
              ],
              "tomorrow": [
                {% for event in ns.tomorrow %}
                  {
                    "calendar": "Arbejdskalender",
                    {%- set start = (event.start | as_datetime) -%}
                    {%- set end = (event.end | as_datetime) -%}
                    "start": "{{ start.strftime('%Y-%m-%d %H:%M:%S') }}",
                    "end": "{{ end.strftime('%Y-%m-%d %H:%M:%S') }}",
                    {% if 'location' in event %}
                      "location": "{{ event.location }}",
                    {% endif %}
                    "summary": "{{ event.summary }}"
                  }{{ ',' if not loop.last }}
                {% endfor %}
              ]
            }

  - id: update_arbejde_agenda_state
    alias: Update Arbejde Agenda State
    initial_state: true
    trigger:
      - platform: mqtt
        topic: virtual/agenda/arbejde/events
    action:
      - service: mqtt.publish
        data:
          topic: virtual/agenda/arbejde/state
          retain: true
          payload: "{{ trigger.payload_json.agenda | length }}"

  - id: update_personlig_agenda
    alias: Update Personlig Agenda
    initial_state: true
    trigger:
      - platform: time_pattern
        hours: "*"
        minutes: "/1"
        seconds: "0"
      - platform: state
        entity_id: binary_sensor.home_assistant_loaded
        to: "on"
    action:
      - service: calendar.get_events
        data:
          start_date_time: "{{ now().strftime('%Y-%m-%d %H:%M:%S') }}"
          end_date_time: "{{ now().strftime('%Y-%m-%d') }} 23:59:59"
        target:
          entity_id: calendar.personlig
        response_variable: agenda
      - service: calendar.get_events
        data:
          start_date_time: "{{ (now() + timedelta(days=1)).strftime('%Y-%m-%d') }} 00:00:00"
          end_date_time: "{{ (now() + timedelta(days=1)).strftime('%Y-%m-%d') }} 23:59:59"
        target:
          entity_id: calendar.personlig
        response_variable: tomorrow
      - service: mqtt.publish
        data:
          topic: virtual/agenda/personlig/events
          retain: true
          payload: >
            {
              "agenda": [
                {%- set remove_string = ' #bil' -%}
                {% for event in agenda['calendar.personlig'].events|sort(attribute='start') | list -%}
                  {
                    "calendar": "Personlig kalender",
                    {%- set start = (event.start | as_datetime) -%}
                    {%- set end = (event.end | as_datetime) -%}
                    "start": "{{ start.strftime('%Y-%m-%d %H:%M:%S') }}",
                    "end": "{{ end.strftime('%Y-%m-%d %H:%M:%S') }}",
                    "wake": true,
                    {% if 'location' in event %}
                      "location": "{{ event.location }}",
                    {% endif %}
                    {% if remove_string in event.summary %}
                      "bil": true,
                    {%- endif %}
                    "summary": "{{ event.summary | replace(remove_string, '')|title }}"
                  }{{ ',' if not loop.last }}
                {%- endfor -%}
              ],
              "tomorrow": [
                {%- set remove_string = ' #bil' -%}
                {% for event in tomorrow['calendar.personlig'].events|sort(attribute='start') | list -%}
                  {
                    "calendar": "Personlig kalender",
                    {%- set start = (event.start | as_datetime) -%}
                    {%- set end = (event.end | as_datetime) -%}
                    "start": "{{ start.strftime('%Y-%m-%d %H:%M:%S') }}",
                    "end": "{{ end.strftime('%Y-%m-%d %H:%M:%S') }}",
                    "wake": true,
                    {% if 'location' in event %}
                      "location": "{{ event.location }}",
                    {% endif %}
                    {% if remove_string in event.summary %}
                      "bil": true,
                    {%- endif %}
                    "summary": "{{ event.summary | replace(remove_string, '')|title }}"
                  }{{ ',' if not loop.last }}
                {%- endfor -%}
              ]
            }

  - id: update_personlig_agenda_state
    alias: Update Personlig Agenda State
    initial_state: true
    trigger:
      - platform: mqtt
        topic: virtual/agenda/personlig/events
    action:
      - service: mqtt.publish
        data:
          topic: virtual/agenda/personlig/state
          retain: true
          payload: "{{ trigger.payload_json.agenda | length }}"

  - id: update_tripit_agenda
    alias: Update Tripit Agenda
    initial_state: true
    trigger:
      - platform: time_pattern
        hours: "*"
        minutes: "/1"
        seconds: "0"
      - platform: state
        entity_id: binary_sensor.home_assistant_loaded
        to: "on"
    action:
      - service: calendar.get_events
        data:
          start_date_time: "{{ now().strftime('%Y-%m-%d %H:%M:%S') }}"
          end_date_time: "{{ now().strftime('%Y-%m-%d') }} 23:59:59"
        target:
          entity_id: calendar.tripit
        response_variable: agenda
      - service: calendar.get_events
        data:
          start_date_time: "{{ (now() + timedelta(days=1)).strftime('%Y-%m-%d') }} 00:00:00"
          end_date_time: "{{ (now() + timedelta(days=1)).strftime('%Y-%m-%d') }} 23:59:59"
        target:
          entity_id: calendar.tripit
        response_variable: tomorrow
      - service: mqtt.publish
        data:
          topic: virtual/agenda/tripit/events
          retain: true
          payload: >
            {
              "agenda": [
                {% for event in agenda['calendar.tripit'].events|sort(attribute='start') | list -%}
                  {
                    "calendar": "Tripit Kalender",
                    {%- set start = (event.start | as_datetime) -%}
                    {%- set end = (event.end | as_datetime) -%}
                    "start": "{{ start.strftime('%Y-%m-%d %H:%M:%S') }}",
                    "end": "{{ end.strftime('%Y-%m-%d %H:%M:%S') }}",
                    "wake": true,
                    {% if 'location' in event %}
                      "location": "{{ event.location }}",
                    {% endif %}
                    "summary": "{{ event.summary }}"
                  }{{ ',' if not loop.last }}
                {%- endfor -%}
              ],
              "tomorrow": [
                {% for event in tomorrow['calendar.tripit'].events|sort(attribute='start') | list -%}
                  {
                    "calendar": "Tripit Kalender",
                    {%- set start = (event.start | as_datetime) -%}
                    {%- set end = (event.end | as_datetime) -%}
                    "start": "{{ start.strftime('%Y-%m-%d %H:%M:%S') }}",
                    "end": "{{ end.strftime('%Y-%m-%d %H:%M:%S') }}",
                    "wake": true,
                    {% if 'location' in event %}
                      "location": "{{ event.location }}",
                    {% endif %}
                    "summary": "{{ event.summary }}"
                  }{{ ',' if not loop.last }}
                {%- endfor -%}
              ]
            }

  - id: update_tripit_agenda_state
    alias: Update Tripit Agenda State
    initial_state: true
    trigger:
      - platform: mqtt
        topic: virtual/agenda/tripit/events
    action:
      - service: mqtt.publish
        data:
          topic: virtual/agenda/tripit/state
          retain: true
          payload: "{{ trigger.payload_json.agenda | length }}"
