calendar:
  - platform: caldav
    username: !secret caldav_user
    password: !secret caldav_pass
    url: !secret caldav_url
    days: 3
    custom_calendars:
      - name: Vagt
        calendar: Vagtplan
        search: '((\d{2})R(\d{2})|R([W]?)) - .+'
      - name: Arbejde
        calendar: Vagtplan
        search: '^(.*)(\d+)-(\d+).+'
      - name: Fri
        calendar: Vagtplan
        search: "^(FRI|Afspadsering|Ferie|Andet fravær|Sygdom).+"
      - name: Ferie
        calendar: Vagtplan
        search: "^(Ferie).+"
      - name: Vagt
        calendar: Arbejdskalender
        search: "Vagt"
      - name: Arbejde
        calendar: Arbejdskalender
        search: "På (RSH|RSR)"
      - name: RSR
        calendar: Arbejdskalender
        search: "På RSR"
      - name: RSH
        calendar: Arbejdskalender
        search: "På RSH"
      - name: WFH
        calendar: Arbejdskalender
        search: "WFH"
      - name: Vagtskema
        calendar: Arbejdskalender
        search: "(På RSH|På RSR|Vagt|WFH|Kursus)"
      - name: Ferie
        calendar: Arbejdskalender
        search: "^(Ferie).+"
      - name: Bil
        calendar: Personlig
        search: ".*(#bil).*"

  - platform: caldav
    username: !secret caldav_user
    password: !secret caldav_pass
    url: !secret caldav_url
    days: 15
    calendars:
      - Personlig
      - Helligdage
      - Tripit
      - Vagtplan
      - Arbejdskalender

template:
  - sensor:
      - name: Next personal event start clock
        unique_id: next_personal_event_start_clock
        state: >-
          {% if has_value('calendar.personlig') and 'start_time' in states.calendar.personlig.attributes %}
            {{ state_attr('calendar.personlig', 'start_time').split(' ')[1][:-3] }}
          {% else %}
            unknown
          {% endif %}
      - name: Days to next personal event
        state: >-
          {% from 'easy_time.jinja' import count_the_days %}
          {% if has_value('calendar.personlig') and 'start_time' in states.calendar.personlig.attributes %}
            {% set start_time = state_attr('calendar.personlig', 'start_time') | as_datetime | as_local %}
            {{ count_the_days(start_time) }}
          {% else %}
            unknown
          {% endif %}

mqtt:
  sensor:
    - name: Vagtplan Agenda
      state_topic: virtual/agenda/vagtplan/state
      json_attributes_topic: virtual/agenda/vagtplan/events
      unit_of_measurement: "events"
    - name: Arbejde Agenda
      state_topic: virtual/agenda/arbejde/state
      json_attributes_topic: virtual/agenda/arbejde/events
      unit_of_measurement: "events"
    - name: Personlig Agenda
      state_topic: virtual/agenda/personlig/state
      json_attributes_topic: virtual/agenda/personlig/events
      unit_of_measurement: "events"
    - name: Tripit Agenda
      state_topic: virtual/agenda/tripit/state
      json_attributes_topic: virtual/agenda/tripit/events
      unit_of_measurement: "events"

automation:
  - id: update_vagtplan_agenda
    alias: Update Vagtplan Agenda
    initial_state: true
    trigger:
      - platform: time_pattern
        hours: "*"
        minutes: "/5"
        seconds: "0"
      - platform: state
        entity_id: binary_sensor.home_assistant_loaded
        to: "on"
    action:
      - service: calendar.get_events
        data:
          start_date_time: "{{ now().strftime('%Y-%m-%d %H:%M:%S') }}"
          end_date_time: "{{ now().strftime('%Y-%m-%d') }} 23:59:59"
        target:
          entity_id: calendar.arbejdskalender_vagtskema
        response_variable: agenda
      - service: mqtt.publish
        data:
          topic: virtual/agenda/vagtplan/events
          retain: true
          payload: >
            { "agenda": [
            {% for event in agenda['calendar.arbejdskalender_vagtskema'].events|sort(attribute='start') | list -%}
              {
                "calendar": "Vagtplan",
                {%- set start = (event.start | as_datetime) -%}
                {%- set end = (event.end | as_datetime) -%}
                "start": "{{ start.strftime('%d. %b %H:%M') }}",
                "end": "{{ end.strftime('%d. %b %H:%M') }}",
                {%- if event.summary|regex_match('På (RSR|RSH)') -%}
                  "summary": "Arbejde - {{ event.summary | replace('På ', '') | replace('RSH', 'Herlev Hospital') | replace('RSR', 'Rigshospitalet') }}"
                {%- elif event.summary|regex_match('Vagt') -%}
                  "summary": "Tilkaldevagt"
                {%- else -%}
                  "summary": "{{ event.summary }}"
                {%- endif -%}
              }{%- if not loop.last %},{% endif %}
            {%- endfor -%}
            ]}

  - id: update_vagtplan_agenda_state
    alias: Update Vagtplan Agenda State
    initial_state: true
    trigger:
      - platform: mqtt
        topic: virtual/agenda/vagtplan/events
    action:
      - service: mqtt.publish
        data:
          topic: virtual/agenda/vagtplan/state
          retain: true
          payload: "{{ trigger.payload_json.agenda | length }}"

  - id: update_arbejde_agenda
    alias: Update Arbejde Agenda
    initial_state: true
    trigger:
      - platform: time_pattern
        hours: "*"
        minutes: "/5"
        seconds: "0"
      - platform: state
        entity_id: binary_sensor.home_assistant_loaded
        to: "on"
    action:
      - choose:
          - conditions:
              - alias: "Upcoming shift in Arbejdskalender"
                condition: template
                value_template: "{{ 'true' if state_attr('calendar.vagtplan_arbejde', 'start_time') else 'false' }}"
              - alias: "Shift is today"
                condition: template
                value_template: "{{ (state_attr('calendar.vagtplan_arbejde', 'start_time') | as_datetime).strftime('%Y-%m-%d') == now().strftime('%Y-%m-%d') }}"
            sequence:
              - service: calendar.get_events
                data:
                  start_date_time: "{{ state_attr('calendar.vagtplan_arbejde', 'start_time') }}"
                  end_date_time: "{{ state_attr('calendar.vagtplan_arbejde', 'end_time') }}"
                target:
                  entity_id: calendar.arbejdskalender
                response_variable: agenda
              - service: mqtt.publish
                data:
                  topic: virtual/agenda/arbejde/events
                  retain: true
                  payload: >
                    {%- set ns = namespace(events=[]) -%}
                    {%- for event in agenda['calendar.vagtplan_arbejde'].events|sort(attribute='start') | list -%}
                        {%- if not (event.summary|regex_match('På (RSR|RSH)|Frokost|Aftensmad|Vagt')) -%}
                          {%- set ns.events = ns.events + [event] -%}
                        {%- endif -%}
                    {%- endfor -%}
                    { "agenda": [
                      {% for event in ns.events %}
                        {
                          "calendar": "Arbejdskalender",
                          {%- set start = (event.start | as_datetime) -%}
                          {%- set end = (event.end | as_datetime) -%}
                          "start": "{{ start.strftime('%d. %b %H:%M') }}",
                          "end": "{{ end.strftime('%d. %b %H:%M') }}",
                          "summary": "{{ event.summary | title }}"
                        }{{ ',' if not loop.last }}
                      {% endfor %}
                    ]}
        default:
          - service: mqtt.publish
            data:
              topic: virtual/agenda/arbejde/events
              retain: true
              payload: >
                { "agenda": []}

  - id: update_arbejde_agenda_state
    alias: Update Arbejde Agenda State
    initial_state: true
    trigger:
      - platform: mqtt
        topic: virtual/agenda/arbejde/events
    action:
      - service: mqtt.publish
        data:
          topic: virtual/agenda/arbejde/state
          retain: true
          payload: "{{ trigger.payload_json.agenda | length }}"

  - id: update_personlig_agenda
    alias: Update Personlig Agenda
    initial_state: true
    trigger:
      - platform: time_pattern
        hours: "*"
        minutes: "/5"
        seconds: "0"
      - platform: state
        entity_id: binary_sensor.home_assistant_loaded
        to: "on"
    action:
      - service: calendar.get_events
        data:
          start_date_time: "{{ now().strftime('%Y-%m-%d %H:%M:%S') }}"
          end_date_time: "{{ now().strftime('%Y-%m-%d') }} 23:59:59"
        target:
          entity_id: calendar.personlig
        response_variable: agenda
      - service: mqtt.publish
        data:
          topic: virtual/agenda/personlig/events
          retain: true
          payload: >
            { "agenda": [
            {%- set remove_string = ' #bil' -%}
            {% for event in agenda['calendar.vagtplan_arbejde'].events|sort(attribute='start') | list -%}
              {
                "calendar": "Personlig kalender",
                {%- set start = (event.start | as_datetime) -%}
                {%- set end = (event.end | as_datetime) -%}
                "start": "{{ start.strftime('%d. %b %H:%M') }}",
                "end": "{{ end.strftime('%d. %b %H:%M') }}",
                "summary": "{{ event.summary | replace(remove_string, '')|title }}"
              }{{ ',' if not loop.last }}
            {%- endfor -%}
            ]}

  - id: update_personlig_agenda_state
    alias: Update Personlig Agenda State
    initial_state: true
    trigger:
      - platform: mqtt
        topic: virtual/agenda/personlig/events
    action:
      - service: mqtt.publish
        data:
          topic: virtual/agenda/personlig/state
          retain: true
          payload: "{{ trigger.payload_json.agenda | length }}"

  - id: update_tripit_agenda
    alias: Update Tripit Agenda
    initial_state: true
    trigger:
      - platform: time_pattern
        hours: "*"
        minutes: "/5"
        seconds: "0"
      - platform: state
        entity_id: binary_sensor.home_assistant_loaded
        to: "on"
    action:
      - service: calendar.get_events
        data:
          start_date_time: "{{ now().strftime('%Y-%m-%d %H:%M:%S') }}"
          end_date_time: "{{ now().strftime('%Y-%m-%d') }} 23:59:59"
        target:
          entity_id: calendar.tripit
        response_variable: agenda
      - service: mqtt.publish
        data:
          topic: virtual/agenda/tripit/events
          retain: true
          payload: >
            { "agenda": [
            {% for event in agenda['calendar.vagtplan_arbejde'].events|sort(attribute='start') | list -%}
              {
                "calendar": "Tripit Kalender",
                {%- set start = (event.start | as_datetime) -%}
                {%- set end = (event.end | as_datetime) -%}
                "start": "{{ start.strftime('%d. %b %H:%M') }}",
                "end": "{{ end.strftime('%d. %b %H:%M') }}",
                "summary": "{{ event.summary | title }}"
              }{{ ',' if not loop.last }}
            {%- endfor -%}
            ]}

  - id: update_tripit_agenda_state
    alias: Update Tripit Agenda State
    initial_state: true
    trigger:
      - platform: mqtt
        topic: virtual/agenda/tripit/events
    action:
      - service: mqtt.publish
        data:
          topic: virtual/agenda/tripit/state
          retain: true
          payload: "{{ trigger.payload_json.agenda | length }}"
