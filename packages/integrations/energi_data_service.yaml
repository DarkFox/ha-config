sensor:
  - platform: statistics
    name: Average energy price last 30d mean
    entity_id: sensor.energi_data_service
    state_characteristic: mean
    sampling_size: 760
    max_age:
      days: 30

  - platform: statistics
    name: Energy price last 30d (std)
    entity_id: sensor.energi_data_service
    state_characteristic: standard_deviation
    sampling_size: 512
    max_age:
      days: 30

  - platform: statistics
    name: Energy price last 30d (mean)
    entity_id: sensor.energi_data_service
    state_characteristic: mean
    sampling_size: 512
    max_age:
      days: 30

template:
  - sensor:
      - name: Historic Energy Price Percentiles
        unique_id: historic_energy_price_percentiles
        state: OK
        attributes:
          25th: "{{ states('sensor.average_energy_price_last_30d_mean') | float(0) + states('sensor.energy_price_last_30d_std') | float(0) * -0.63 }}"
          50th: "{{ states('sensor.average_energy_price_last_30d_mean') | float(0) + states('sensor.energy_price_last_30d_std') | float(0) * 0 }}"
          75th: "{{ states('sensor.average_energy_price_last_30d_mean') | float(0) + states('sensor.energy_price_last_30d_std') | float(0) * 0.57 }}"
          90th: "{{ states('sensor.average_energy_price_last_30d_mean') | float(0) + states('sensor.energy_price_last_30d_std') | float(0) * 1.29 }}"
          95th: "{{ states('sensor.average_energy_price_last_30d_mean') | float(0) + states('sensor.energy_price_last_30d_std') | float(0) * 1.65 }}"
          99th: "{{ states('sensor.average_energy_price_last_30d_mean') | float(0) + states('sensor.energy_price_last_30d_std') | float(0) * 2.33 }}"
          100th: "{{ states('sensor.average_energy_price_last_30d_mean') | float(0) + states('sensor.energy_price_last_30d_std') | float(0) * 3.9 }}"

      - name: "El Priser"
        device_class: monetary
        unit_of_measurement: "DKK/kWh"
        state: "{{ states('sensor.energi_data_service')|float|round(2) }}"
        attributes:
          prices: >-
            {%- set energyPriceSensor = "sensor.energi_data_service" -%}
            {%- set p = state_attr(energyPriceSensor, 'raw_today') or [] -%}
            {%- set rt = state_attr(energyPriceSensor, 'raw_tomorrow') or [] -%}
            {%- set f = state_attr(energyPriceSensor, 'forecast') or [] -%}
            {%- if (p|length + rt|length + f|length) == 0 -%}
              unknown
            {%- else -%}
              [
                {%- for i in range(p|length) %}
                  {
                    "start": "{{ p[i]["hour"] }}",
                    "end": "{{ ((p[i]["hour"]|as_timestamp)+3600)|as_datetime|as_local }}",
                    "value": {{ p[i]['price'] }}
                  },
                {%- endfor -%}
                {%- for i in range(rt|length) %}
                  {
                    "start": "{{ rt[i]["hour"] }}",
                    "end": "{{ ((rt[i]["hour"]|as_timestamp)+3600)|as_datetime|as_local }}",
                    "value": {{ rt[i]['price'] }}
                  },
                {%- endfor -%}
                {%- for i in range(f|length) %}
                  {
                    "start": "{{ f[i]["hour"] }}",
                    "end": "{{ ((f[i]["hour"]|as_timestamp)+3600)|as_datetime|as_local }}",
                    "value": {{ f[i]['price'] }}
                  },
                {%- endfor -%}
              ]
            {%- endif -%}
          just_prices: >-
            {%- set p = state_attr('sensor.el_priser', 'prices') -%}
            {%- if not p or p is not list -%}
              unknown
            {%- else -%}
              [{% for x in (p|list) %}{{ x.value }},{% endfor %}]
            {%- endif -%}

      - name: "El Spotpriser"
        device_class: monetary
        unit_of_measurement: "DKK/kWh"
        state: "{{ states('sensor.energi_data_service')|float|round(2) }}"
        attributes:
          prices: >-
            {%- set energyPriceSensor = "sensor.energi_data_service_spotpriser" -%}
            {%- set p = state_attr(energyPriceSensor, 'raw_today') or [] -%}
            {%- set rt = state_attr(energyPriceSensor, 'raw_tomorrow') or [] -%}
            {%- set f = state_attr(energyPriceSensor, 'forecast') or [] -%}
            {%- if (p|length + rt|length + f|length) == 0 -%}
              unknown
            {%- else -%}
              [
                {%- for i in range(p|length) %}
                  {
                    "start": "{{ p[i]["hour"] }}",
                    "end": "{{ ((p[i]["hour"]|as_timestamp)+3600)|as_datetime|as_local }}",
                    "value": {{ p[i]['price'] }}
                  },
                {%- endfor -%}
                {%- for i in range(rt|length) %}
                  {
                    "start": "{{ rt[i]["hour"] }}",
                    "end": "{{ ((rt[i]["hour"]|as_timestamp)+3600)|as_datetime|as_local }}",
                    "value": {{ rt[i]['price'] }}
                  },
                {%- endfor -%}
                {%- for i in range(f|length) %}
                  {
                    "start": "{{ f[i]["hour"] }}",
                    "end": "{{ ((f[i]["hour"]|as_timestamp)+3600)|as_datetime|as_local }}",
                    "value": {{ f[i]['price'] }}
                  },
                {%- endfor -%}
              ]
            {%- endif -%}
          just_prices: >-
            {%- set p = state_attr('sensor.el_spotpriser', 'prices') -%}
            {%- if not p or p is not list -%}
              unknown
            {%- else -%}
              [{% for x in (p|list) %}{{ x.value }},{% endfor %}]
            {%- endif -%}

      - name: "El Billige Timer"
        device_class: timestamp
        state: >-
          {%- set p = state_attr('sensor.el_billige_timer', 'next_group') -%}
          {{ 'unknown' if not p or p is not mapping else p['start'] }}
        attributes:
          hours: >
            {% set low_price = state_attr('sensor.historic_energy_price_percentiles', '50th')|float %}
            {%- set p = state_attr('sensor.el_priser', 'prices') -%}
            {% set ns = namespace(lp=[]) %}
            {%- if not p or p is not list -%}
              unknown
            {%- else -%}
              {%- for i in range(p|length-2) -%}
                {% if p[i]["value"] > low_price %}{% continue %}{% endif %}
                {% set ns.lp = ns.lp + [p[i]] %}
              {%- endfor -%}
            {% endif %}
            {{ ns.lp }}
          groups: >
            {% from 'power_price.jinja' import group_power_prices %}
            {{ group_power_prices(state_attr('sensor.el_billige_timer', 'hours')) }}
          next_group: >
            {%- set p = state_attr('sensor.el_billige_timer', 'groups') -%}
            {%- if not p or p is not list -%}
              unknown
            {%- else -%}
              {{ p[0] }}
            {%- endif -%}

      - name: "El Billigste Timer"
        device_class: timestamp
        state: >-
          {%- set p = state_attr('sensor.el_billigste_timer', 'next_group') -%}
          {{ 'unknown' if not p or p is not mapping else p['start'] }}
        attributes:
          hours: >
            {% set low_price = state_attr('sensor.historic_energy_price_percentiles', '25th')|float %}
            {%- set p = state_attr('sensor.el_priser', 'prices') -%}
            {% set ns = namespace(lp=[]) %}
            {%- if not p or p is not list -%}
              unknown
            {%- else -%}
              {%- for i in range(p|length-2) -%}
                {% if p[i]["value"] > low_price %}{% continue %}{% endif %}
                {% set ns.lp = ns.lp + [p[i]] %}
              {%- endfor -%}
            {% endif %}
            {{ ns.lp }}
          groups: >
            {% from 'power_price.jinja' import group_power_prices %}
            {{ group_power_prices(state_attr('sensor.el_billigste_timer', 'hours')) }}
          next_group: >
            {%- set p = state_attr('sensor.el_billigste_timer', 'groups') -%}
            {%- if not p or p is not list -%}
              unknown
            {%- else -%}
              {{ p[0] }}
            {%- endif -%}

      - name: "El Dyre Timer"
        device_class: timestamp
        state: >-
          {%- set p = state_attr('sensor.el_dyre_timer', 'next_group') -%}
          {{ 'unknown' if not p or p is not mapping else p['start'] }}
        attributes:
          hours: >
            {% set high_price = state_attr('sensor.historic_energy_price_percentiles', '75th')|float %}
            {%- set p = state_attr('sensor.el_priser', 'prices') -%}
            {% set ns = namespace(hp=[]) %}
            {%- if not p or p is not list -%}
              unknown
            {%- else -%}
              {%- for i in range(p|length-2) -%}
                {% if p[i]["value"] < high_price %}{% continue %}{% endif %}
                {% set ns.hp = ns.hp + [p[i]] %}
              {%- endfor -%}
            {% endif %}
            {{ ns.hp }}
          groups: >
            {% from 'power_price.jinja' import group_power_prices %}
            {{ group_power_prices(state_attr('sensor.el_dyre_timer', 'hours')) }}
          next_group: >
            {%- set p = state_attr('sensor.el_dyre_timer', 'groups') -%}
            {%- if not p or p is not list -%}
              unknown
            {%- else -%}
              {{ p[0] }}
            {%- endif -%}

      - name: "El Billigste 1 Time"
        device_class: timestamp
        state: >-
          {%- set p = state_attr('sensor.el_billigste_1_time', 'cheapest_1_hr') -%}
          {{ 'unknown' if not p or p is not mapping else p['start'] }}
        attributes:
          icon: mdi:clock-time-one
          one_hour_seg: >-
            {%- set p = state_attr('sensor.el_priser', 'prices') -%}
            {%- if not p or p is not list -%}
              unknown
            {%- else -%}
            [
              {%- for i in range(p|length-2) -%}
                {{ p[i] }},
              {%- endfor -%}
            ]
            {% endif %}
          one_hour_seg_prices: >-
            {%- set p = state_attr('sensor.el_billigste_1_time', 'one_hour_seg') -%}
            {%- if not p or p is not list -%}
              unknown
            {%- else -%}
              [{% for x in (p|list) %}{{ x.value }},{% endfor %}]
            {%- endif -%}
          cheapest_1_hr: >-
            {%- set p = state_attr('sensor.el_billigste_1_time', 'one_hour_seg_prices') -%}
            {{ 'unknown' if not p or p is not list else state_attr('sensor.el_billigste_1_time', 'one_hour_seg')[p.index(p|min)] }}
          start: >-
            {%- set p = state_attr('sensor.el_billigste_1_time', 'cheapest_1_hr') -%}
            {{ 'unknown' if not p or p is not mapping else p['start'] }}
          end: >-
            {%- set p = state_attr('sensor.el_billigste_1_time', 'cheapest_1_hr') -%}
            {{ 'unknown' if not p or p is not mapping else p['end'] }}
          value: >-
            {%- set p = state_attr('sensor.el_billigste_1_time', 'cheapest_1_hr') -%}
            {{ 'unknown' if not p or p is not mapping else p['value'] }}

      - name: "El Billigste 3 Timer"
        device_class: timestamp
        state: >-
          {%- set p = state_attr('sensor.el_billigste_3_timer', 'cheapest_3_hr') -%}
          {{ 'unknown' if not p or p is not mapping else p['start'] }}
        attributes:
          icon: mdi:clock-time-three
          three_hour_seg: >-
            {%- set p = state_attr('sensor.el_priser', 'prices') -%}
            {%- if not p or p is not list -%}
              unknown
            {%- else -%}
            [
              {%- for i in range(p|length-2) -%}
                {% if (p[i+2]["end"]|as_datetime)<now() %}{% continue %}{% endif %}
                {
                  "start": "{{ p[i]["start"] }}",
                  "end": "{{ p[i+2]["end"] }}",
                  "value": {{
                    ((p[i]['value']
                    + p[i+1]['value']
                    + p[i+2]['value'])/3.0) | round(4)
                  }}
                },
              {%- endfor -%}
            ]
            {% endif %}
          three_hour_seg_prices: >-
            {%- set p = state_attr('sensor.el_billigste_3_timer', 'three_hour_seg') -%}
            {%- if not p or p is not list -%}
              unknown
            {%- else -%}
              [{% for x in (p|list) %}{{ x.value }},{% endfor %}]
            {%- endif -%}
          cheapest_3_hr: >-
            {%- set p = state_attr('sensor.el_billigste_3_timer', 'three_hour_seg_prices') -%}
            {{ 'unknown' if not p or p is not list else state_attr('sensor.el_billigste_3_timer', 'three_hour_seg')[p.index(p|min)] }}
          start: >-
            {%- set p = state_attr('sensor.el_billigste_3_timer', 'cheapest_3_hr') -%}
            {{ 'unknown' if not p or p is not mapping else p['start'] }}
          end: >-
            {%- set p = state_attr('sensor.el_billigste_3_timer', 'cheapest_3_hr') -%}
            {{ 'unknown' if not p or p is not mapping else p['end'] }}
          value: >-
            {%- set p = state_attr('sensor.el_billigste_3_timer', 'cheapest_3_hr') -%}
            {{ 'unknown' if not p or p is not mapping else p['value'] }}

      - name: "El Billigste 6 Timer"
        device_class: timestamp
        state: >-
          {%- set p = state_attr('sensor.el_billigste_6_timer', 'cheapest_6_hr') -%}
          {{ 'unknown' if not p or p is not mapping else p['start'] }}
        attributes:
          icon: mdi:clock-time-six
          six_hour_seg: >-
            {%- set p = state_attr('sensor.el_priser', 'prices') -%}
            {%- if not p or p is not list -%}
              unknown
            {%- else -%}
            [
              {%- for i in range(p|length-5) -%}
                {% if (p[i+5]["end"]|as_datetime)<now() %}{% continue %}{% endif %}
                {
                  "start": "{{ p[i]["start"] }}",
                  "end": "{{ p[i+5]["end"] }}",
                  "value": {{
                    ((p[i]['value']
                    + p[i+1]['value']
                    + p[i+2]['value']
                    + p[i+3]['value']
                    + p[i+4]['value']
                    + p[i+5]['value'])/6.0) | round(4)
                  }}
                },
              {%- endfor -%}
            ]
            {% endif %}
          six_hour_seg_prices: >-
            {%- set p = state_attr('sensor.el_billigste_6_timer', 'six_hour_seg') -%}
            {%- if not p or p is not list -%}
              unknown
            {%- else -%}
              [{% for x in (p|list) %}{{ x.value }},{% endfor %}]
            {%- endif -%}
          cheapest_6_hr: >-
            {%- set p = state_attr('sensor.el_billigste_6_timer', 'six_hour_seg_prices') -%}
            {{ 'unknown' if not p or p is not list else state_attr('sensor.el_billigste_6_timer', 'six_hour_seg')[p.index(p|min)] }}
          start: >-
            {%- set p = state_attr('sensor.el_billigste_6_timer', 'cheapest_6_hr') -%}
            {{ 'unknown' if not p or p is not mapping else p['start'] }}
          end: >-
            {%- set p = state_attr('sensor.el_billigste_6_timer', 'cheapest_6_hr') -%}
            {{ 'unknown' if not p or p is not mapping else p['end'] }}
          value: >-
            {%- set p = state_attr('sensor.el_billigste_6_timer', 'cheapest_6_hr') -%}
            {{ 'unknown' if not p or p is not mapping else p['value'] }}

      - name: "El Næste Billige 1 Time"
        device_class: timestamp
        state: >-
          {%- set p = state_attr('sensor.el_naeste_billige_1_time', 'next_local_minimum') -%}
          {{ 'unknown' if not p or p is not mapping else p['start'] }}
        attributes:
          icon: mdi:clock-time-one
          local_minima: >-
            {%- set p = state_attr('sensor.el_billigste_1_time', 'one_hour_seg') -%}
            {%- if not p or p is not list -%}
              unknown
            {%- else -%}
              [
              {%- for price in p -%}
                {%-
                  if not loop.first and not loop.last
                  and (price['start']|as_datetime) >= (now()-timedelta(hours=1))
                  and p[loop.index0-1]['value'] >= price['value']
                  and p[loop.index0+1]['value'] >= price['value']
                -%}
                  {
                    'start': '{{ price["start"] }}',
                    'end': '{{ price["end"] }}',
                    'value': '{{ price["value"] }}'
                  },
                {%- endif -%}
              {%- endfor -%}
              ]
            {%- endif -%}
          next_local_minimum: >-
            {%- set p = state_attr('sensor.el_naeste_billige_1_time', 'local_minima') -%}
            {{ 'unknown' if not p or p is not list else p[0] }}
          start: >-
            {%- set p = state_attr('sensor.el_naeste_billige_1_time', 'next_local_minimum') -%}
            {{ 'unknown' if not p or p is not mapping else p['start'] }}
          end: >-
            {%- set p = state_attr('sensor.el_naeste_billige_1_time', 'next_local_minimum') -%}
            {{ 'unknown' if not p or p is not mapping else p['end'] }}
          value: >-
            {%- set p = state_attr('sensor.el_naeste_billige_1_time', 'next_local_minimum') -%}
            {{ 'unknown' if not p or p is not mapping else p['value'] }}

      - name: "El Næste Billige 3 Timer"
        device_class: timestamp
        state: >-
          {%- set p = state_attr('sensor.el_naeste_billige_3_timer', 'next_local_minimum') -%}
          {{ 'unknown' if not p or p is not mapping else p['start'] }}
        attributes:
          icon: mdi:clock-time-three
          local_minima: >-
            {%- set p = state_attr('sensor.el_billigste_3_timer', 'three_hour_seg') -%}
            {%- if not p or p is not list -%}
              unknown
            {%- else -%}
              [
              {%- for price in p -%}
                {%-
                  if not loop.first and not loop.last
                  and p[loop.index0-1]['value'] >= price['value']
                  and p[loop.index0+1]['value'] >= price['value']
                -%}
                  {
                    'start': '{{ price["start"] }}',
                    'end': '{{ price["end"] }}',
                    'value': '{{ price["value"] }}'
                  },
                {%- endif -%}
              {%- endfor -%}
              ]
            {%- endif -%}
          next_local_minimum: >-
            {%- set p = state_attr('sensor.el_naeste_billige_3_timer', 'local_minima') -%}
            {{ 'unknown' if not p or p is not list else p[0] }}
          start: >-
            {%- set p = state_attr('sensor.el_naeste_billige_3_timer', 'next_local_minimum') -%}
            {{ 'unknown' if not p or p is not mapping else p['start'] }}
          end: >-
            {%- set p = state_attr('sensor.el_naeste_billige_3_timer', 'next_local_minimum') -%}
            {{ 'unknown' if not p or p is not mapping else p['end'] }}
          value: >-
            {%- set p = state_attr('sensor.el_naeste_billige_3_timer', 'next_local_minimum') -%}
            {{ 'unknown' if not p or p is not mapping else p['value'] }}

      - name: "El Næste Billige 6 Timer"
        device_class: timestamp
        state: >-
          {%- set p = state_attr('sensor.el_naeste_billige_6_timer', 'next_local_minimum') -%}
          {{ 'unknown' if not p or p is not mapping else p['start'] }}
        attributes:
          icon: mdi:clock-time-six
          local_minima: >-
            {%- set p = state_attr('sensor.el_billigste_6_timer', 'six_hour_seg') -%}
            {%- if not p or p is not list -%}
              unknown
            {%- else -%}
              [
              {%- for price in p -%}
                {%-
                  if not loop.first and not loop.last
                  and p[loop.index0-1]['value'] >= price['value']
                  and p[loop.index0+1]['value'] >= price['value']
                -%}
                  {
                    'start': '{{ price["start"] }}',
                    'end': '{{ price["end"] }}',
                    'value': '{{ price["value"] }}'
                  },
                {%- endif -%}
              {%- endfor -%}
              ]
            {%- endif -%}
          next_local_minimum: >-
            {%- set p = state_attr('sensor.el_naeste_billige_6_timer', 'local_minima') -%}
            {{ 'unknown' if not p or p is not list else p[0] }}
          start: >-
            {%- set p = state_attr('sensor.el_naeste_billige_6_timer', 'next_local_minimum') -%}
            {{ 'unknown' if not p or p is not mapping else p['start'] }}
          end: >-
            {%- set p = state_attr('sensor.el_naeste_billige_6_timer', 'next_local_minimum') -%}
            {{ 'unknown' if not p or p is not mapping else p['end'] }}
          value: >-
            {%- set p = state_attr('sensor.el_naeste_billige_6_timer', 'next_local_minimum') -%}
            {{ 'unknown' if not p or p is not mapping else p['value'] }}

      - name: "El Næste Dyre 1 Time"
        device_class: timestamp
        state: >-
          {%- set p = state_attr('sensor.el_naeste_dyre_1_time', 'next_local_maximum') -%}
          {{ 'unknown' if not p or p is not mapping else p['start'] }}
        attributes:
          icon: mdi:clock-time-one
          local_maxima: >-
            {%- set p = state_attr('sensor.el_billigste_1_time', 'one_hour_seg') -%}
            {%- if not p or p is not list -%}
              unknown
            {%- else -%}
              [
              {%- for price in p -%}
                {%-
                  if not loop.first and not loop.last
                  and (price['start']|as_datetime) >= (now()-timedelta(hours=1))
                  and p[loop.index0-1]['value'] <= price['value']
                  and p[loop.index0+1]['value'] <= price['value']
                -%}
                  {
                    'start': '{{ price["start"] }}',
                    'end': '{{ price["end"] }}',
                    'value': '{{ price["value"] }}'
                  },
                {%- endif -%}
              {%- endfor -%}
              ]
            {%- endif -%}
          next_local_maximum: >-
            {%- set p = state_attr('sensor.el_naeste_dyre_1_time', 'local_maxima') -%}
            {{ 'unknown' if not p or p is not list else p[0] }}
          start: >-
            {%- set p = state_attr('sensor.el_naeste_dyre_1_time', 'next_local_maximum') -%}
            {{ 'unknown' if not p or p is not mapping else p['start'] }}
          end: >-
            {%- set p = state_attr('sensor.el_naeste_dyre_1_time', 'next_local_maximum') -%}
            {{ 'unknown' if not p or p is not mapping else p['end'] }}
          value: >-
            {%- set p = state_attr('sensor.el_naeste_dyre_1_time', 'next_local_maximum') -%}
            {{ 'unknown' if not p or p is not mapping else p['value'] }}

      - name: "El Næste Dyre 3 Timer"
        device_class: timestamp
        state: >-
          {%- set p = state_attr('sensor.el_naeste_dyre_3_timer', 'next_local_maximum') -%}
          {{ 'unknown' if not p or p is not mapping else p['start'] }}
        attributes:
          icon: mdi:clock-time-three
          local_maxima: >-
            {%- set p = state_attr('sensor.el_billigste_3_timer', 'three_hour_seg') -%}
            {%- if not p or p is not list -%}
              unknown
            {%- else -%}
              [
              {%- for price in p -%}
                {%-
                  if not loop.first and not loop.last
                  and p[loop.index0-1]['value'] <= price['value']
                  and p[loop.index0+1]['value'] <= price['value']
                -%}
                  {
                    'start': '{{ price["start"] }}',
                    'end': '{{ price["end"] }}',
                    'value': '{{ price["value"] }}'
                  },
                {%- endif -%}
              {%- endfor -%}
              ]
            {%- endif -%}
          next_local_maximum: >-
            {%- set p = state_attr('sensor.el_naeste_dyre_3_timer', 'local_maxima') -%}
            {{ 'unknown' if not p or p is not list else p[0] }}
          start: >-
            {%- set p = state_attr('sensor.el_naeste_dyre_3_timer', 'next_local_maximum') -%}
            {{ 'unknown' if not p or p is not mapping else p['start'] }}
          end: >-
            {%- set p = state_attr('sensor.el_naeste_dyre_3_timer', 'next_local_maximum') -%}
            {{ 'unknown' if not p or p is not mapping else p['end'] }}
          value: >-
            {%- set p = state_attr('sensor.el_naeste_dyre_3_timer', 'next_local_maximum') -%}
            {{ 'unknown' if not p or p is not mapping else p['value'] }}

      - name: "El Næste Dyre 6 Timer"
        device_class: timestamp
        state: >-
          {%- set p = state_attr('sensor.el_naeste_dyre_6_timer', 'next_local_maximum') -%}
          {{ 'unknown' if not p or p is not mapping else p['start'] }}
        attributes:
          icon: mdi:clock-time-six
          local_maxima: >-
            {%- set p = state_attr('sensor.el_billigste_6_timer', 'six_hour_seg') -%}
            {%- if not p or p is not list -%}
              unknown
            {%- else -%}
              [
              {%- for price in p -%}
                {%-
                  if not loop.first and not loop.last
                  and p[loop.index0-1]['value'] <= price['value']
                  and p[loop.index0+1]['value'] <= price['value']
                -%}
                  {
                    'start': '{{ price["start"] }}',
                    'end': '{{ price["end"] }}',
                    'value': '{{ price["value"] }}'
                  },
                {%- endif -%}
              {%- endfor -%}
              ]
            {%- endif -%}
          next_local_maximum: >-
            {%- set p = state_attr('sensor.el_naeste_dyre_6_timer', 'local_maxima') -%}
            {{ 'unknown' if not p or p is not list else p[0] }}
          start: >-
            {%- set p = state_attr('sensor.el_naeste_dyre_6_timer', 'next_local_maximum') -%}
            {{ 'unknown' if not p or p is not mapping else p['start'] }}
          end: >-
            {%- set p = state_attr('sensor.el_naeste_dyre_6_timer', 'next_local_maximum') -%}
            {{ 'unknown' if not p or p is not mapping else p['end'] }}
          value: >-
            {%- set p = state_attr('sensor.el_naeste_dyre_6_timer', 'next_local_maximum') -%}
            {{ 'unknown' if not p or p is not mapping else p['value'] }}
