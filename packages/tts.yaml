script:
  tts_speak:
    alias: "Wrapper for TTS service"
    fields:
      message:
        description: "The message to speak"
        example: "Hello world"
      volume_level:
        description: "The volume level to use (Default 0.6))"
        example: "0.6"
      cache:
        description: "Whether to cache the TTS file (Default false)"
        example: "false"
      entity_id:
        description: "The media player(s) to use"
        example: "media_player.speaker"
    sequence:
      - service: chime_tts.say
        target:
          entity_id: "{{ entity_id }}"
        data:
          message: "{{ message | replace('\n', ' ') }}"
          volume_level: "{{ volume_level or 0.6 }}"
          cache: "{{ cache or 'false' }}"
          tts_platform: tts.piper
          chime_path: /media/Notifications/Seasonal Celebrations/Sleigh Bells.mp3
          announce: true

command_line:
  - sensor:
      name: Latest TTS
      command: "ls -t /config/tts | head -n 1"
  - sensor:
      name: Latest TTS FFMPEG Info
      command: "/usr/bin/ffmpeg -i /config/tts/{{ states('sensor.latest_tts') }} 2>&1 | grep Duration"

sensor:
  - platform: template
    sensors:
      latest_tts_duration:
        value_template: >-
          {{ states('sensor.latest_tts_ffmpeg_info').split(', ')[0].split(': ')[1].split('.')[0] }}
      tts_greeting:
        value_template: >-
          {%- if now().hour < 4 -%}
            Godnat
          {%- elif now().hour < 10 -%}
            Godmorgen
          {%- elif now().hour < 14 -%}
            Goddag
          {%- elif now().hour < 17 -%}
            God eftermiddag
          {%- elif now().hour < 24 -%}
            Godaften
          {%- endif -%}
