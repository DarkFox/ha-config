type: custom:button-card
entity: sensor.gdq_on_deck
state_display: >-
  [[[ return entity.attributes.on_deck.description.split("\n")[0] ]]]
label: >-
  [[[
    let startsIn = Math.floor((new Date() - Date.parse(entity.attributes.on_deck.start)) / (1000 * 60));
    let endsIn = Math.floor((Date.parse(entity.attributes.on_deck.end) - new Date()) / (1000 * 60));
    if (startsIn < 0) return 'Starter om ~' + entity.attributes.on_deck_formatted_start;
    else if (endsIn < 0) return 'Sluttede for ' + entity.attributes.on_deck_formatted_end.replace('-','') + ' siden';
    else return entity.attributes.on_deck_formatted_start.replace('-','') + ' <> ~' + entity.attributes.on_deck_formatted_end;
  ]]]
name: "[[[ return entity.attributes.on_deck.summary ]]]"
custom_fields:
  progress_pct: " "
layout: vertical
icon: mdi:gamepad-right
show_state: true
show_name: true
show_label: true
size: 10%
tap_action:
  action: url
  url_path: "https://www.twitch.tv/gamesdonequick"
styles:
  grid:
    - grid-template-areas: '"i" "n" "s" "l" "progress_pct"'
  custom_fields:
    progress_pct:
      - height: 0.5em
      - margin: 0 auto calc(-4% - 0.7em) 0
      - border-top: "1px solid var(--input-outlined-idle-border-color)"
      - width: >-
          [[[
            let startsIn = Math.floor((new Date() - Date.parse(entity.attributes.on_deck.start)) / (1000 * 60));
            let endsIn = Math.floor((Date.parse(entity.attributes.on_deck.end) - new Date()) / (1000 * 60));
            if (startsIn < 0) return '0%';
            else if (endsIn < 0) return '100%';
            else return Math.floor((startsIn / (startsIn + endsIn)) * 100) + "%";
          ]]]
      - background-color: >-
          [[[
            if (entity.attributes.on_deck.watch) return 'var(--success-color)';
            else return 'var(--blue-color)';
          ]]]
  icon:
    - color: >-
        [[[
          if (entity.attributes.on_deck.watch) return 'var(--success-color)';
          else return 'var(--primary-text-color)';
        ]]]
  card:
    - box-shadow: >-
        [[[
          if (entity.attributes.on_deck.watch) return '0px 0px 5px 5px var(--success-color)';
          else return null;
        ]]]
card_mod:
  style:
    .: |
      #name {
        font-weight: bold;
      }
      #icon {
        float: left;
        margin-right: 10px;
      }
      #img-cell::after {
        display: block;
        float: right;
        margin-right: auto;
        content: "On deck";
        font-size: 1.5em;
      }
      #label {
        font-weight: bold;
      }
