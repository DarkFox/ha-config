type: custom:button-card
entity: sensor.gdq_on_deck
state_display: >-
  [[[ return entity.attributes.next_up.description.replace(/\n/gi, '<br />') ]]]
label: >-
  [[[
    let startsIn = Math.floor((new Date() - Date.parse(entity.attributes.next_up.start)) / (1000 * 60));
    let endsIn = Math.floor((Date.parse(entity.attributes.next_up.end) - new Date()) / (1000 * 60));
    if (startsIn < 0) return 'Starts in: ' + Math.abs(startsIn) + ' min';
    else if (endsIn < 0) return 'Ended: ' + Math.abs(endsIn) + ' min ago';
    else return 'Started: ' + startsIn + ' min ago - ' + 'Ends in: ' + endsIn + ' min';
  ]]]
name: "[[[ return entity.attributes.next_up.summary ]]]"
layout: name_state
icon: mdi:gamepad-right
show_state: true
show_name: true
show_label: true
size: 10%
tap_action:
  action: url
  url_path: "https://www.twitch.tv/gamesdonequick"
styles:
  icon:
    - color: >-
        [[[
          if (entity.attributes.next_up.watch) return 'var(--success-color)';
          else return 'var(--primary-text-color)';
        ]]]
  card:
    - box-shadow: >-
        [[[
          if (entity.attributes.next_up.watch) return '0px 0px 5px 5px var(--success-color)';
          else return null;
        ]]]
card_mod:
  style:
    .: |
      #name::first-line {
        font-size: 1.2em;
        font-weight: bold;
        line-height: 1.6em;
        vertical-align: top;
      }
      #name {
        font-size: 0.8em;
        margin-bottom: 5px;
      }
      #icon {
        float: left;
        margin-right: 10px;
      }
      #img-cell {
        margin-bottom: 10px;
      }
      #img-cell::after {
        display: block;
        float: right;
        margin-right: auto;
        content: "Next up";
        font-size: 1.5vw;
      }
      #label {
        font-weight: bold;
      }
