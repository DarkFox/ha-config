card:
  type: custom:layout-card
  layout_type: custom:grid-layout
  layout:
    grid-template-columns: 20% auto
    grid-template-rows: auto
    grid-template-areas: |
      "icon timer"
  cards:
    - type: custom:button-card
      entity: "[[entity]]"
      show_name: false
      show_state: false
      triggers_update: all
      tap_action:
        action: call-service
        service: >-
          [[[
            if (states['input_boolean.timer_'+('[[entity]]'.replace('timer.', '')) + '_finished'].state == 'on') 
              return 'input_boolean.turn_off';
            else
              return states['[[entity]]'].state == 'active' ? 'timer.pause' : 'timer.start'
          ]]]
        service_data:
          entity_id: >-
            [[[
              if (states['input_boolean.timer_'+('[[entity]]'.replace('timer.', '')) + '_finished'].state == 'on') 
                return 'input_boolean.timer_' + ('[[entity]]'.replace('timer.', '')) + '_finished';
              else
                return '[[entity]]';
            ]]]
      hold_action:
        action: call-service
        service: timer.cancel
        service_data:
          entity_id: "[[entity]]"
      styles:
        state:
          - font-size: 50pt
        icon:
          - color: >-
              [[[
                switch(states['sensor.timer_'+('[[entity]]'.replace('timer.', '')) + '_state'].state) {
                  case 'active':
                    return "#FFFFFFFF";
                    break;
                  case 'paused':
                    return "#000000FF";
                    break;
                  case 'finished':
                    return "#FFFFFFFF";
                    break;
                  case 'idle':
                    return "var(--icon-primary-color, currentcolor)"
                    break;
                  default:
                    return "var(--icon-primary-color, currentcolor)"
                }
              ]]]
        card:
          - height: 100%
          - background-color: >-
              [[[
                switch(states['sensor.timer_'+('[[entity]]'.replace('timer.', '')) + '_state'].state) {
                  case 'active':
                    return "#FF2600AA";
                    break;
                  case 'paused':
                    return "#FFD500AA";
                    break;
                  case 'finished':
                    return "#8EFA00AA";
                    break;
                  case 'idle':
                    return "var(--ha-card-background)"
                    break;
                  default:
                    return "var(--ha-card-background)"
                }
              ]]]
      view_layout:
        grid-area: icon
    - type: custom:flipdown-timer-card
      entity: "[[entity]]"
      theme: light
      localize:
        button: Start, Pause, Stop, Forts√¶t, Nulstil
      view_layout:
        grid-area: timer
