title: Arbejde
path: work
icon: mdi:briefcase
type: custom:grid-layout
layout:
  grid-template-columns: 33.3% 33.3% 33.3%
  grid-template-rows: auto
  grid-template-areas: |
    "header header header"
    "left middle right"
  mediaquery:
    "(max-width: 800px)":
      grid-template-columns: 100%
      grid-template-areas: |
        "header"
        "left"
        "middle"
        "right"
    "(max-width: 1200px)":
      grid-template-columns: 50% 50%
      grid-template-areas: |
        "header header"
        "left middle"
        "right right"
cards:
  - type: vertical-stack
    cards:
      - !include ../cards/compact_clock.yaml

      - type: conditional
        conditions:
          - entity: sensor.current_work_call
            state_not: ""
        card:
          type: custom:button-card
          entity: sensor.current_work_call
          icon: mdi:card-account-phone-outline
          show_icon: true
          show_state: true
          show_label: true
          show_name: true
          layout: icon_state_name2nd
          name: |
            [[[
              var caller_info = states['sensor.current_work_call'].attributes.caller_info;
              if (caller_info.title == null && caller_info.organization == null)
                return '';
              else if (caller_info.title == null)
                return caller_info.organization;
              else if (caller_info.organization == null)
                return caller_info.title;
              else
                return states['sensor.current_work_call'].attributes.caller_info.title + ' - ' + states['sensor.current_work_call'].attributes.caller_info.organization
            ]]]
          label: "[[[ return states['sensor.current_work_call'].attributes.caller_info.name ]]]"
          styles:
            label:
              - font-size: 1.5em
              - font-weight: bold
              - color: var(--primary-text-color)

      - type: horizontal-stack
        cards:
          - type: custom:button-card
            entity: sensor.puzzel_state
            label: "[[[ return states['sensor.puzzel_state'].state == 'Logget af' ? '' : states['sensor.puzzel_ko'].state ]]]"
            icon: mdi:phone
            layout: icon_state_name2nd
            show_name: false
            show_state: true
            show_label: true
            tap_action:
              action: call-service
              service: switch.toggle
              service_data:
                entity_id: switch.puzzel
            state:
              - value: "Ledig"
                color: var(--label-badge-green)
              - value: "Logget af"
                color: var(--label-badge-red)
                icon: mdi:phone-off
              - value: "Pause"
                color: var(--label-badge-yellow)
                icon: mdi:phone-paused
            styles:
              card:
                - height: 100px
                - flex-grow: 1
                - margin-right: 10px # Add some margin for spacing

          - type: custom:button-card
            entity: automation.puzzel_robot
            show_name: false
            show_state: false
            color_type: auto
            tap_action:
              action: call-service
              service: automation.toggle
              service_data:
                entity_id: automation.puzzel_robot
            styles:
              card:
                - aspect-ratio: 1/1
                - height: 100px
                - width: 100px

      - type: entities
        card_mod:
          style:
            fold-entity-row$:
              .: |
                div#head ha-icon {
                  margin-top: 0;
                }
        entities:
          - type: custom:auto-entities
            card:
              type: custom:fold-entity-row
              padding: 0
              open: true
              head:
                type: section
                label: "Profiler"
                card_mod:
                  style:
                    .: |
                      .divider {
                        display: none;
                      }
            # Trigger on changes to sensor.puzzel_ko
            filter:
              template: |
                {% set profiles = (
                  state_attr('sensor.puzzel_ko', 'available_profiles')
                ) %}
                {% set current_profile = state_attr('sensor.puzzel_ko', 'profile_id') or [] %}
                {% set expected_profile_ids = state_attr('binary_sensor.puzzel_expected_state', 'any') | map(attribute='id') | list %}
                {% set ns = namespace(ret=[]) %}
                {% for profile in profiles %}
                  {% set ns.ret = ns.ret + [
                    {
                      "type": "button",
                      "name": profile.name,
                      "icon": ("mdi:menu-open" if profile.id == current_profile else ("mdi:menu-close" if profile.id in expected_profile_ids else "mdi:menu")),
                      "action_name": ("Log ind" if profile.id != current_profile else " "),
                      "tap_action": {
                          "action": "call-service",
                          "service": "script.puzzel_log_on",
                          "data": {
                            "queue_id": profile.id
                          }
                      }
                    }
                  ] %}
                {% endfor %}
                {{ ns.ret }}

      - type: conditional
        conditions:
          - entity: sensor.reverse_work_call_log
            state_not: "0"
        card:
          type: custom:stack-in-card
          mode: vertical
          cards:
            - type: custom:list-card
              entity: sensor.reverse_work_call_log
              title: Opkaldslog
              feed_attribute: call_log
              row_limit: 5
              columns:
                - title: Tid
                  field: diff
                - title: Nummer
                  field: formatted_phone
                  style:
                    - white-space: nowrap
                    - text-align: center
                - title: Navn
                  field: name
                  style:
                    - text-align: center
                - title: Svar
                  field: picked_up
                  style:
                    - text-align: right

            - type: custom:button-card
              entity: sensor.reverse_work_call_log
              icon: mdi:delete
              name: Ryd log
              show_icon: true
              show_name: true
              layout: icon_name
              size: 30px
              tap_action:
                action: call-service
                service: script.clear_work_call_log
                confirmation:
                  text: "Er du sikker på at du vil rydde loggen?"
              styles:
                card:
                  - padding: 1% 0
                icon:
                  - margin: 0 0 0 auto
                name:
                  - margin: 0 auto 0 15%

  - type: vertical-stack
    cards:
      - type: custom:button-card
        entity: sensor.next_work_event
        icon: mdi:calendar-clock
        show_icon: true
        show_state: true
        show_label: true
        show_name: true
        layout: icon_name_state2nd
        # Label = attributes.start_time
        name: "[[[ return states['sensor.next_work_event'].attributes.start_time ]]]"
        label: |
          [[[
            let event = states['sensor.2nd_next_work_event'];
            if (!['Ingen', 'unavailable', 'unknown'].includes(event.state))
              return event.attributes.start_time + '<br />' + event.state;
            else
              return '';
          ]]]
        styles:
          name:
            - font-size: 1.5em
            - font-weight: bold
            - color: var(--primary-text-color)
          label:
            - font-size: 0.8em
            - font-weight: normal
            - color: var(--primary-text-color)
            - border-top: 1px solid var(--primary-text-color)

      - !include ../cards/gdq/compact_overview.yaml

      - !include ../cards/calendar_work.yaml

      - type: conditional
        conditions:
          - entity: binary_sensor.octoprint_printing
            state: "on"
        card: !include ../cards/3d_printer/preview.yaml

  - type: vertical-stack
    cards:
      - !include ../cards/transport/car.yaml
      - type: conditional
        conditions:
          - entity: binary_sensor.show_parking_limit
            state: "on"
        card:
          type: entities
          entities:
            - entity: sensor.parking_limit
              name: Parkering udløber

      - !include ../cards/weather/weather_forecast.yaml
