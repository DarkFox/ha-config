title: GDQ
path: gdq
icon: mdi:gamepad-right
type: custom:grid-layout
layout:
  place-items: stretch stretch
  grid-template-columns: 26.66% 26.66% 26.66% 20%
  grid-template-rows: auto
  grid-template-areas: |
    "on_deck  up_next        next_watch donation_total"
    "all_runs upcoming_watch bids       sidebar"
  mediaquery:
    "(max-width: 800px)":
      grid-template-columns: 100%
      grid-template-areas: |
        "on_deck"
        "up_next"
        "next_watch"
        "donation_total"
        "bids"
        "all_runs"
        "upcoming_watch"
        "sidebar"
    "(max-width: 1200px)":
      grid-template-columns: 50% 50%
      grid-template-areas: |
        "on_deck up_next"
        "next_watch donation_total"
        "all_runs upcoming_watch"
        "bids sidebar"
cards:
  - type: vertical-stack
    view_layout:
      grid-area: on_deck
    cards:
      - !include ../cards/gdq/on_deck.yaml

  - type: vertical-stack
    view_layout:
      grid-area: up_next
    cards:
      - !include ../cards/gdq/up_next.yaml

  - type: vertical-stack
    view_layout:
      grid-area: next_watch
    cards:
      - !include ../cards/gdq/next_to_watch.yaml

  - type: custom:mini-graph-card
    entities:
      - entity: sensor.gdq_donation_total
    hours_to_show: 24
    points_per_hour: 30
    line_color: var(--success-color)
    line_width: 3
    font_size: 75
    decimals: 0
    height: 140
    show:
      name: false
      icon: false
      labels: true
    tap_action:
      action: fire-dom-event
      browser_mod:
        service: browser_mod.javascript
        data:
          code: "window.open('https://gdqstats.com/', '_blank');"
    view_layout:
      grid-area: donation_total
    card_mod:
      style:
        .: |
          :host {
            height: 100%;
          }

  - type: custom:config-template-card
    entities:
      - sensor.gdq_runs_regex
      - calendar.gdq_schedule
      - sensor.gdq_on_deck
    config_templates: default
    variables:
      RUNS_REGEX: states["sensor.gdq_runs_regex"].attributes.regex
    view_layout:
      grid-area: all_runs
    card:
      type: custom:atomic-calendar-revive
      name: All runs
      eventDateFormat: ddd
      showProgressBar: true
      hideDeclined: true
      hideFinishedEvents: true
      showLocation: false
      showDescription: true
      showEventIcon: true
      disableEventLink: true
      maxDaysToShow: 7
      entities:
        - name: Runs to watch
          entity: calendar.gdq_schedule
          allowlist: ${RUNS_REGEX}
          icon: mdi:gamepad-right
          color: var(--success-color)
        - name: Other runs
          entity: calendar.gdq_schedule
          blocklist: ${RUNS_REGEX}
          icon: mdi:gamepad-right
      card_mod:
        style:
          .: |
            ha-card {
              max-height: 750px;
              overflow-y: scroll;
            }
            .single-event-container {
              grid-template-columns: 0.5fr 100fr !important;
              padding-top: 5px;
              padding-bottom: 5px;
              border-bottom: 1px dotted #aaa;
            }
            .event-left {
              width: min-content !important;
            }
            .event-title {
              font-weight: bold;
              font-size: 1.2em;
            }

  - type: custom:config-template-card
    entities:
      - sensor.gdq_runs_regex
      - calendar.gdq_schedule
      - sensor.gdq_on_deck
    config_templates: default
    variables:
      RUNS_REGEX: states["sensor.gdq_runs_regex"].attributes.regex
    view_layout:
      grid-area: upcoming_watch
    card:
      type: custom:atomic-calendar-revive
      name: Upcoming runs to watch
      eventDateFormat: ddd
      showProgressBar: true
      hideDeclined: true
      hideFinishedEvents: true
      showLocation: false
      showDescription: true
      showEventIcon: true
      disableEventLink: true
      maxDaysToShow: 7
      entities:
        - entity: calendar.gdq_schedule
          allowlist: ${RUNS_REGEX}
          icon: mdi:gamepad-right
          color: var(--success-color)
      card_mod:
        style:
          .: |
            ha-card {
              max-height: 750px;
              overflow-y: scroll;
            }
            .single-event-container {
              grid-template-columns: 0.5fr 100fr !important;
              padding-top: 5px;
              padding-bottom: 5px;
              border-bottom: 1px dotted #aaa;
            }
            .event-left {
              width: min-content !important;
            }
            .event-title {
              font-weight: bold;
              font-size: 1.2em;
            }

  - type: custom:auto-entities
    view_layout:
      grid-area: bids
    card:
      type: custom:stack-in-card
      title: Challenges & Bid Wars
      keep:
        background: true
        box_shadow: true
        margin: true
      card_mod:
        style:
          $: |
            h1.card-header {
              padding: 12px 16px 8px;
              margin-bottom: -12px;
            }
          .: |
            ha-card > div {
              max-height: 694px;
              overflow-y: scroll;
            }
    card_param: cards
    filter:
      template: |
        {% from 'utils.jinja' import slugify, format_number, sort_list_by_attr %}
        {% set games = state_attr('binary_sensor.gdq_calendar', 'events') | map(attribute='summary') | list %}
        {% set ns = namespace(
          ret=[],
          options=[],
          custom_fields={},
          custom_fields_styles={}
        ) %}
        {% set challenges = state_attr('sensor.gdq_bids', 'challenges') %}
        {% for bid in challenges %}
          {% set ns.ret = ns.ret + [{
            "type": "custom:button-card",
            "name": bid.name,
            "label": bid.run,
            "icon": ("mdi:flag" if bid.amount < bid.goal else "mdi:flag-checkered"),
            "state_display": "$"+ format_number(bid.amount, 2, true) +" / $"+ format_number(bid.goal, 2, true),
            "custom_fields": {
              "percent": format_number(bid.percent, 1, true) + "%"
            },
            "layout": "icon_state_name2nd",
            "show_label": true,
            "show_state": true,
            "styles": {
              "card": [
                {"background-color": "var(--input-fill-color)"}
              ],
              "grid": [
                {"grid-template-areas": '"i s" "i n" "i l" "percent percent"'},
              ],
              "icon": [
                {"color": ("var(--label-badge-yellow)" if bid.percent < 100 else "var(--label-badge-green)")}
              ],
              "name": [
                {"text-overflow": "unset"},
                {"white-space": "normal"}
              ],
              "label": [
                {"text-overflow": "unset"},
                {"white-space": "normal"}
              ],
              "custom_fields": {
                "percent": [
                  {"width": (bid.percent if bid.percent < 100 else 100)|string + "%"},
                  {"height": "1.2em"},
                  {"margin": "0 auto -4% 0"},
                  {"border-top": "1px solid var(--input-outlined-idle-border-color)"},
                  {"padding-left": "5px"},
                  {"overflow": "visible"},
                  {"background-color": ("var(--label-badge-blue)" if bid.percent < 100 else "var(--label-badge-green)")},
                  {"text-align": "left"},
                  {"font-weight": "bold"},
                  {"-webkit-text-fill-color": "var(--text-primary-color)"},
                  {"-webkit-text-stroke": "0.05em var(--text-light-primary-color)"}
                ]
              },
            },
            "tap_action": {
              "action": "url",
              "url_path": bid.link
            },
          }] %}
        {% endfor %}

        {% set bid_wars = state_attr('sensor.gdq_bids', 'bid_wars') %}
        {% for bid in bid_wars %}
          {% set ns.options = [] %}
          {% set ns.custom_fields = {} %}
          {% set ns.custom_fields_styles = {} %}
          {% for option in bid.options %}
            {% set slug = slugify(option.name) %}
            {% set ns.options = ns.options + ['"'+slug+' '+slug+'"'] %}
            {% set ns.custom_fields = dict(ns.custom_fields, **{
              slug+'_bar': ' ',
              slug: option.name +" - $"+format_number(option.amount, 2, true),
            }) %}
            {% set ns.custom_fields_styles = dict(ns.custom_fields_styles, **{
              slug: [
                {"width": (option.percent if option.percent < 100 else 100)|string + "%"},
                {"height": "1.4em"},
                {"overflow": "visible"},
                {"margin": "2px auto -4% 0" if loop.last else "2px auto 0 0"},
                {"padding-left": "5px"},
                {"background-color": ("var(--label-badge-green)" if loop.first else "var(--label-badge-blue)")},
                {"border-top": "1px solid var(--input-outlined-idle-border-color)"},
                {"border-bottom": ("1px solid var(--input-outlined-idle-border-color)" if not loop.last else "none")},
                {"text-align": "left"},
                {"font-weight": "bold"},
                {"-webkit-text-fill-color": "var(--text-primary-color)"},
                {"-webkit-text-stroke": "0.05em var(--text-light-primary-color)"}
              ]
            }) %}
          {% endfor %}
          {% set custom_areas = ns.options | join(" ") %}
          {% set ns.ret = ns.ret + [{
            "type": "custom:button-card",
            "name": bid.name,
            "label": bid.run,
            "icon": "mdi:sword-cross",
            "state_display": "$"+ (bid.amount|string),
            "custom_fields": ns.custom_fields,
            "layout": "icon_state_name2nd",
            "show_label": true,
            "show_state": true,
            "styles": {
              "card": [
                {"background-color": "var(--input-fill-color)"}
              ],
              "grid": [
                {"grid-template-areas": '"i s" "i n" "i l" ' + custom_areas},
              ],
              "icon": [
                {"color": "var(--label-badge-blue)"}
              ],
              "name": [
                {"text-overflow": "unset"},
                {"white-space": "normal"}
              ],
              "label": [
                {"text-overflow": "unset"},
                {"white-space": "normal"}
              ],
              "custom_fields": ns.custom_fields_styles,
            },
            "tap_action": {
              "action": "url",
              "url_path": bid.link
            },
          }] %}
        {% endfor %}

        {{ 
          sort_list_by_attr(ns.ret, 'label', games) if ns.ret | length > 0 else [{
            "type": "custom:button-card",
            "name": "No challenges or bid wars right now",
          }]
        }}

  - type: vertical-stack
    view_layout:
      grid-area: sidebar
    cards:
      - type: horizontal-stack
        cards:
          - type: custom:button-card
            aspect_ratio: 1/1
            name: Donate
            icon: mdi:cash
            color: var(--success-color)
            tap_action:
              action: url
              url_path: https://tracker.gamesdonequick.com/tracker/ui/donate/48
          - type: custom:button-card
            aspect_ratio: 1/1
            name: Prizes
            icon: mdi:gift
            color: var(--blue-color)
            tap_action:
              action: url
              url_path: https://tracker.gamesdonequick.com/tracker/ui/events/48/prizes
          - type: custom:button-card
            aspect_ratio: 1/1
            entity: script.refresh_gdq_agenda
            name: Refresh
            tap_action:
              action: call-service
              service: script.refresh_gdq_agenda
          - type: custom:button-card
            aspect_ratio: 1/1
            entity: input_boolean.gdq_enable
            name: GDQ Mode
            icon: mdi:robot
            tap_action:
              action: toggle
            hold_action:
              action: more-info
              entity: group.gdq_automations

      - type: todo-list
        title: Watchlist
        entity: todo.gdq_runs
        card_mod:
          style:
            .: |
              ha-card {
                max-height: 652px;
                overflow-y: scroll;
              }
