title: GDQ
path: gdq
icon: mdi:gamepad-right
type: custom:grid-layout
layout:
  place-items: stretch stretch
  grid-template-columns: 26.66% 26.66% 26.66% 20%
  grid-template-rows: auto
  grid-template-areas: |
    "event    event          event      donation_total"
    "on_deck  up_next        next_watch donation_graph"
    "all_runs upcoming_watch bids       sidebar"
  mediaquery:
    "(max-width: 800px)":
      grid-template-columns: 100%
      grid-template-areas: |
        "event"
        "on_deck"
        "up_next"
        "next_watch"
        "donation_total"
        "donation_graph"
        "bids"
        "all_runs"
        "upcoming_watch"
        "sidebar"
    "(max-width: 1200px)":
      grid-template-columns: 25% 25% 25% 25%
      grid-template-areas: |
        "event event event donation_total"
        "on_deck on_deck donation_graph donation_graph"
        "up_next up_next next_watch next_watch"
        "all_runs all_runs upcoming_watch upcoming_watch"
        "bids bids sidebar sidebar"

cards:
  - type: custom:html-card
    view_layout:
      grid-area: event
    content: >-
      <a
        href="[[ sensor.gdq_event.attributes.url ]]"
        target="_blank"
        style="
          text-decoration: none;
          color: var(--primary-text-color);
          margin: 0;
          padding: 0;
          display: block;
        "
      >
        <h1 style="
          width: 100%;
          text-align: center;
          margin: 0;
          padding: 0;
        ">
            [[ sensor.gdq_event.attributes.start_date ]] - [[ sensor.gdq_event.attributes.end_date ]]: [[ sensor.gdq_event ]]
        </h1>
      </a>

  - type: vertical-stack
    view_layout:
      grid-area: on_deck
    cards:
      - !include ../cards/gdq/on_deck.yaml

  - type: vertical-stack
    view_layout:
      grid-area: up_next
    cards:
      - !include ../cards/gdq/up_next.yaml

  - type: vertical-stack
    view_layout:
      grid-area: next_watch
    cards:
      - !include ../cards/gdq/next_to_watch.yaml

  - type: custom:html-card
    view_layout:
      grid-area: donation_total
    content: >-
      <a
        href="[[ sensor.gdq_event.attributes.donation_url ]]"
        target="_blank"
        style="
          text-decoration: none;
          color: var(--primary-text-color);
          margin: 0;
          padding: 0;
          display: block;
        "
      >
        <h1 style="
          width: 100%;
          text-align: center;
          margin: 0;
          padding: 0;
        ">
            $[[ sensor.gdq_donation_total.attributes.formatted_total ]]
        </h1>
      </a>

  - type: custom:apexcharts-card
    view_layout:
      grid-area: donation_graph
    graph_span: 24h
    apex_config:
      chart:
        height: 192px
        offsetX: -2
        sparkline:
          enabled: true
      legend:
        show: true
    yaxis:
      - id: total
        apex_config:
          labels:
            show: false
      - id: donations
        apex_config:
          labels:
            show: false
    all_series_config:
      stroke_width: 3
      curve: smooth
      fill_raw: last
    series:
      - entity: sensor.gdq_donation_total
        yaxis_id: total
        name: Total
        type: area
        color: var(--success-color)
        opacity: 0.2
        show:
          legend_value: false
      - entity: sensor.gdq_donation_total
        yaxis_id: donations
        name: Donations
        unit: donations
        attribute: count
        type: line
        stroke_width: 1
        color: var(--primary-color)
    card_mod:
      style:
        .: |
          :host, ha-card, .wrapper, #graph {
            height: 100%;
          }
          .apexcharts-canvas {
            position: absolute !important;
            bottom: 0px;
          }

  - type: custom:config-template-card
    entities:
      - sensor.gdq_runs_regex
      - calendar.gdq_schedule
      - sensor.gdq_on_deck
      - sensor.time
    config_templates: default
    variables:
      RUNS_REGEX: states["sensor.gdq_runs_regex"].attributes.regex
    view_layout:
      grid-area: all_runs
    card:
      type: custom:calendar-card-pro
      title: All runs
      title_font_size: "var(--ha-card-header-font-size, var(--ha-font-size-2xl))"
      show_progress_bar: true
      show_countdown: true
      show_location: false
      days_to_show: 14
      refresh_interval: 1
      height: 634px
      entities:
        - name: Runs to watch
          entity: calendar.gdq_schedule
          label: mdi:gamepad-right
          color: var(--success-color)
          allowlist: ${RUNS_REGEX}
        - name: Other runs
          entity: calendar.gdq_schedule
          label: mdi:gamepad-right
          blocklist: ${RUNS_REGEX}

  - type: custom:config-template-card
    entities:
      - sensor.gdq_runs_regex
      - calendar.gdq_schedule
      - sensor.gdq_on_deck
      - sensor.time
    config_templates: default
    variables:
      RUNS_REGEX: states["sensor.gdq_runs_regex"].attributes.regex
    view_layout:
      grid-area: upcoming_watch
    card:
      type: custom:calendar-card-pro
      title: Upcoming runs to watch
      title_font_size: "var(--ha-card-header-font-size, var(--ha-font-size-2xl))"
      show_progress_bar: true
      show_countdown: true
      show_location: false
      days_to_show: 14
      refresh_interval: 1
      height: 634px
      entities:
        - entity: calendar.gdq_schedule
          allowlist: ${RUNS_REGEX}
          label: mdi:gamepad-right
          color: var(--success-color)

  - type: custom:auto-entities
    view_layout:
      grid-area: bids
    card:
      type: custom:stack-in-card
      title: Challenges & Bid Wars
      keep:
        background: true
        box_shadow: true
        margin: true
      card_mod:
        style:
          $: |
            h1.card-header {
              padding: 12px 16px 8px;
              margin-bottom: -12px;
            }
          .: |
            ha-card > div {
              max-height: 665px;
              overflow-y: scroll;
            }
    card_param: cards
    filter:
      template: |
        {% from 'utils.jinja' import slugify, format_number, sort_list_by_attr %}
        {% set games = state_attr('binary_sensor.gdq_calendar', 'events') | map(attribute='summary') | list %}
        {% set ns = namespace(
          ret=[],
          options=[],
          custom_fields={},
          custom_fields_styles={}
        ) %}
        {% set milestones = state_attr('sensor.gdq_milestones', 'milestones') %}
        {% for bid in milestones %}
          {% set ns.ret = ns.ret + [{
            "type": "custom:button-card",
            "name": bid.name,
            "label": bid.run or '',
            "icon": ("mdi:bullseye" if bid.amount < bid.goal else "mdi:bullseye-arrow"),
            "state_display": "$"+ format_number(bid.amount, 2, true) +" / $"+ format_number(bid.goal, 2, true),
            "custom_fields": {
              "percent": format_number(bid.percent, 1, true) + "%"
            },
            "layout": "icon_state_name2nd",
            "show_label": true,
            "show_state": true,
            "styles": {
              "card": [
                {"background-color": "var(--input-fill-color)"}
              ],
              "grid": [
                {"grid-template-areas": '"i s" "i n" "i l" "percent percent"'},
              ],
              "icon": [
                {"color": ("var(--label-badge-yellow)" if bid.percent < 100 else "var(--label-badge-green)")}
              ],
              "name": [
                {"text-overflow": "unset"},
                {"white-space": "normal"}
              ],
              "label": [
                {"text-overflow": "unset"},
                {"white-space": "normal"}
              ],
              "custom_fields": {
                "percent": [
                  {"width": (bid.percent if bid.percent < 100 else 100)|string + "%"},
                  {"height": "1.2em"},
                  {"margin": "0 auto -4% 0"},
                  {"border-top": "1px solid var(--input-outlined-idle-border-color)"},
                  {"padding-left": "5px"},
                  {"overflow": "visible"},
                  {"background-color": ("var(--label-badge-blue)" if bid.percent < 100 else "var(--label-badge-green)")},
                  {"text-align": "left"},
                  {"font-weight": "bold"},
                  {"-webkit-text-fill-color": "var(--text-primary-color)"},
                  {"-webkit-text-stroke": "0.05em var(--text-light-primary-color)"}
                ]
              },
            },
          }] %}
        {% endfor %}

        {% set challenges = state_attr('sensor.gdq_bids', 'challenges') %}
        {% for bid in challenges %}
          {% set ns.ret = ns.ret + [{
            "type": "custom:button-card",
            "name": bid.name,
            "label": bid.run,
            "icon": ("mdi:flag" if bid.amount < bid.goal else "mdi:flag-checkered"),
            "state_display": "$"+ format_number(bid.amount, 2, true) +" / $"+ format_number(bid.goal, 2, true),
            "custom_fields": {
              "percent": format_number(bid.percent, 1, true) + "%"
            },
            "layout": "icon_state_name2nd",
            "show_label": true,
            "show_state": true,
            "styles": {
              "card": [
                {"background-color": "var(--input-fill-color)"}
              ],
              "grid": [
                {"grid-template-areas": '"i s" "i n" "i l" "percent percent"'},
              ],
              "icon": [
                {"color": ("var(--label-badge-yellow)" if bid.percent < 100 else "var(--label-badge-green)")}
              ],
              "name": [
                {"text-overflow": "unset"},
                {"white-space": "normal"}
              ],
              "label": [
                {"text-overflow": "unset"},
                {"white-space": "normal"}
              ],
              "custom_fields": {
                "percent": [
                  {"width": (bid.percent if bid.percent < 100 else 100)|string + "%"},
                  {"height": "1.2em"},
                  {"margin": "0 auto -4% 0"},
                  {"border-top": "1px solid var(--input-outlined-idle-border-color)"},
                  {"padding-left": "5px"},
                  {"overflow": "visible"},
                  {"background-color": ("var(--label-badge-blue)" if bid.percent < 100 else "var(--label-badge-green)")},
                  {"text-align": "left"},
                  {"font-weight": "bold"},
                  {"-webkit-text-fill-color": "var(--text-primary-color)"},
                  {"-webkit-text-stroke": "0.05em var(--text-light-primary-color)"}
                ]
              },
            },
            "tap_action": {
              "action": "url",
              "url_path": bid.link
            },
          }] %}
        {% endfor %}

        {% set bid_wars = state_attr('sensor.gdq_bids', 'bid_wars') %}
        {% for bid in bid_wars %}
          {% set ns.options = [] %}
          {% set ns.custom_fields = {} %}
          {% set ns.custom_fields_styles = {} %}
          {% for option in bid.options %}
            {% set slug = slugify(option.name) %}
            {% set ns.options = ns.options + ['"'+slug+' '+slug+'"'] %}
            {% set ns.custom_fields = dict(ns.custom_fields, **{
              slug+'_bar': ' ',
              slug: option.name +" - $"+format_number(option.amount, 2, true),
            }) %}
            {% set ns.custom_fields_styles = dict(ns.custom_fields_styles, **{
              slug: [
                {"width": (option.percent if option.percent < 100 else 100)|string + "%"},
                {"height": "1.4em"},
                {"overflow": "visible"},
                {"margin": "2px auto -4% 0" if loop.last else "2px auto 0 0"},
                {"padding-left": "5px"},
                {"background-color": ("var(--label-badge-green)" if loop.first else "var(--label-badge-blue)")},
                {"border-top": "1px solid var(--input-outlined-idle-border-color)"},
                {"border-bottom": ("1px solid var(--input-outlined-idle-border-color)" if not loop.last else "none")},
                {"text-align": "left"},
                {"font-weight": "bold"},
                {"-webkit-text-fill-color": "var(--text-primary-color)"},
                {"-webkit-text-stroke": "0.05em var(--text-light-primary-color)"}
              ]
            }) %}
          {% endfor %}
          {% set custom_areas = ns.options | join(" ") %}
          {% set ns.ret = ns.ret + [{
            "type": "custom:button-card",
            "name": bid.name,
            "label": bid.run,
            "icon": "mdi:sword-cross",
            "state_display": "$"+ (bid.amount|string),
            "custom_fields": ns.custom_fields,
            "layout": "icon_state_name2nd",
            "show_label": true,
            "show_state": true,
            "styles": {
              "card": [
                {"background-color": "var(--input-fill-color)"}
              ],
              "grid": [
                {"grid-template-areas": '"i s" "i n" "i l" ' + custom_areas},
              ],
              "icon": [
                {"color": "var(--label-badge-blue)"}
              ],
              "name": [
                {"text-overflow": "unset"},
                {"white-space": "normal"}
              ],
              "label": [
                {"text-overflow": "unset"},
                {"white-space": "normal"}
              ],
              "custom_fields": ns.custom_fields_styles,
            },
            "tap_action": {
              "action": "url",
              "url_path": bid.link
            },
          }] %}
        {% endfor %}

        {{ 
          sort_list_by_attr(ns.ret, 'label', games, True) if ns.ret | length > 0 else [{
            "type": "custom:button-card",
            "name": "No challenges or bid wars right now",
          }]
        }}

  - type: vertical-stack
    view_layout:
      grid-area: sidebar
    cards:
      - type: horizontal-stack
        cards:
          - type: custom:config-template-card
            entities:
              - sensor.gdq_event
            config_templates: default
            variables:
              URL: states["sensor.gdq_event"].attributes.donation_url
            card:
              type: custom:button-card
              aspect_ratio: 1/1
              name: Donate
              icon: mdi:cash
              color: var(--success-color)
              tap_action:
                action: url
                url_path: ${URL}
          - type: custom:config-template-card
            entities:
              - sensor.gdq_event
            config_templates: default
            variables:
              URL: states["sensor.gdq_event"].attributes.prizes_url
            card:
              type: custom:button-card
              aspect_ratio: 1/1
              name: Prizes
              icon: mdi:gift
              color: var(--blue-color)
              tap_action:
                action: url
                url_path: ${URL}
          - type: custom:button-card
            aspect_ratio: 1/1
            entity: script.refresh_gdq_agenda
            name: Refresh
            tap_action:
              action: call-service
              service: script.refresh_gdq_agenda
          - type: custom:button-card
            aspect_ratio: 1/1
            entity: group.gdq_automations
            name: Enable
            icon: mdi:gamepad-right
            tap_action:
              action: toggle
            hold_action:
              action: more-info
              entity: group.gdq_automations

      - type: todo-list
        title: Watchlist
        entity: todo.gdq_runs
        card_mod:
          style:
            .: |
              ha-card {
                max-height: 652px;
                overflow-y: scroll;
              }
