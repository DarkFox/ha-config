substitutions:
  devicename: vitrineskab_farve
  upper_devicename: Vitrineskab Farve

esphome:
  name: $devicename
  platform: ESP8266
  board: d1_mini

wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_pass

# Set logger to NOT default pins because we are using RX and TX for driving LEDs

logger:
  hardware_uart: uart1
# Enable Home Assistant API with password
api:
  password: !secret api_pass

ota:
  password: !secret ota_pass

# Defines onboard temperature sensor
dallas:
  - pin: 14

# Define LED strip connected and amount of LEDS
light:
  - platform: fastled_clockless
    chipset: ws2812b
    pin: GPIO2
    num_leds: 24
    rgb_order: GRB
    id: vitrineskab_top
    name: Vitrineskab Top
    effects:
      - random:
      - strobe:
      - flicker:

      - lambda:
          name: Rainbow
          update_interval: 1s
          lambda: |-
            static int state = 0;
            auto call = id(vitrineskab_top).turn_on();
            // Transtion of 1000ms = 1s
            call.set_transition_length(1000);
            if (state == 0) {
              call.set_rgb(1.0, 0.0, 0.0);
            } else if (state == 1) {
              call.set_rgb(1.0, 0.3, 0.0);
            } else if (state == 2) {
              call.set_rgb(1.0, 0.7, 0.0);
            } else if (state == 3) {
              call.set_rgb(0.7, 1.0, 0.0);
            } else if (state == 4) {
              call.set_rgb(0.3, 1.0, 0.0);
            } else if (state == 5) {
              call.set_rgb(0.0, 1.0, 0.0);
            } else if (state == 6) {
              call.set_rgb(0.0, 1.0, 0.3);
            } else if (state == 7) {
              call.set_rgb(0.0, 1.0, 0.7);
            } else if (state == 8) {
              call.set_rgb(0.0, 1.0, 1.0);
            } else if (state == 9) {
              call.set_rgb(0.0, 0.7, 1.0);
            } else if (state == 10) {
              call.set_rgb(0.0, 0.3, 1.0);
            } else if (state == 11) {
              call.set_rgb(0.0, 0.0, 1.0);
            } else if (state == 12) {
              call.set_rgb(0.3, 0.0, 1.0);
            } else if (state == 13) {
              call.set_rgb(0.7, 0.0, 1.0);
            } else if (state == 14) {
              call.set_rgb(1.0, 0.0, 1.0);
            } else if (state == 15) {
              call.set_rgb(1.0, 0.0, 0.7);
            } else {
              call.set_rgb(1.0, 0.0, 0.3);
            }
            call.perform();
            state += 1;
            if (state == 17 )
              state = 0;

      - lambda:
          name: 4 Color Rotation
          update_interval: 1s
          lambda: |-
            static int state = 0;
            auto call = id(vitrineskab_top).turn_on();
            // Transtion of 1000ms = 1s
            call.set_transition_length(1000);
            if (state == 0) {
              call.set_rgb(1.0, 1.0, 1.0);
            } else if (state == 1) {
              call.set_rgb(1.0, 0.0, 1.0);
            } else if (state == 2) {
              call.set_rgb(0.0, 0.0, 1.0);
            } else {
              call.set_rgb(1.0, 0.0, 0.0);
            }
            call.perform();
            state += 1;
            if (state == 4)
              state = 0;

      - strobe:
          name: 3 Color Strobe
          colors:
            - state: True
              brightness: 100%
              red:  100%
              green: 0%
              blue: 0%
              duration: 500ms
            - state: True
              brightness: 100%
              red: 0%
              green: 0%
              blue: 100%
              duration: 500ms
            - state: True
              brightness: 100%
              red: 0%
              green: 100%
              blue: 0%
              duration: 500ms

      - strobe:
          name: Lightning
          colors:
            - state: True
              brightness: 100%
              red:  90%
              green: 90%
              blue: 100%
              duration: 50ms
            - state: False
              duration: 50ms 
            - state: True
              brightness: 100%
              red:  90%
              green: 90%
              blue: 100%
              duration: 160ms
            - state: False
              duration: 50ms              
            - state: True
              brightness: 100%
              red:  90%
              green: 90%
              blue: 100%
              duration: 50ms
            - state: False
              duration: 3000ms 


      - addressable_rainbow:
          name: Addressable Rainbow
      - addressable_color_wipe:
      - addressable_scan:
      - addressable_twinkle:
      - addressable_random_twinkle:
      - addressable_fireworks:
      - addressable_flicker:


  - platform: fastled_clockless
    chipset: ws2812b
    pin: GPIO1
    num_leds: 24
    rgb_order: GRB
    id: vitrineskab_bund
    name: Vitrineskab Bund
    effects:
      - random:
      - strobe:
      - flicker:

      - lambda:
          name: Rainbow
          update_interval: 1s
          lambda: |-
            static int state = 0;
            auto call = id(vitrineskab_bund).turn_on();
            // Transtion of 1000ms = 1s
            call.set_transition_length(1000);
            if (state == 0) {
              call.set_rgb(1.0, 0.0, 0.0);
            } else if (state == 1) {
              call.set_rgb(1.0, 0.3, 0.0);
            } else if (state == 2) {
              call.set_rgb(1.0, 0.7, 0.0);
            } else if (state == 3) {
              call.set_rgb(0.7, 1.0, 0.0);
            } else if (state == 4) {
              call.set_rgb(0.3, 1.0, 0.0);
            } else if (state == 5) {
              call.set_rgb(0.0, 1.0, 0.0);
            } else if (state == 6) {
              call.set_rgb(0.0, 1.0, 0.3);
            } else if (state == 7) {
              call.set_rgb(0.0, 1.0, 0.7);
            } else if (state == 8) {
              call.set_rgb(0.0, 1.0, 1.0);
            } else if (state == 9) {
              call.set_rgb(0.0, 0.7, 1.0);
            } else if (state == 10) {
              call.set_rgb(0.0, 0.3, 1.0);
            } else if (state == 11) {
              call.set_rgb(0.0, 0.0, 1.0);
            } else if (state == 12) {
              call.set_rgb(0.3, 0.0, 1.0);
            } else if (state == 13) {
              call.set_rgb(0.7, 0.0, 1.0);
            } else if (state == 14) {
              call.set_rgb(1.0, 0.0, 1.0);
            } else if (state == 15) {
              call.set_rgb(1.0, 0.0, 0.7);
            } else {
              call.set_rgb(1.0, 0.0, 0.3);
            }
            call.perform();
            state += 1;
            if (state == 17 )
              state = 0;

      - lambda:
          name: 4 Color Rotation
          update_interval: 1s
          lambda: |-
            static int state = 0;
            auto call = id(vitrineskab_bund).turn_on();
            // Transtion of 1000ms = 1s
            call.set_transition_length(1000);
            if (state == 0) {
              call.set_rgb(1.0, 1.0, 1.0);
            } else if (state == 1) {
              call.set_rgb(1.0, 0.0, 1.0);
            } else if (state == 2) {
              call.set_rgb(0.0, 0.0, 1.0);
            } else {
              call.set_rgb(1.0, 0.0, 0.0);
            }
            call.perform();
            state += 1;
            if (state == 4)
              state = 0;

      - strobe:
          name: 3 Color Strobe
          colors:
            - state: True
              brightness: 100%
              red:  100%
              green: 0%
              blue: 0%
              duration: 500ms
            - state: True
              brightness: 100%
              red: 0%
              green: 0%
              blue: 100%
              duration: 500ms
            - state: True
              brightness: 100%
              red: 0%
              green: 100%
              blue: 0%
              duration: 500ms

      - strobe:
          name: Lightning
          colors:
            - state: True
              brightness: 100%
              red:  90%
              green: 90%
              blue: 100%
              duration: 50ms
            - state: False
              duration: 50ms 
            - state: True
              brightness: 100%
              red:  90%
              green: 90%
              blue: 100%
              duration: 160ms
            - state: False
              duration: 50ms              
            - state: True
              brightness: 100%
              red:  90%
              green: 90%
              blue: 100%
              duration: 50ms
            - state: False
              duration: 3000ms 


      - addressable_rainbow:
          name: Addressable Rainbow
      - addressable_color_wipe:
      - addressable_scan:
      - addressable_twinkle:
      - addressable_random_twinkle:
      - addressable_fireworks:
      - addressable_flicker:


sensor:
  - platform: dallas
    index: 0
    name: "Vitrineskab Temperatur"
