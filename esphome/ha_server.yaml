substitutions:
  devicename: ha_server
  upper_devicename: HA Server
  restore_mode: ALWAYS_ON

packages:
  base: !include packages/base.yaml
  gosund: !include packages/gosund.yaml

wifi:
  reboot_timeout: 30min

script:
  - id: watch_api
    then:
      - if:
          condition:
            for:
              time: 15min
              condition:
                not:
                  api.connected:
          then:
            - if:
                condition:
                  switch.is_on: disable_watchdog
                then:
                  - logger.log: "Client disconnected for 15 minutes, watchdog is disabled"
                else:
                  - logger.log: "Client disconnected for 15 minutes, doing a hard restart"
                  - switch.turn_off: relay
                  - delay: 15s
                  - switch.turn_on: relay
                  - logger.log: "Restarted due to client disconnect. Disabling watchdog for 30 minutes"
                  - switch.turn_on: disable_watchdog
                  - delay: 30min
                  - switch.turn_off: disable_watchdog

api:
  reboot_timeout: 30min
  on_client_disconnected:
    - script.execute: watch_api

binary_sensor:
  - platform: status
    name: "HA Server Status"

switch:
  - platform: template
    name: "Disable Watchdog"
    id: disable_watchdog
    optimistic: true
    restore_mode: ALWAYS_ON
    on_turn_on:
      then:
        - logger.log: "Watchdog disabled"
    on_turn_off:
      then:
        - logger.log: "Watchdog enabled"
        - if:
            condition:
              not:
                api.connected:
            then:
              - script.execute: watch_api

esphome:
  on_boot:
    priority: 600  # Low priority to ensure other setups run first
    then:
      - delay: 30min
      - switch.turn_off: disable_watchdog
      - logger.log: "Watchdog enabled after 30 minutes"